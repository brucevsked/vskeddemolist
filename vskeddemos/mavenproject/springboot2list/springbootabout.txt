
spring boot2默认redis连接池lettuce
spring boot2默认数据库连接池hikari

命令启动与关闭
web模块,直接用jar包运行即可
nohup java -jar appserverwebadmin.jar &

远程断点连接
第一步启动参数中添加以下
java -jar -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5505 appserverwebadmin.jar
第二步myeclipse菜单中run->debug config->Remote Java Application
第三步填写服务器ip与调试端口号

 ps -ef|grep appserverwebadmin
 kill -9 pid

1* 集成shiro注意
在shiro的realm以及各操作类中不要注入service要注入dao(或mapper)

2* 关闭事务防止验证码类取不到值
spring boot+redis时要关闭redis事务

        //开启事务
//        redisTemplate.setEnableTransactionSupport(true); //验证码bug修正不要开启!!!

3*mybatis相关
mybatis:
  configuration:
    call-setters-on-nulls: true #是null值也返回
    local-cache-scope: SESSION #关闭一级缓存
    #cache-enabled: true #开启二级缓存
4* redis相关
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password: mima
    timeout: 10000

5*数据库连按
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/appserverdev?useUnicode=true&characterEncoding=utf8&allowMutiQueries=true&useTimezone=true&serverTimezone=GMT%2B8
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
6*开启热部署
  devtools:
    restart:
      enabled: true #设置开启热部署
pom文件
        <!-- spring boot devtools 第一步添加依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
            <scope>runtime</scope>
        </dependency>

            <!-- spring boot devtools 第二步添加maven插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!--fork如果没有该项配置,这个devtools不会起作用，即应用不会restart这个要手动加进去 -->
                    <fork>true</fork>
                </configuration>
            </plugin>
idea配置
当我们修改了Java类后，IDEA默认是不自动编译的，而spring-boot-devtools又是监测classpath下的文件发生变化才会重启应用，所以需要设置IDEA的自动编译：
（1）File-Settings-Build,Execution,Deployment-Compiler-Build Project automatically
（2）ctrl + shift + alt + /,选择Registry,勾上 Compiler autoMake allow when app running

修改类并测试即可

7* 默认tomcat最大连接数
server:
  port: 9010 #端口号
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000 #最大线程数
    max-connections: 20000 #最大连接数
  #servlet.context-path: /appserveruser  #项目名，如果不设定，默认是 /
8* 开启spring boot+mybatis二级缓存
application.yml
    cache-enabled: true #开启二级缓存
启动application添加注解
@EnableCaching

 service层方法上添加注解
	@Cacheable(cacheNames="appModuleListExt1")
9* thymeleaf相关
  thymeleaf:
    cache: false
    prefix=classpath:/templates/
    suffix=.html
    mode=HTML5
    encoding=UTF-8

10* 文件上传大小限制
  servlet:
    multipart:
      enabled: true
      max-file-size: 5000MB
      max-request-size: 5000MB

11* 关闭自动配置
第一种方式注解
@EnableAutoConfiguration(exclude = {org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration})
 
第二种方式配置文件

spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

12* spring boot devtools热部署
开启idea自动make功能 
第一步
gradle是这个
CTRL + SHIFT + A --> 查找 make project automatically --> 选中
maven是这个
CTRL + SHIFT + A --> 查找 build project automatically --> 选中
第二步
CTRL + SHIFT + A --> 查找 Registry --> 找到并勾选 compiler.automake.allow.when.app.running
第三步添加maven插件
            <!-- spring boot devtools 第二步添加maven插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!--fork如果没有该项配置,这个devtools不会起作用，即应用不会restart这个要手动加进去 -->
                    <fork>true</fork>
                </configuration>
            </plugin>
第四步添加maven依赖
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
            <scope>runtime</scope>
        </dependency>
并开启application.yml中配置
spring:
  devtools:
    restart:
      enabled: true #设置开启热部署
第五步重启idea

13* 优雅停机
在web容器关闭时web服务器不再接受新请求,并等待活动请求完成缓冲期，spring boot 2.3及以上支持
server.shutdown=graceful
