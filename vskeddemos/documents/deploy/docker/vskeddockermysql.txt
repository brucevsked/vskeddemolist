--------------------------------------------------------------------------------
docker 安装mysql8
拉取镜像
docker pull mysql
制作数据目录
mkdir -p /data/mysql/data
mkdir -p /data/mysql/log
mkdir -p /data/mysql/conf/
启动镜像单行版本
docker run --restart=always --name mymysql -d -p 3306:3306 -v /data/mysql/data:/var/lib/mysql:rw -v /data/mysql/log:/var/log/mysql:rw -v /data/mysql/conf/my.cnf:/etc/mysql/my.cnf -v /etc/localtime:/etc/localtime:ro -e MYSQL_ROOT_PASSWORD=Y4yhl9tbf110_ mysql mysqld --default-authentication-plugin=mysql_native_password
启动镜像多行版本
docker run --restart=always --name mymysql -d -p 3306:3306 \
    -v /data/mysql/data:/var/lib/mysql:rw \
    -v /data/mysql/log:/var/log/mysql:rw \
    -v /data/mysql/conf/my.cnf:/etc/mysql/my.cnf:rw \
    -v /etc/localtime:/etc/localtime:ro \
    -e MYSQL_ROOT_PASSWORD=Y4yhl9tbf110_ mysql mysqld \
    --default-authentication-plugin=mysql_native_password

初始化创建数据库(做统一初始化脚本时用，跟上同要一起用，不然就要把密码写上)
until docker exec -i mymysql sh -c 'exec mysql -uroot -p"$MYSQL_ROOT_PASSWORD" -e "CREATE DATABASE vskedtest DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci"' \
do \
  echo "wait" \
done
单独执行版本写法
docker exec -i mymysql sh -c 'exec mysql -uroot -p"Y4yhl9tbf110_" -e "CREATE DATABASE vskedtest DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci"'

初始化数据库(做统一初始化脚本时用，跟上同要一起用，不然就要把密码写上)
docker exec -i mymysql sh -c 'exec mysql -uroot -p"$MYSQL_ROOT_PASSWORD" appserverdev' < /opt/sql/appserverdev.sql

其他运行方式
docker run -itd --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root mysql:5.7.29
#--name 是容器名称

#-itd 后台运行

#-p 将容器端口映射到宿主机端口

#-e 设置相关参数，此处为mysql初始化密码

#mysql:5,7,29 是pull下来的镜像，可以使用docker images查看

--------------------------------------------------------------------------------
docker 安装mysql5

https://hub.docker.com/_/mysql?tab=tags

搜索组件
docker search mysql
docker pull mysql:5.7.32

建立数据目录与日志目录
mkdir -p /data/mysql5.7.32/data/
mkdir -p /data/mysql5.7.32/log/
mkdir -p /data/mysql5.7.32/conf/
vi /data/mysql5.7.32/conf/my.cnf
[client]
default-character-set = utf8mb4
[mysql]
# 设置mysql客户端默认字符集
default-character-set = utf8mb4
[mysqld]
# 设置3306端口
port = 3306
# 服务端使用的字符集默认为latin1
character-set-server = utf8mb4
# 创建新表时将使用的默认存储引擎
default-storage-engine = INNODB
# 让MySQL不区分大小写
lower_case_table_names=1

启动镜像多行版本(-itd 后台运行)
docker run --restart=always -itd --name mysql5732 -d -p 3306:3306 \
-v /data/mysql5.7.32/data:/var/lib/mysql:rw \
-v /data/mysql5.7.32/log:/var/log/mysql:rw \
-v /data/mysql5.7.32/conf/my.cnf:/etc/mysql/my.cnf:rw \
-v /etc/localtime:/etc/localtime:ro \
-e MYSQL_ROOT_PASSWORD=Y4yhl9tbf110_ \
mysql:5.7.32


进入docker容器查看
docker exec -it mysql5732 /bin/bash

再用命令行登录mysql
mysql -uroot -pY4yhl9tbf110_

--------------------------------------------------------------------------------
自定义配置文件版本
mkdir -p /data/mysql/conf/
vi /data/mysql/conf/my.cnf

docker run --restart=always --name mymysql -d -p 3306:3306 \
    -v /data/mysql/data:/var/lib/mysql:rw \
    -v /data/mysql/log:/var/log/mysql:rw \
    -v /data/mysql/conf/my.cnf:/etc/mysql/my.cnf \
    -v /etc/localtime:/etc/localtime:ro \
    -e MYSQL_ROOT_PASSWORD=Y4yhl9tbf110_ mysql mysqld \
    --default-authentication-plugin=mysql_native_password


docker mysql默认配置
[mysqld]
pid-file        = /var/run/mysqld/mysqld.pid
socket          = /var/run/mysqld/mysqld.sock
datadir         = /var/lib/mysql
#log-error      = /var/log/mysql/error.log
# By default we only accept connections from localhost
#bind-address   = 127.0.0.1
# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0
--------------------------------------------------------------------------------
还可以进入docker容器查看
docker exec -i -t mysql5.7.29 /bin/bash