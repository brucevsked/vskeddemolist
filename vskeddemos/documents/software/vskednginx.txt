
特别注意！
nginx中upstream中命名不允许带下划线

默认配置所在
/etc/nginx/nginx.conf
默认站点所在
/usr/share/nginx/html

--------------------------------------------------------------------------------linux版本
1* 查看版本号
/usr/local/nginx/sbin/nginx -V

2* 启动
systemctl start nginx.service
默认配置文件启动nginx
/usr/local/nginx/sbin/nginx
指定配置文件启动nginx
/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf

3* 停止
systemctl stop nginx.service 
/usr/local/nginx/sbin/nginx -s stop

4* 平滑重启
/usr/local/nginx/sbin/nginx -s reload

--------------------------------------------------------------------------------windows版本
1* 查看版本号
nginx.exe -V

2* 启动
进入cmd中
d:
cd D:\env\nginx-1.16.0

默认配置文件启动nginx
nginx.exe
指定配置文件启动nginx
nginx.exe -c D:\env\nginx-1.16.0\conf\nginxtest.conf

3* 停止
进入cmd中
d:
cd D:\env\nginx-1.16.0
快速关闭
nginx.exe -s stop
或
tasklist /fi "imagename eq nginx.exe"

正常关闭
nginx.exe -s quit

4* 平滑重启
nginx.exe -s reload



--------------------------------------------------------------------------------centos安装
yum install yum-utils
//如果报错就先用本机下载rpm包，上传到服务器上再安装
rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
yum install -y nginx

启动
systemctl start nginx.service
开机自动启动
systemctl enable nginx.service


--------------------------------------------------------------------------------

获取请求头中参数
$arg_参数名
示例
http://www.test.com/hell?id=1&name=2
取id参数
$arg_id

取header中的值
$http_参数名
如将id与name放到了header参数中
取id参数
$http_id


        location /test {
            add_header Content-Type 'text/html;charset=utf-8';
            return 200 "good test";
        }

        location /test1 {
            add_header Content-Type 'text/html;charset=utf-8'; 
            return 200 "key:$arg_attname";
        }

        location /test2 {
            
            if ($arg_attname ~ "(.+)"){
                #设置下载文件名
                        add_header Content-Type application/x-download;
                        add_header Content-Disposition "attachment;filename=$arg_attname";
            }

             add_header Content-Type 'text/html;charset=utf-8'; 
              return 200 "no this file";
            
        }



--------------------------------------------------------------------------------
单机模拟负载均衡
upstream mytomcat1{
server 10.0.193.11:8080 weight=1;
server 10.0.193.11:8081 weight=1;
server 10.0.193.11:8082 weight=1;
#ip_hash;
}


server {
    listen       80;
    location / {
        proxy_pass http://mytomcat1;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_connect_timeout 600; #nginx跟后端服务器连接超时时间(代理连接超时)
        proxy_read_timeout 600; #连接成功后，后端服务器响应时间(代理接收超时)
        proxy_send_timeout 600; #后端服务器数据回传时间(代理发送超时)
        proxy_buffer_size 32k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小
        proxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
        proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2）
        proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        index  index.html index.htm index.jsp;
    }


    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
--------------------------------------------------------------------------------
去掉访问地址第一段。

        location /prod-api {
            rewrite "^/prod-api/(.*)$" /$1 break;
            proxy_pass   http://127.0.0.1:8181;            
        }
--------------------------------------------------------------------------------