From: <Saved by Blink>
Snapshot-Content-Location: http://momentjs.cn/docs/#/parsing/
Subject: =?utf-8?Q?=E6=96=87=E6=A1=A3=20|=20Moment.js=20=E4=B8=AD=E6=96=87=E7=BD=91?=
Date: Fri, 21 Dec 2018 02:52:52 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--BZqnSCWLxFFn7kj0jvT0v79lIWIV21a0yTWiBQTBNi----"


------MultipartBoundary--BZqnSCWLxFFn7kj0jvT0v79lIWIV21a0yTWiBQTBNi----
Content-Type: text/html
Content-ID: <frame-987B6503F01D52E65A2D99215CA69359@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://momentjs.cn/docs/#/parsing/

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8">
     =20
     =20
      <!--<link href=3D'//fonts.useso.com/css?family=3DMontserrat:400,700' =
rel=3D'stylesheet' type=3D'text/css'>-->
      <link rel=3D"stylesheet" href=3D"http://s.nodejs.cn/moment/static/css=
/style.css">
      <link rel=3D"shortcut icon" href=3D"http://s.nodejs.cn/moment/static/=
img/moment-favicon.png">

      <title>=E6=96=87=E6=A1=A3 | Moment.js =E4=B8=AD=E6=96=87=E7=BD=91</ti=
tle>
	</head>

	<body class=3D"is-moment">
		<nav class=3D"nav">
			<div class=3D"centered">
				<div class=3D"nav-projects">
					<a class=3D"nav-project nav-project-moment active" href=3D"http://mome=
ntjs.cn/">
						<svg width=3D"40px" height=3D"40px" viewBox=3D"0 0 40 40">
							<ellipse stroke-width=3D"3" cx=3D"20" cy=3D"20" rx=3D"18.5" ry=3D"18=
.5" fill=3D"0" stroke=3D"#000"></ellipse>
							<path fill-rule=3D"evenodd" d=3D"M20,36 C28.836556,36 36,28.836556 3=
6,20 C36,11.163444 28.836556,4 20,4 C11.163444,4 4,11.163444 4,20 C4,28.836=
556 11.163444,36 20,36 Z M20,5 C19.4477153,5 19,5.44994876 19,6.00684547 L1=
9,19 L11.9970301,19 C11.4463856,19 11,19.4438648 11,20 C11,20.5522847 11.45=
56644,21 11.9953976,21 L21,21 L21,6.00087166 C21,5.4481055 20.5561352,5 20,=
5 Z"></path>
						</svg>
						Moment
					</a>
					<a class=3D"nav-project nav-project-moment-timezone " href=3D"http://m=
omentjs.cn/timezone/">
						<svg width=3D"40px" height=3D"40px" viewBox=3D"0 0 40 40">
							<ellipse stroke-width=3D"3" cx=3D"20" cy=3D"20" rx=3D"18.5" ry=3D"18=
.5" fill=3D"0" stroke=3D"#000"></ellipse>
							<path fill-rule=3D"evenodd" d=3D"M4.98917024,14.4489557 C4.34944108,=
16.1782522 4,18.0483179 4,20 C4,28.836556 11.163444,36 20,36 C25.3372103,36=
 30.0640585,33.3867291 32.9708034,29.3699284 L32.9708034,29.3699284 C32.754=
2032,29.1158875 32.5851628,28.8136799 32.5213775,28.5419031 L31.2169086,22.=
9838131 C31.1059526,22.5110509 30.6116318,22.1192596 30.1152853,22.1192596 =
L28.4921437,22.1192596 C27.9858118,22.1192596 27.3609962,21.7891428 27.0742=
761,21.3819231 L26.5647528,20.6582629 C25.7154881,19.4520786 25.8505167,17.=
5995152 26.8651421,16.5187344 L26.9854581,16.3905737 C27.318883,16.0354089 =
27.9695174,15.6094255 28.4334461,15.4446996 L29.3188401,15.1303252 C29.7803=
195,14.966469 30.5349459,14.9655993 30.9988746,15.1303252 L31.8842686,15.44=
46996 C32.3457481,15.6085558 33.1107334,15.8458733 33.5874405,15.9728206 L3=
5.6191135,16.513856 C35.4978108,15.9679684 35.3486212,15.4325805 35.1731165=
,14.9092644 C34.3263749,14.7238868 33.4055455,14.2746017 32.8663979,13.7497=
894 L32.3015162,13.1999272 L30.4205895,13.1999271 C29.9369463,13.1999271 29=
.3014167,13.5302589 29.0223398,13.9377438 L28.6896027,14.4235789 C28.126061=
3,15.2464153 27.4185905,15.1412987 27.0980851,14.2053481 L27.0412779,14.039=
4576 C26.882355,13.5753657 27.1532065,13.199927 27.6459111,13.199927 L27.71=
09116,13.199927 C28.2108557,13.199927 28.6030323,12.796967 28.6030323,12.29=
98905 C28.6030324,11.7993486 29.0024484,11.399854 29.4951531,11.399854 L30.=
4522743,11.399854 L30.7448301,11.1150769 C31.0843394,10.7845948 31.0209719,=
10.3265877 30.5819181,10.1128978 L30.3226304,9.98670097 C29.8842057,9.77331=
723 29.8835766,9.42655123 30.3226304,9.21286132 L30.5819181,9.08666449 C30.=
8796701,8.94174691 31.4270561,9.05187418 31.74767,9.13746427 L31.74767,9.13=
746427 C29.354055,6.5500601 26.1162974,4.75498325 22.4719557,4.1897922 L22.=
4719557,4.1897922 L23.5257222,5.21678951 C24.2305071,5.90367045 24.0320251,=
6.65048619 23.0799479,6.88245898 L21.4350099,7.28324666 L20.1865042,8.50003=
612 C19.4817194,9.18691704 18.4903848,9.06670377 17.9747489,8.2291421 L17.3=
154121,7.15816288 C16.7989905,6.31932509 17.052872,5.20558795 17.8807174,4.=
66771105 L17.4094436,4.97391227 C18.1837126,4.47084565 19.4969845,4.0634341=
2 20.4690548,4.00674356 C20.3132511,4.0022581 20.1568893,4 20,4 C16.3409492=
,4 12.9687755,5.22826668 10.2732905,7.29498839 L9.34598541,8.7 C9.34598541,=
8.7 11.1732265,9.31523437 11.1732265,9.31523437 C11.6403222,9.47250609 12.1=
428675,9.22457657 12.3008953,8.74570313 L12.6280585,7.75429687 C12.7837571,=
7.28248174 13.2647344,7.07917156 13.7009406,7.29947834 L14.8796059,7.894765=
45 C15.7601466,8.33948421 16.7269068,9.46648951 17.0331889,10.3946197 L17.0=
830463,10.5457031 C17.2387449,11.0175183 16.9561285,11.4 16.4656183,11.4 L1=
3.8009733,11.4 L12.0189781,13.2 L12.0189781,15.015919 C12.0189781,15.504183=
5 11.7405414,15.61875 11.3957227,15.2704473 L10.236983,14.1 L9.25216787,14.=
5973827 C8.8118975,14.8197421 8.45498784,15.3994783 8.45498784,15.9 C8.4549=
8784,16.3970563 8.80456327,17.0118645 9.2107158,17.2580182 L12.9099757,19.5=
 L13.8947908,19.0026173 C14.3350612,18.7802579 15.0162561,18.8183745 15.432=
0035,19.0983398 L19.7477607,22.0045816 C21.3842844,23.1066207 21.4906005,25=
.0341584 19.9878775,26.3076091 L16.4715636,29.2874348 C16.0984226,29.603645=
2 15.5824366,30.1960211 15.3130082,30.6200946 L13.8009729,33 C13.3088887,33=
 12.995925,32.6093202 13.1006804,32.1331581 L14.3096882,26.6376532 C14.5208=
17,25.6779738 13.9707442,24.5357431 13.0976108,24.0947654 L12.7223406,23.90=
52346 C11.8417999,23.4605158 11.4800454,22.3887558 11.9199672,21.5000227 L1=
2.9099757,19.5 L8.41107755,17.9852154 C7.94324417,17.8276953 7.31902279,17.=
3906968 7.00711679,16.996875 L4.98917024,14.4489557 Z"></path>
						</svg>
						Moment<br>Timezone
					</a>
				</div>
				<div class=3D"nav-pages">
				=09
						<a href=3D"http://momentjs.cn/">=E9=A6=96=E9=A1=B5</a>
				=09
						<a href=3D"http://momentjs.cn/docs/" class=3D"active">=E6=96=87=E6=A1=
=A3</a>
				=09
						<a href=3D"http://momentjs.cn/tests/">=E6=B5=8B=E8=AF=95</a>
				=09
					<a href=3D"https://github.com/moment/moment/" target=3D"_blank" rel=3D=
"nofollow">GitHub</a>
				</div>
			</div>
		</nav>

	=09



<div class=3D"hero hero-oneline">
	<div class=3D"hero-centered">
		<h1>Moment.js =E6=96=87=E6=A1=A3</h1>
	</div>
</div>

<div class=3D"docs">
	<div class=3D"docs-nav" style=3D"top: 0px;">
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/u=
se-it/">=E4=BD=BF=E7=94=A8=E6=96=B9=E6=B3=95</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/use-it/n=
ode-js/">Node.js</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/use-it/b=
rowser/">=E6=B5=8F=E8=A7=88=E5=99=A8</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/use-it/b=
ower/">Bower</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/use-it/r=
equire-js/">Require.js</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/use-it/n=
uget/">NuGet</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/use-it/s=
pm/">spm</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/use-it/m=
eteor/">meteor</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/use-it/o=
ther/">=E5=85=B6=E4=BB=96</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/use-it/t=
roubleshooting/">=E7=96=91=E9=9A=BE=E6=9D=82=E7=97=87</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section active">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/p=
arsing/">=E8=A7=A3=E6=9E=90</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
now/">=E5=BD=93=E5=89=8D=E6=97=B6=E9=97=B4</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
string/">=E5=AD=97=E7=AC=A6=E4=B8=B2</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item active" href=3D"http://momentjs.cn/docs/#/p=
arsing/string-format/">=E5=AD=97=E7=AC=A6=E4=B8=B2 + =E6=A0=BC=E5=BC=8F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
string-formats/">=E5=AD=97=E7=AC=A6=E4=B8=B2 + =E5=A4=9A=E4=B8=AA=E6=A0=BC=
=E5=BC=8F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
special-formats/">=E5=AD=97=E7=AC=A6=E4=B8=B2=E7=89=B9=E6=AE=8A=E6=A0=BC=E5=
=BC=8F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
object/">=E5=AF=B9=E8=B1=A1</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
unix-offset/">Unix =E5=81=8F=E7=A7=BB=E9=87=8F (=E6=AF=AB=E7=A7=92)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
unix-timestamp/">Unix =E6=97=B6=E9=97=B4=E6=88=B3 (=E7=A7=92)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
date/">Date =E5=AF=B9=E8=B1=A1</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
array/">=E6=95=B0=E7=BB=84</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
asp-net-json-date/">ASP.NET</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
moment-clone/">=E5=85=8B=E9=9A=86</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
utc/">UTC</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
parse-zone/">=E6=97=B6=E5=8C=BA</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
is-valid/">=E5=90=88=E6=B3=95=E6=80=A7=E6=A0=A1=E9=AA=8C</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/parsing/=
defaults/">=E9=BB=98=E8=AE=A4=E5=80=BC</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/g=
et-set/">=E5=8F=96=E5=80=BC/=E8=B5=8B=E5=80=BC</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
millisecond/">=E6=AF=AB=E7=A7=92</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
second/">=E7=A7=92</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
minute/">=E5=88=86=E9=92=9F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
hour/">=E5=B0=8F=E6=97=B6</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
date/">=E6=97=A5=E6=9C=9F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
day/">=E6=98=9F=E6=9C=9F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
weekday/">=E6=98=9F=E6=9C=9F (=E5=8C=BA=E5=9F=9F=E6=A0=87=E5=87=86)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
iso-weekday/">=E6=98=9F=E6=9C=9F (ISO)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
day-of-year/">=E5=A4=A9</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
week/">=E5=91=A8</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
iso-week/">=E5=91=A8 (ISO)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
month/">=E6=9C=88</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
quarter/">=E5=AD=A3=E5=BA=A6</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
year/">=E5=B9=B4</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
week-year/">=E5=91=A8 (=E5=8C=BA=E5=9F=9F=E6=A0=87=E5=87=86)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
iso-week-year/">=E5=91=A8 (ISO)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
weeks-in-year/">=E5=91=A8=E6=95=B0</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
iso-weeks-in-year/">=E5=91=A8=E6=95=B0 (ISO)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
get/">=E5=8F=96=E5=80=BC</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
set/">=E8=B5=8B=E5=80=BC</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
max/">=E6=9C=80=E5=A4=A7=E5=80=BC</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/get-set/=
min/">=E6=9C=80=E5=B0=8F=E5=80=BC</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/m=
anipulating/">=E6=93=8D=E4=BD=9C</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/add/">=E5=8A=A0=E6=B3=95</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/subtract/">=E5=87=8F=E6=B3=95</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/start-of/">=E5=BC=80=E5=A7=8B=E6=97=B6=E9=97=B4</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/end-of/">=E7=BB=93=E6=9D=9F=E6=97=B6=E9=97=B4</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/max/">=E6=9C=80=E5=A4=A7=E5=80=BC</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/min/">=E6=9C=80=E5=B0=8F=E5=80=BC</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/local/">=E6=9C=AC=E5=9C=B0=E5=8C=96</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/utc/">UTC</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/utc-offset/">UTC =E5=81=8F=E7=A7=BB=E9=87=8F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/manipula=
ting/timezone-offset/">=E6=97=B6=E5=8C=BA=E5=81=8F=E7=A7=BB=E9=87=8F</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/d=
isplaying/">=E6=98=BE=E7=A4=BA</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/format/">=E6=A0=BC=E5=BC=8F=E5=8C=96</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/fromnow/">=E6=97=B6=E5=B7=AE (=E4=B9=8B=E5=89=8D=EF=BC=8C=E7=8E=B0=E5=9C=
=A8=E4=B8=BA=E5=9F=BA=E5=87=86)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/from/">=E6=97=B6=E5=B7=AE (=E4=B9=8B=E5=89=8D)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/tonow/">=E6=97=B6=E5=B7=AE (=E4=B9=8B=E5=90=8E=EF=BC=8C=E7=8E=B0=E5=9C=
=A8=E4=B8=BA=E5=9F=BA=E5=87=86)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/to/">=E6=97=B6=E5=B7=AE (=E4=B9=8B=E5=90=8E)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/calendar-time/">=E6=97=A5=E5=8E=86=E6=97=B6=E9=97=B4</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/difference/">=E6=97=B6=E5=B7=AE (=E6=AF=AB=E7=A7=92)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/unix-offset/">Unix =E5=81=8F=E7=A7=BB=E9=87=8F (=E6=AF=AB=E7=A7=92)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/unix-timestamp/">Unix =E6=97=B6=E9=97=B4=E6=88=B3 (=E7=A7=92)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/days-in-month/">=E5=A4=A9=E6=95=B0 (=E6=9C=88)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/as-javascript-date/">Date =E5=AF=B9=E8=B1=A1</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/as-array/">=E6=95=B0=E7=BB=84</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/as-json/">JSON</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/as-iso-string/">ISO 8601 =E5=AD=97=E7=AC=A6=E4=B8=B2</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/displayi=
ng/as-object/">=E5=AF=B9=E8=B1=A1</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/q=
uery/">=E6=9F=A5=E8=AF=A2</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/query/is=
-before/">=E6=98=AF=E5=90=A6=E4=B9=8B=E5=89=8D</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/query/is=
-same/">=E6=98=AF=E5=90=A6=E7=9B=B8=E5=90=8C</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/query/is=
-after/">=E6=98=AF=E5=90=A6=E4=B9=8B=E5=90=8E</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/query/is=
-between/">=E6=98=AF=E5=90=A6=E4=B9=8B=E9=97=B4</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/query/is=
-leap-year/">=E6=98=AF=E5=90=A6=E9=97=B0=E5=B9=B4</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/query/is=
-daylight-saving-time/">=E6=98=AF=E5=90=A6=E5=A4=8F=E4=BB=A4=E6=97=B6</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/query/is=
-dst-shifted/">=E6=98=AF=E5=90=A6=E8=A2=AB=E5=A4=8F=E4=BB=A4=E6=97=B6=E8=BD=
=AC=E6=8D=A2</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/query/is=
-a-moment/">=E6=98=AF=E5=90=A6 Moment =E5=AF=B9=E8=B1=A1</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/query/is=
-a-date/">=E6=98=AF=E5=90=A6 Date =E5=AF=B9=E8=B1=A1</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/i=
18n/">=E5=9B=BD=E9=99=85=E5=8C=96</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/i18n/cha=
nging-locale/">=E8=AE=BE=E7=BD=AE=E8=AF=AD=E8=A8=80 (=E5=85=A8=E5=B1=80)</a=
>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/i18n/ins=
tance-locale/">=E8=AE=BE=E7=BD=AE=E8=AF=AD=E8=A8=80 (=E5=B1=80=E9=83=A8)</a=
>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/i18n/loa=
ding-into-nodejs/">=E5=8A=A0=E8=BD=BD=E8=AF=AD=E8=A8=80 (NodeJS)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/i18n/loa=
ding-into-browser/">=E5=8A=A0=E8=BD=BD=E8=AF=AD=E8=A8=80 (=E6=B5=8F=E8=A7=
=88=E5=99=A8)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/i18n/add=
ing-locale/">=E6=96=B0=E5=A2=9E=E8=AF=AD=E8=A8=80</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/i18n/get=
ting-locale/">=E8=8E=B7=E5=8F=96=E5=BD=93=E5=89=8D=E8=AF=AD=E8=A8=80</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/i18n/lis=
ting-months-weekdays/">=E5=88=97=E5=87=BA=E6=9C=88=E4=BB=BD=E5=92=8C=E6=98=
=9F=E6=9C=9F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/i18n/loc=
ale-data/">=E8=8E=B7=E5=8F=96=E8=AF=AD=E8=A8=80=E6=95=B0=E6=8D=AE</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/c=
ustomization/">=E8=87=AA=E5=AE=9A=E4=B9=89</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/month-names/">=E6=9C=88=E4=BB=BD=E5=90=8D</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/month-abbreviations/">=E6=9C=88=E4=BB=BD=E5=90=8D (=E7=BC=A9=E5=86=99=
)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/weekday-names/">=E6=98=9F=E6=9C=9F=E5=90=8D</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/weekday-abbreviations/">=E6=98=9F=E6=9C=9F=E5=90=8D (=E7=BC=A9=E5=86=
=99)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/weekday-min/">=E6=98=9F=E6=9C=9F=E5=90=8D (=E6=9E=81=E7=AE=80=E7=BC=
=A9=E5=86=99)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/long-date-formats/">=E9=95=BF=E6=97=A5=E6=9C=9F=E6=A0=BC=E5=BC=8F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/relative-time/">=E7=9B=B8=E5=AF=B9=E6=97=B6=E9=97=B4</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/am-pm/">=E4=B8=8A=E5=8D=88/=E4=B8=8B=E5=8D=88</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/am-pm-parsing/">=E4=B8=8A=E5=8D=88/=E4=B8=8B=E5=8D=88 (=E8=A7=A3=E6=
=9E=90)</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/calendar/">=E6=97=A5=E5=8E=86</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/ordinal/">=E6=AF=94=E8=BE=83</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/customiz=
ation/relative-time-threshold/">=E7=9B=B8=E5=AF=B9=E6=97=B6=E9=97=B4=E4=B8=
=B4=E7=95=8C=E5=80=BC</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/d=
urations/">=E6=97=B6=E9=97=B4=E6=AE=B5</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/creating/">=E5=88=9B=E5=BB=BA</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/humanize/">=E6=8B=9F=E4=BA=BA=E5=8C=96</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/milliseconds/">=E6=AF=AB=E7=A7=92</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/seconds/">=E7=A7=92</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/minutes/">=E5=88=86=E9=92=9F</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/hours/">=E5=B0=8F=E6=97=B6</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/days/">=E5=A4=A9</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/months/">=E6=9C=88</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/years/">=E5=B9=B4</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/add/">=E5=8A=A0=E6=B3=95</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/subtract/">=E5=87=8F=E6=B3=95</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/as/">=E8=BD=AC=E6=8D=A2=E5=8D=95=E4=BD=8D</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/get/">=E5=8F=96=E5=80=BC</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/as-json/">=E8=BE=93=E5=87=BA JSON</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/duration=
s/is-a-duration/">Is a Duration</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/u=
tilities/">=E5=B7=A5=E5=85=B7=E7=B1=BB=E5=87=BD=E6=95=B0</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/utilitie=
s/normalize-units/">=E6=A0=87=E5=87=86=E5=8C=96=E5=8D=95=E4=BD=8D</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/utilitie=
s/invalid/">=E6=97=A0=E6=95=88=E5=AF=B9=E8=B1=A1</a>
				=09
			=09
			</div>
	=09
			<div class=3D"docs-nav-section">
				<a class=3D"docs-nav-section-title" href=3D"http://momentjs.cn/docs/#/p=
lugins/">=E6=8F=92=E4=BB=B6</a>
			=09
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
strftime/">Strftime</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
isocalendar/">ISO Calendar</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
range/">Date Ranges</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
twix/">Twix</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
twitter/">Twitter</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
jalaali/">Jalaali Calendar</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
msdate/">MSDate</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
fquarter/">Fiscal Quarters</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
preciserange/">Precise Range</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
recur/">Recur</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
parseformat/">Parse Date Format</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
jdateformatparser/">Java DateFormat Parser</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
hijri/">Hijri Calendar</a>
				=09
			=09
				=09
						<a class=3D"docs-nav-item" href=3D"http://momentjs.cn/docs/#/plugins/=
transform/">Transform</a>
				=09
			=09
			</div>
	=09
	</div>

	<div class=3D"docs-content">
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/use-it/" name=3D"/use-it/"></a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/u=
se-it/">=E4=BD=BF=E7=94=A8=E6=96=B9=E6=B3=95</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/intro/" name=3D"/use-it/=
intro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Moment was designed to work both in the browser and in Node.js.</p=
>
<p>Currently the following browsers are used for the ci system: IE8, IE9 on
Windows 7, stable Chrome on Windows XP, Safari 10.8 on Mac and stable
Firefox on Linux.</p>
<p>All code will work in both environments. All unit tests are run in both =
environments.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/node-js/" name=3D"/use-i=
t/node-js/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/use-it/node-js/">Node.js</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/00-use-it/01-node-js.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<pre><code>npm install moment</code></pre>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 moment =3D require(<span class=3D"string">'moment'</span>);
moment().format();</code></pre>
<p><strong>Note:</strong> In <code>2.4.0</code>, the globally exported mome=
nt object was <strong>deprecated</strong>.
It will be removed in next major release.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/browser/" name=3D"/use-i=
t/browser/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/use-it/browser/">=E6=B5=8F=E8=
=A7=88=E5=99=A8</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/00-use-it/02-browser.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<pre><code>&lt;script src=3D"moment.js"&gt;&lt;/script&gt;
&lt;script&gt;
    moment().format();
&lt;/script&gt;</code></pre>
<p>Moment.js is available on <a href=3D"http://cdnjs.com/">cdnjs.com</a>. R=
emember though, cool kids concatenate their scripts to minimize http reques=
ts.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/bower/" name=3D"/use-it/=
bower/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/use-it/bower/">Bower</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/00-use-it/03-bower.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p><a href=3D"http://bower.io/">bower</a></p>
<pre><code>bower install --save moment</code></pre>
<p>Notable files are <code>moment.js</code>, <code>locale/*.js</code> and <=
code>min/moment-with-locales.js</code>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/require-js/" name=3D"/us=
e-it/require-js/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/use-it/require-js/">Require.js<=
/a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/00-use-it/04-require-js.md" target=3D"_blan=
k">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<pre><code class=3D"language-javascript">require.config({
    paths: {
        <span class=3D"string">"moment"</span>: <span class=3D"string">"pat=
h/to/moment"</span>,
    }
});
define([<span class=3D"string">"moment"</span>], <span class=3D"function"><=
span class=3D"keyword">function</span> <span class=3D"params">(moment)</spa=
n> {</span>
    moment().format();
});</code></pre>
<p>Moment will still create a <code>moment</code> global, which is useful t=
o plugins and other third-party code. If you wish to squash that global, us=
e the <code>noGlobal</code> option on the module config.</p>
<pre><code class=3D"language-javascript">require.config({
    config: {
        moment: {
            noGlobal: <span class=3D"literal">true</span>
        }
    }
});</code></pre>
<p>If you don't specify <code>noGlobal</code> then the globally exported mo=
ment will print
a deprecation warning. From next major release you'll have to export it
yourself if you want that behavior.</p>
<p>For version <code>2.5.x</code>, in case you use other plugins that rely =
on Moment but are
not AMD-compatible you may need to add <a href=3D"https://github.com/jrburk=
e/r.js/blob/b8a6982d2923ae8389355edaa50d2b7f8065a01a/build/example.build.js=
#L68-L78"><code>wrapShim:
true</code></a>
to your r.js config.</p>
<p><strong>Note:</strong> To allow moment.js plugins to be loaded in requir=
ejs environments, moment is created as a named module. Because of this, mom=
ent <strong>must</strong> be loaded exactly as as <code>"moment"</code>, us=
ing <code>paths</code> to determine the directory. Requiring moment with a =
path like <code>"vendor\moment"</code> will return <code>undefined</code>.<=
/p>
<p><strong>Note:</strong> From version <strong>2.9.0</strong> moment export=
s itself as an anonymous module,
so if you're using only the core (no locales / plugins), then you don't nee=
d
config if you put it on a non-standard location.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/nuget/" name=3D"/use-it/=
nuget/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/use-it/nuget/">NuGet</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/00-use-it/05-nuget.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p><a href=3D"http://www.nuget.org/">NuGet</a> / <a href=3D"http://ww=
w.nuget.org/packages/Moment.js/">Moment.js</a></p>
<pre><code>Install-Package Moment.js</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/spm/" name=3D"/use-it/sp=
m/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/use-it/spm/">spm</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/00-use-it/06-spm.md" target=3D"_blank">=E7=
=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p><a href=3D"http://spmjs.io/">Static Package Manager</a>
/ <a href=3D"http://spmjs.io/package/moment">moment</a></p>
<pre><code>spm install moment --save</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/meteor/" name=3D"/use-it=
/meteor/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/use-it/meteor/">meteor</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/00-use-it/07-meteor.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p><a href=3D"https://www.meteor.com/">meteor</a> / <a href=3D"https:=
//atmospherejs.com/">atmosphere</a>
/ <a href=3D"https://atmospherejs.com/momentjs/moment">momentjs:moment</a><=
/p>
<pre><code>meteor add momentjs:moment</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/other/" name=3D"/use-it/=
other/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/use-it/other/">=E5=85=B6=E4=BB=
=96</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/00-use-it/08-other.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>To use under <strong>Java/Rhino</strong>, see <a href=3D"https://g=
ist.github.com/UnquietCode/5614860">these instructions</a>.</p>
<p>To use in <strong>Demandware</strong>, see <a href=3D"https://github.com=
/moment/moment/issues/1034">these instructions</a>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/use-it/troubleshooting/" name=
=3D"/use-it/troubleshooting/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/use-it/troubleshooting/">=E7=96=
=91=E9=9A=BE=E6=9D=82=E7=97=87</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/00-use-it/09-troubleshooting.md" target=3D"=
_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>If you are having any troubles, try asking a question on <a href=
=3D"http://stackoverflow.com/questions/tagged/momentjs">Stack Overflow</a> =
with the <code>momentjs</code> tag.</p>
<p>You can also use the <a href=3D"https://github.com/moment/moment/issues"=
>GitHub issue tracker</a> to find related issues or open a new issue.</p>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/parsing/" name=3D"/parsing/"></=
a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/p=
arsing/">=E8=A7=A3=E6=9E=90</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/intro/" name=3D"/parsin=
g/intro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Instead of modifying the native <code>Date.prototype</code>, Momen=
t.js creates a wrapper for the <code>Date</code> object. To get this wrappe=
r object, simply call <code>moment()</code> with one of the supported input=
 types.</p>
<p>The <code>Moment</code> prototype is exposed through <code>moment.fn</co=
de>. If you want to add your own functions, that is where you would put the=
m.</p>
<p>For ease of reference, any method on the <code>Moment.prototype</code> w=
ill be referenced in the docs as <code>moment#method</code>. So <code>Momen=
t.prototype.format</code> =3D=3D <code>moment.fn.format</code> =3D=3D <code=
>moment#format</code>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/now/" name=3D"/parsing/=
now/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/now/">=E5=BD=93=E5=89=
=8D=E6=97=B6=E9=97=B4</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/01-now.md" target=3D"_blank">=E7=
=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment();</code></pre>

							</div>
					=09
						<p>To get the current date and time, just call <code>moment()</code> =
with no parameters.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 now =3D moment();</code></pre>
<p>This is essentially the same as calling <code>moment(new Date())</code>.=
</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/string/" name=3D"/parsi=
ng/string/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/string/">=E5=AD=97=E7=
=AC=A6=E4=B8=B2</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/02-string.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(String);</code></pre>

							</div>
					=09
						<p>When creating a moment from a string, we first check if the string=
 matches known <a href=3D"http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</=
a> formats, then fall back to <code>new Date(string)</code> if a known form=
at is not found.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 day =3D moment(<span class=3D"string">"1995-12-25"</span>);</code></pre>
<p><strong>Warning:</strong> Browser support for parsing strings <a href=3D=
"http://dygraphs.com/date-formats.html">is inconsistent</a>. Because there =
is no specification on which formats should be supported, what works in som=
e browsers will not work in other browsers.</p>
<!--
**Note**: This has been the source of a lot of confusion, because moments c=
reated via `Date` constructor don't support `isValid` and also work unrelia=
bly. So it would be soon deprecated. From version 2.6.0 there is a way to p=
revent Date constructor usage -- just set `moment.createFromInputFallback` =
to an empty function.
-->

<p>For consistent results parsing anything other than ISO 8601 strings, you=
 should use <a href=3D"http://momentjs.cn/docs/#/parsing/string-format/">St=
ring + Format</a>.</p>
<h4 id=3D"supported-iso-8601-strings">Supported ISO 8601 strings</h4>
<p>An ISO 8601 string requires a date part.</p>
<pre><code>2013-02-08  # A calendar date part
2013-W06-5  # A week date part
2013-039    # An ordinal date part</code></pre>
<p>A time part can also be included, separated from the date part by a spac=
e or a uppercase T.</p>
<pre><code>2013-02-08T09            # An hour time part separated by a T
2013-02-08 09            # An hour time part separated by a space
2013-02-08 09:30         # An hour and minute time part
2013-02-08 09:30:26      # An hour, minute, and second time part
2013-02-08 09:30:26.123  # An hour, minute, second, and millisecond time pa=
rt
2013-02-08 24:00:00.000  # hour 24, minute, second, millisecond equal 0 mea=
ns next day at midnight</code></pre>
<p>Any of the date parts can have a time part.</p>
<pre><code>2013-02-08 09  # A calendar date part and hour time part
2013-W06-5 09  # A week date part and hour time part
2013-039 09    # An ordinal date part and hour time part</code></pre>
<p>If a time part is included, an offset from UTC can also be included as <=
code>+-HH:mm</code>, <code>+-HHmm</code>, or <code>Z</code>.</p>
<pre><code>2013-02-08 09+07:00            # +-HH:mm
2013-02-08 09-0100             # +-HHmm
2013-02-08 09Z                 # Z
2013-02-08 09:30:26.123+07:00  # +-HH:mm</code></pre>
<p><strong>Note:</strong> Automatic cross browser ISO-8601 support was adde=
d in version <strong>1.5.0</strong>. Support for the week and ordinal forma=
ts was added in version <strong>2.3.0</strong>.</p>
<p>If a string does not match any of the above formats and is not able to b=
e parsed with <code>Date.parse</code>, <code>moment#isValid</code> will ret=
urn false.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"not=
 a real date"</span>).isValid(); <span class=3D"comment">// false</span></c=
ode></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/string-format/" name=3D=
"/parsing/string-format/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/string-format/">=E5=AD=
=97=E7=AC=A6=E4=B8=B2 + =E6=A0=BC=E5=BC=8F</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/03-string-format.md" target=3D"_=
blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(String, String);
moment(String, String, String);
moment(String, String, Boolean);
moment(String, String, String, Boolean);</code></pre>

							</div>
					=09
						<p>If you know the format of an input string, you can use that to par=
se a moment.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"12-=
25-1995"</span>, <span class=3D"string">"MM-DD-YYYY"</span>);</code></pre>
<p>The parser ignores non-alphanumeric characters, so both of the following=
 will return the same thing.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"12-=
25-1995"</span>, <span class=3D"string">"MM-DD-YYYY"</span>);
moment(<span class=3D"string">"12/25/1995"</span>, <span class=3D"string">"=
MM-DD-YYYY"</span>);</code></pre>
<p>The parsing tokens are similar to the formatting tokens used in <code>mo=
ment#format</code>.</p>
<h4 id=3D"year-month-and-day-tokens">Year, month, and day tokens</h4>
<table>
<thead>
<tr>
<th>Input</th>
<th>Example</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>YYYY</code></td>
<td><code>2014</code></td>
<td>4 or 2 digit year</td>
</tr>
<tr>
<td><code>YY</code></td>
<td><code>14</code></td>
<td>2 digit year</td>
</tr>
<tr>
<td><code>Q</code></td>
<td><code>1..4</code></td>
<td>Quarter of year. Sets month to first month in quarter.</td>
</tr>
<tr>
<td><code>M MM</code></td>
<td><code>1..12</code></td>
<td>Month number</td>
</tr>
<tr>
<td><code>MMM MMMM</code></td>
<td><code>Jan..December</code></td>
<td>Month name in locale set by <code>moment.locale()</code></td>
</tr>
<tr>
<td><code>D DD</code></td>
<td><code>1..31</code></td>
<td>Day of month</td>
</tr>
<tr>
<td><code>Do</code></td>
<td><code>1st..31st</code></td>
<td>Day of month with ordinal</td>
</tr>
<tr>
<td><code>DDD DDDD</code></td>
<td><code>1..365</code></td>
<td>Day of year</td>
</tr>
<tr>
<td><code>X</code></td>
<td><code>1410715640.579</code></td>
<td>Unix timestamp</td>
</tr>
<tr>
<td><code>x</code></td>
<td><code>1410715640579</code></td>
<td>Unix ms timestamp</td>
</tr>
</tbody>
</table>
<p><code>YYYY</code> from version <code>2.10.5</code> supports 2 digit year=
s, and converts them to a year
near 2000 (same as <code>YY</code>).</p>
<h4 id=3D"week-year-week-and-weekday-tokens">Week year, week, and weekday t=
okens</h4>
<p>For these, the lowercase tokens use the locale aware week start days, an=
d the uppercase tokens use the <a href=3D"http://en.wikipedia.org/wiki/ISO_=
week_date">ISO week date</a> start days.</p>
<table>
<thead>
<tr>
<th>Input</th>
<th>Example</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>gggg</code></td>
<td><code>2014</code></td>
<td>Locale 4 digit week year</td>
</tr>
<tr>
<td><code>gg</code></td>
<td><code>14</code></td>
<td>Locale 2 digit week year</td>
</tr>
<tr>
<td><code>w ww</code></td>
<td><code>1..53</code></td>
<td>Locale week of year</td>
</tr>
<tr>
<td><code>e</code></td>
<td><code>1..7</code></td>
<td>Locale day of week</td>
</tr>
<tr>
<td><code>ddd dddd</code></td>
<td><code>Mon...Sunday</code></td>
<td>Day name in locale set by <code>moment.locale()</code></td>
</tr>
<tr>
<td><code>GGGG</code></td>
<td><code>2014</code></td>
<td>ISO 4 digit week year</td>
</tr>
<tr>
<td><code>GG</code></td>
<td><code>14</code></td>
<td>ISO 2 digit week year</td>
</tr>
<tr>
<td><code>W WW</code></td>
<td><code>1..53</code></td>
<td>ISO week of year</td>
</tr>
<tr>
<td><code>E</code></td>
<td><code>1..7</code></td>
<td>ISO day of week</td>
</tr>
</tbody>
</table>
<h4 id=3D"hour-minute-second-millisecond-and-offset-tokens">Hour, minute, s=
econd, millisecond, and offset tokens</h4>
<table>
<thead>
<tr>
<th>Input</th>
<th>Example</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>H HH</code></td>
<td><code>0..23</code></td>
<td>24 hour time</td>
</tr>
<tr>
<td><code>h hh</code></td>
<td><code>1..12</code></td>
<td>12 hour time used with <code>a A</code>.</td>
</tr>
<tr>
<td><code>a A</code></td>
<td><code>am pm</code></td>
<td>Post or ante meridiem</td>
</tr>
<tr>
<td><code>m mm</code></td>
<td><code>0..59</code></td>
<td>Minutes</td>
</tr>
<tr>
<td><code>s ss</code></td>
<td><code>0..59</code></td>
<td>Seconds</td>
</tr>
<tr>
<td><code>S</code></td>
<td><code>0..9</code></td>
<td>Tenths of a second</td>
</tr>
<tr>
<td><code>SS</code></td>
<td><code>0..99</code></td>
<td>Hundreds of a second</td>
</tr>
<tr>
<td><code>SSS</code></td>
<td><code>0..999</code></td>
<td>Thousandths of a second</td>
</tr>
<tr>
<td><code>SSSS</code></td>
<td><code>0000..9999</code></td>
<td>fractional seconds</td>
</tr>
<tr>
<td><code>Z ZZ</code></td>
<td><code>+12:00</code></td>
<td>Offset from UTC as <code>+-HH:mm</code>, <code>+-HHmm</code>, or <code>=
Z</code></td>
</tr>
</tbody>
</table>
<p>From version <strong>2.10.5</strong>: fractional second tokens length 4 =
up to 9 can parse
any number of digits, but will only consider the top 3 (milliseconds). Use =
if
you have the time printed with many fractional digits and want to consume t=
he
input.</p>
<p>Locale aware date and time formats are also available using <code>LT LTS=
 L LL LLL
LLLL</code>. They were added in version <strong>2.2.1</strong>, except <cod=
e>LTS</code> which was added
<strong>2.8.4</strong>.</p>
<p><code>Z ZZ</code> were added in version <code>1.2.0</code>.</p>
<p><code>S SS SSS</code> were added in version <code>1.6.0</code>.</p>
<p><code>X</code> was added in version <code>2.0.0</code>.</p>
<p>Unless you specify a timezone offset, parsing a string will create a dat=
e in the current timezone.</p>
<pre><code class=3D"language-js">moment(<span class=3D"string">"2010-10-20 =
4:30"</span>,       <span class=3D"string">"YYYY-MM-DD HH:mm"</span>);   <s=
pan class=3D"comment">// parsed as 4:30 local time</span>
moment(<span class=3D"string">"2010-10-20 4:30 +0000"</span>, <span class=
=3D"string">"YYYY-MM-DD HH:mm Z"</span>); <span class=3D"comment">// parsed=
 as 4:30 UTC</span></code></pre>
<p>If the moment that results from the parsed input does not exist, <code>m=
oment#isValid</code> will return false.</p>
<pre><code class=3D"language-js">moment(<span class=3D"string">"2010 13"</s=
pan>,           <span class=3D"string">"YYYY MM"</span>).isValid();     <sp=
an class=3D"comment">// false (not a real month)</span>
moment(<span class=3D"string">"2010 11 31"</span>,        <span class=3D"st=
ring">"YYYY MM DD"</span>).isValid();  <span class=3D"comment">// false (no=
t a real day)</span>
moment(<span class=3D"string">"2010 2 29"</span>,         <span class=3D"st=
ring">"YYYY MM DD"</span>).isValid();  <span class=3D"comment">// false (no=
t a leap year)</span>
moment(<span class=3D"string">"2010 notamonth 29"</span>, <span class=3D"st=
ring">"YYYY MMM DD"</span>).isValid(); <span class=3D"comment">// false (no=
t a real month name)</span></code></pre>
<p>As of version <code>2.0.0</code>, a locale key can be passed as the thir=
d parameter to <code>moment()</code> and <code>moment.utc()</code>.</p>
<pre><code class=3D"language-js">moment(<span class=3D"string">'2012 juille=
t'</span>, <span class=3D"string">'YYYY MMM'</span>, <span class=3D"string"=
>'fr'</span>);
moment(<span class=3D"string">'2012 July'</span>,    <span class=3D"string"=
>'YYYY MMM'</span>, <span class=3D"string">'en'</span>);</code></pre>
<p>Moment's parser is very forgiving, and this can lead to undesired behavi=
or. As of version <code>2.3.0</code>, you may specify a boolean for the las=
t argument to make Moment use strict parsing. Strict parsing requires that =
the format and input match exactly.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'It =
is 2012-05-25'</span>, <span class=3D"string">'YYYY-MM-DD'</span>).isValid(=
);       <span class=3D"comment">// true</span>
moment(<span class=3D"string">'It is 2012-05-25'</span>, <span class=3D"str=
ing">'YYYY-MM-DD'</span>, <span class=3D"literal">true</span>).isValid(); <=
span class=3D"comment">// false</span>
moment(<span class=3D"string">'2012-05-25'</span>,       <span class=3D"str=
ing">'YYYY-MM-DD'</span>, <span class=3D"literal">true</span>).isValid(); <=
span class=3D"comment">// true</span></code></pre>
<p>You can use both locale and strictness.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
2-10-14'</span>, <span class=3D"string">'YYYY-MM-DD'</span>, <span class=3D=
"string">'fr'</span>, <span class=3D"literal">true</span>);</code></pre>
<h4 id=3D"parsing-two-digit-years">Parsing two digit years</h4>
<p>By default, two digit years above 68 are assumed to be in the 1900's and=
 years 68 or below are assumed to be in the 2000's. This can be changed by =
replacing the <code>moment.parseTwoDigitYear</code> method.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/string-formats/" name=
=3D"/parsing/string-formats/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/string-formats/">=E5=AD=
=97=E7=AC=A6=E4=B8=B2 + =E5=A4=9A=E4=B8=AA=E6=A0=BC=E5=BC=8F</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/04-string-formats.md" target=3D"=
_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(String, String[], String, B=
oolean);</code></pre>

							</div>
					=09
						<p>If you don't know the exact format of an input string, but know it=
 could be one of many, you can use an array of formats.</p>
<p>This is the same as <a href=3D"http://momentjs.cn/docs/#/parsing/string-=
format/">String + Format</a>, only it will try to match the input to multip=
le formats.</p>
<pre><code class=3D"language-js">moment(<span class=3D"string">"12-25-1995"=
</span>, [<span class=3D"string">"MM-DD-YYYY"</span>, <span class=3D"string=
">"YYYY-MM-DD"</span>]);</code></pre>
<p>Starting in version <code>2.3.0</code>, Moment uses some simple heuristi=
cs to determine which format to use. In order:</p>
<ul>
<li>Prefer formats resulting in <a href=3D"http://momentjs.cn/docs/#/parsin=
g/is-valid/">valid</a> dates over invalid ones.</li>
<li>Prefer formats that parse more of the string than less and use more of =
the format than less, i.e. prefer stricter parsing.</li>
<li>Prefer formats earlier in the array than later.</li>
</ul>
<pre><code class=3D"language-js">moment(<span class=3D"string">"29-06-1995"=
</span>, [<span class=3D"string">"MM-DD-YYYY"</span>, <span class=3D"string=
">"DD-MM"</span>, <span class=3D"string">"DD-MM-YYYY"</span>]); <span class=
=3D"comment">// uses the last format</span>
moment(<span class=3D"string">"05-06-1995"</span>, [<span class=3D"string">=
"MM-DD-YYYY"</span>, <span class=3D"string">"DD-MM-YYYY"</span>]);         =
 <span class=3D"comment">// uses the first format</span></code></pre>
<p>You may also specify a locale and strictness argument. They work the sam=
e was as they do in the single format case.</p>
<pre><code class=3D"language-js">moment(<span class=3D"string">"29-06-1995"=
</span>, [<span class=3D"string">"MM-DD-YYYY"</span>, <span class=3D"string=
">"DD-MM-YYYY"</span>], <span class=3D"string">'fr'</span>);       <span cl=
ass=3D"comment">// uses 'fr' locale</span>
moment(<span class=3D"string">"29-06-1995"</span>, [<span class=3D"string">=
"MM-DD-YYYY"</span>, <span class=3D"string">"DD-MM-YYYY"</span>], <span cla=
ss=3D"literal">true</span>);       <span class=3D"comment">// uses strict p=
arsing</span>
moment(<span class=3D"string">"05-06-1995"</span>, [<span class=3D"string">=
"MM-DD-YYYY"</span>, <span class=3D"string">"DD-MM-YYYY"</span>], <span cla=
ss=3D"string">'fr'</span>, <span class=3D"literal">true</span>); <span clas=
s=3D"comment">// uses 'fr' locale and strict parsing</span></code></pre>
<p><strong>Note:</strong> Parsing multiple formats is considerably slower t=
han parsing a single format. If you can avoid it, it is much faster to pars=
e a single format.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/special-formats/" name=
=3D"/parsing/special-formats/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/special-formats/">=E5=
=AD=97=E7=AC=A6=E4=B8=B2=E7=89=B9=E6=AE=8A=E6=A0=BC=E5=BC=8F</a>
						=09
								<span>2.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/05-special-formats.md" target=3D=
"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(String, moment.CUSTOM_FORMA=
T, [String], [Boolean]);
moment(String, [..., moment.ISO_8601, ...], [String], [Boolean]);</code></p=
re>

							</div>
					=09
						<p><a href=3D"http://en.wikipedia.org/wiki/ISO_8601">ISO-8601</a> is =
a standard for time and duration display. Moment already supports parsing i=
so-8601 strings, but this can be specified explicitly in the format/list of=
 formats when constructing a moment.</p>
<p>To specify iso-8601 parsing use <code>moment.ISO_8601</code> constant. M=
ore formats will be added in the future.</p>
<p>Examples:</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"201=
0-01-01T05:06:07"</span>, moment.ISO_8601);
moment(<span class=3D"string">"2010-01-01T05:06:07"</span>, [<span class=3D=
"string">"YYYY"</span>, moment.ISO_8601]);</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/object/" name=3D"/parsi=
ng/object/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/object/">=E5=AF=B9=E8=
=B1=A1</a>
						=09
								<span>2.2.1+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/06-object.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment({unit: value, ...});</code>=
</pre>

							</div>
					=09
						<pre><code class=3D"language-javascript">moment({ hour:<span class=3D=
"number">15</span>, minute:<span class=3D"number">10</span> });
moment({ y    :<span class=3D"number">2010</span>, M     :<span class=3D"nu=
mber">3</span>, d   :<span class=3D"number">5</span>, h    :<span class=3D"=
number">15</span>, m      :<span class=3D"number">10</span>, s      :<span =
class=3D"number">3</span>, ms          :<span class=3D"number">123</span>})=
;
moment({ year :<span class=3D"number">2010</span>, month :<span class=3D"nu=
mber">3</span>, day :<span class=3D"number">5</span>, hour :<span class=3D"=
number">15</span>, minute :<span class=3D"number">10</span>, second :<span =
class=3D"number">3</span>, millisecond :<span class=3D"number">123</span>})=
;
moment({ years:<span class=3D"number">2010</span>, months:<span class=3D"nu=
mber">3</span>, days:<span class=3D"number">5</span>, hours:<span class=3D"=
number">15</span>, minutes:<span class=3D"number">10</span>, seconds:<span =
class=3D"number">3</span>, milliseconds:<span class=3D"number">123</span>})=
;
moment({ years:<span class=3D"number">2010</span>, months:<span class=3D"nu=
mber">3</span>, date:<span class=3D"number">5</span>, hours:<span class=3D"=
number">15</span>, minutes:<span class=3D"number">10</span>, seconds:<span =
class=3D"number">3</span>, milliseconds:<span class=3D"number">123</span>})=
;</code></pre>
<p>You can create a moment by specifying some of the units in an object.</p=
>
<p>Omitted units default to 0 or the current date, month, and year.</p>
<p><code>day</code> and <code>date</code> key both mean day-of-the-month.</=
p>
<p><code>date</code> was added in <strong>2.8.4</strong>.</p>
<p>Note that like <code>moment(Array)</code> and <code>new Date(year, month=
, date)</code>, months are 0 indexed.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/unix-offset/" name=3D"/=
parsing/unix-offset/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/unix-offset/">Unix =E5=
=81=8F=E7=A7=BB=E9=87=8F (=E6=AF=AB=E7=A7=92)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/07-unix-offset.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(Number);</code></pre>

							</div>
					=09
						<p>Similar to <code>new Date(Number)</code>, you can create a moment =
by passing an integer value representing the number of <em>milliseconds</em=
> since the Unix Epoch (Jan 1 1970 12AM UTC).</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 day =3D moment(<span class=3D"number">1318781876406</span>);</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/unix-timestamp/" name=
=3D"/parsing/unix-timestamp/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/unix-timestamp/">Unix =
=E6=97=B6=E9=97=B4=E6=88=B3 (=E7=A7=92)</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/08-unix-timestamp.md" target=3D"=
_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.unix(Number)</code></pre>

							</div>
					=09
						<p>To create a moment from a Unix timestamp (<em>seconds</em> since t=
he Unix Epoch), use <code>moment.unix(Number)</code>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 day =3D moment.unix(<span class=3D"number">1318781876</span>);</code></pre=
>
<p>This is implemented as <code>moment(timestamp * 1000)</code>, so partial=
 seconds in the input timestamp are included.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 day =3D moment.unix(<span class=3D"number">1318781876.721</span>);</code><=
/pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/date/" name=3D"/parsing=
/date/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/date/">Date =E5=AF=B9=
=E8=B1=A1</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/09-date.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(Date);</code></pre>

							</div>
					=09
						<p>You can create a <code>Moment</code> with a pre-existing native Ja=
vascript <code>Date</code> object.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 day =3D <span class=3D"keyword">new</span> Date(<span class=3D"number">201=
1</span>, <span class=3D"number">9</span>, <span class=3D"number">16</span>=
);
<span class=3D"keyword">var</span> dayWrapper =3D moment(day);</code></pre>
<p>This clones <code>Date</code> object; further changes to the <code>Date<=
/code> won't affect the <code>Moment</code>, and vice-versa.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/array/" name=3D"/parsin=
g/array/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/array/">=E6=95=B0=E7=BB=
=84</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/10-array.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(Number[]);</code></pre>

							</div>
					=09
						<p>You can create a moment with an array of numbers that mirror the p=
arameters passed to <a href=3D"https://developer.mozilla.org/en/JavaScript/=
Reference/Global_Objects/Date">new Date()</a></p>
<pre><code class=3D"language-javascript">[year, month, day, hour, minute, s=
econd, millisecond]
moment([<span class=3D"number">2010</span>, <span class=3D"number">1</span>=
, <span class=3D"number">14</span>, <span class=3D"number">15</span>, <span=
 class=3D"number">25</span>, <span class=3D"number">50</span>, <span class=
=3D"number">125</span>]); <span class=3D"comment">// February 14th, 3:25:50=
.125 PM</span></code></pre>
<p>Any value past the year is optional, and will default to the lowest poss=
ible number.</p>
<pre><code class=3D"language-javascript">moment([<span class=3D"number">201=
0</span>]);        <span class=3D"comment">// January 1st</span>
moment([<span class=3D"number">2010</span>, <span class=3D"number">6</span>=
]);     <span class=3D"comment">// July 1st</span>
moment([<span class=3D"number">2010</span>, <span class=3D"number">6</span>=
, <span class=3D"number">10</span>]); <span class=3D"comment">// July 10th<=
/span></code></pre>
<p>Construction with an array will create a date in the current timezone. T=
o create a date from an array at UTC, use <code>moment.utc(Number[])</code>=
.</p>
<pre><code class=3D"language-javascript">moment.utc([<span class=3D"number"=
>2010</span>, <span class=3D"number">1</span>, <span class=3D"number">14</s=
pan>, <span class=3D"number">15</span>, <span class=3D"number">25</span>, <=
span class=3D"number">50</span>, <span class=3D"number">125</span>]);</code=
></pre>
<p><strong>Note:</strong> Because this mirrors the native <code>Date</code>=
 parameters, months, hours, minutes, seconds, and milliseconds are all zero=
 indexed. Years and days of the month are 1 indexed.</p>
<p>This is often the cause of frustration, especially with months, so take =
note!</p>
<p>If the date represented by the array does not exist, <code>moment#isVali=
d</code> will return false.</p>
<pre><code class=3D"language-javascript">moment([<span class=3D"number">201=
0</span>, <span class=3D"number">13</span>]).isValid();     <span class=3D"=
comment">// false (not a real month)</span>
moment([<span class=3D"number">2010</span>, <span class=3D"number">10</span=
>, <span class=3D"number">31</span>]).isValid(); <span class=3D"comment">//=
 false (not a real day)</span>
moment([<span class=3D"number">2010</span>, <span class=3D"number">1</span>=
, <span class=3D"number">29</span>]).isValid();  <span class=3D"comment">//=
 false (not a leap year)</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/asp-net-json-date/" nam=
e=3D"/parsing/asp-net-json-date/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/asp-net-json-date/">ASP=
.NET</a>
						=09
								<span>1.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/11-asp-net-json-date.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(String);</code></pre>

							</div>
					=09
						<p>Microsoft Web API returns JSON dates in proper ISO-8601 format by =
default, but older ASP.NET technologies may return dates in JSON as <code>/=
Date(1198908717056)/</code> or <code>/Date(1198908717056-0700)/</code></p>
<p>If a string that matches this format is passed in, it will be parsed cor=
rectly.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"/Da=
te(1198908717056-0700)/"</span>); <span class=3D"comment">// 2007-12-28T23:=
11:57.056-07:00</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/moment-clone/" name=3D"=
/parsing/moment-clone/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/moment-clone/">=E5=85=
=8B=E9=9A=86</a>
						=09
								<span>1.2.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/12-moment-clone.md" target=3D"_b=
lank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(Moment);</code></pre>

							</div>
					=09
						<p>All moments are mutable. If you want a clone of a moment, you can =
do so explicitly or implicitly.</p>
<p>Calling <code>moment()</code> on a moment will clone it.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2012</span>]);
<span class=3D"keyword">var</span> b =3D moment(a);
a.year(<span class=3D"number">2000</span>);
b.year(); <span class=3D"comment">// 2012</span></code></pre>
<p>Additionally, you can call <code>moment#clone</code> to clone a moment.<=
/p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2012</span>]);
<span class=3D"keyword">var</span> b =3D a.clone();
a.year(<span class=3D"number">2000</span>);
b.year(); <span class=3D"comment">// 2012</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/utc/" name=3D"/parsing/=
utc/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/utc/">UTC</a>
						=09
								<span>1.5.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/13-utc.md" target=3D"_blank">=E7=
=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.utc();
moment.utc(Number);
moment.utc(Number[]);
moment.utc(String);
moment.utc(String, String);
moment.utc(String, String[]);
moment.utc(String, String, String);
moment.utc(Moment);
moment.utc(Date);</code></pre>

							</div>
					=09
						<p>By default, moment parses and displays in local time.</p>
<p>If you want to parse or display a moment in UTC, you can use <code>momen=
t.utc()</code> instead of <code>moment()</code>.</p>
<p>This brings us to an interesting feature of Moment.js. UTC mode.</p>
<p>While in UTC mode, all display methods will display in UTC time instead =
of local time.</p>
<pre><code class=3D"language-javascript">moment().format();     <span class=
=3D"comment">// 2013-02-04T10:35:24-08:00</span>
moment.utc().format(); <span class=3D"comment">// 2013-02-04T18:35:24+00:00=
</span></code></pre>
<p>Additionally, while in UTC mode, all getters and setters will internally=
 use the <code>Date#getUTC*</code> and <code>Date#setUTC*</code> methods in=
stead of the <code>Date#get*</code> and <code>Date#set*</code> methods.</p>
<pre><code class=3D"language-javascript">moment.utc().seconds(<span class=
=3D"number">30</span>) =3D=3D=3D <span class=3D"keyword">new</span> Date().=
setUTCSeconds(<span class=3D"number">30</span>);
moment.utc().seconds()   =3D=3D=3D <span class=3D"keyword">new</span> Date(=
).getUTCSeconds();</code></pre>
<p>It is important to note that though the displays differ above, they are =
both the same moment in time.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment();
<span class=3D"keyword">var</span> b =3D moment.utc();
a.format();  <span class=3D"comment">// 2013-02-04T10:35:24-08:00</span>
b.format();  <span class=3D"comment">// 2013-02-04T18:35:24+00:00</span>
a.valueOf(); <span class=3D"comment">// 1360002924000</span>
b.valueOf(); <span class=3D"comment">// 1360002924000</span></code></pre>
<p>Any moment created with <code>moment.utc()</code> will be in UTC mode, a=
nd any moment created with <code>moment()</code> will not.</p>
<p>To switch from UTC to local time, you can use <a href=3D"http://momentjs=
.cn/docs/#/manipulating/utc/">moment#utc</a> or <a href=3D"http://momentjs.=
cn/docs/#/manipulating/local/">moment#local</a>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment.utc([<span class=3D"number">2011</span>, <span class=3D"numbe=
r">0</span>, <span class=3D"number">1</span>, <span class=3D"number">8</spa=
n>]);
a.hours(); <span class=3D"comment">// 8 UTC</span>
a.local();
a.hours(); <span class=3D"comment">// 0 PST</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/parse-zone/" name=3D"/p=
arsing/parse-zone/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/parse-zone/">=E6=97=B6=
=E5=8C=BA</a>
						=09
								<span>2.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/14-parse-zone.md" target=3D"_bla=
nk">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.parseZone(String)</code></p=
re>

							</div>
					=09
						<p>Moment normally interprets input times as local times (or UTC time=
s if <code>moment.utc()</code> is used). However, often the input string it=
self contains time zone information. <code>#parseZone</code> parses the tim=
e and then sets the zone according to the input string.</p>
<pre><code class=3D"language-javascript">moment.parseZone(<span class=3D"st=
ring">"2013-01-01T00:00:00-13:00"</span>).zone(); <span class=3D"comment">/=
/ 780</span></code></pre>
<p><code>moment.parseZone</code> is equivalent to parsing the string and us=
ing <code>moment#zone</code> to parse the zone.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 s =3D <span class=3D"string">"2013-01-01T00:00:00-13:00"</span>;
moment(s).zone(s);</code></pre>
<p><strong>Note</strong>: this method only works for a single string argume=
nt, not a string and format.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/is-valid/" name=3D"/par=
sing/is-valid/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/is-valid/">=E5=90=88=E6=
=B3=95=E6=80=A7=E6=A0=A1=E9=AA=8C</a>
						=09
								<span>1.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/15-is-valid.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isValid();</code></pre>

							</div>
					=09
						<p>Moment applies stricter initialization rules than the <code>Date</=
code> constructor.</p>
<pre><code class=3D"language-js"><span class=3D"keyword">new</span> Date(<s=
pan class=3D"number">2013</span>, <span class=3D"number">25</span>, <span c=
lass=3D"number">14</span>).toString(); <span class=3D"comment">// "Sat Feb =
14 2015 00:00:00 GMT-0500 (EST)"</span>
moment([<span class=3D"number">2015</span>, <span class=3D"number">25</span=
>, <span class=3D"number">35</span>]).format();   <span class=3D"comment">/=
/ 'Invalid date'</span></code></pre>
<p>You can check whether the Moment considers the date invalid using <code>=
moment#isValid</code>. You can check the metrics used by <code>#isValid</co=
de> using <code>moment#parsingFlags</code>, which returns an object.</p>
<p>The following parsing flags result in an invalid date:</p>
<ul>
<li><code>overflow</code>: An overflow of a date field, such as a 13th mont=
h, a 32nd day of the month (or a 29th of February on non-leap years), a 367=
th day of the year, etc. <code>overflow</code> contains the index of the in=
valid unit to match <code>#invalidAt</code> (see below); <code>-1</code> me=
ans no overflow.</li>
<li><code>invalidMonth</code>: An invalid month name, such as <code>moment(=
'Marbruary', 'MMMM');</code>. Contains the invalid month string itself, or =
else null.</li>
<li><code>empty</code>: An input string that contains nothing parsable, suc=
h as <code>moment('this is nonsense');</code>. Boolean.</li>
<li><code>nullInput</code>: A <code>null</code> input, like <code>moment(nu=
ll);</code>. Boolean.</li>
<li><code>invalidFormat</code>: An empty list of formats, such as <code>mom=
ent('2013-05-25', [])</code>. Boolean.</li>
<li><code>userInvalidated</code>: A date created explicitly as invalid, suc=
h as <code>moment.invalid()</code>. Boolean.</li>
</ul>
<p>Additionally, if the Moment is parsed in strict mode, these flags must b=
e empty for the Moment to be valid:</p>
<ul>
<li><code>unusedTokens</code>: array of format substrings not found in the =
input string</li>
<li><code>unusedInput</code>: array of input substrings not matched to the =
format string</li>
</ul>
<p><strong>Note:</strong> Moment's concept of validity became more strict a=
nd consistent between 2.2 and 2.3.</p>
<p>Additionally, you can use <code>moment#invalidAt</code> to determine whi=
ch date unit overflowed.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 m =3D moment(<span class=3D"string">"2011-10-10T10:20:90"</span>);
m.isValid(); <span class=3D"comment">// false</span>
m.invalidAt(); <span class=3D"comment">// 5 for seconds</span></code></pre>
<p>The return value has the following meaning:</p>
<ol>
  <li>years</li>
  <li>months</li>
  <li>days</li>
  <li>hours</li>
  <li>minutes</li>
  <li>seconds</li>
  <li>milliseconds</li>
</ol>

<p><strong>Note:</strong> In case of multiple wrong units the first one is =
returned (because
days validity may depend on month, for example).</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/parsing/defaults/" name=3D"/par=
sing/defaults/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/parsing/defaults/">=E9=BB=98=E8=
=AE=A4=E5=80=BC</a>
						=09
								<span>2.2.1+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/01-parsing/16-defaults.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(<span class=3D"string">"15"=
</span>, <span class=3D"string">"hh"</span>)</code></pre>

							</div>
					=09
						<p>You can create a moment object specifying only some of the units, =
and the rest
will be defaulted to the current day, month or year, or 0 for hours, minute=
s,
seconds and milliseconds.</p>
<p>Defaulting to now, when nothing is passed:</p>
<pre><code class=3D"language-javascript">moment();  <span class=3D"comment"=
>// current date and time</span></code></pre>
<p>Defaulting to today, when only hours, minutes, seconds and milliseconds =
are passed:</p>
<pre><code class=3D"language-javasript">moment(5, "HH");  // today, 5:00:00=
.000
moment({hour: 5});  // today, 5:00:00.000
moment({hour: 5, minute: 10});  // today, 5:10.00.000
moment({hour: 5, minute: 10, seconds: 20});  // today, 5:10.20.000
moment({hour: 5, minute: 10, seconds: 20, milliseconds: 300});  // today, 5=
:10.20.300</code></pre>
<p>Defaulting to this month and year, when only days and smaller units are =
passed:</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"number">5</s=
pan>, <span class=3D"string">"DD"</span>);  <span class=3D"comment">// this=
 month, 5th day-of-month</span>
moment(<span class=3D"string">"4 05:06:07"</span>, <span class=3D"string">"=
DD hh:mm:ss"</span>);  <span class=3D"comment">// this month, 4th day-of-mo=
nth, 05:06:07.000</span></code></pre>
<p>Defaulting to this year, if year is not specified:</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"number">3</s=
pan>, <span class=3D"string">"MM"</span>);  <span class=3D"comment">// this=
 year, 3th month (April)</span>
moment(<span class=3D"string">"Apr 4 05:06:07"</span>, <span class=3D"strin=
g">"MMM DD hh:mm:ss"</span>);  <span class=3D"comment">// this year, 5th Ap=
ril, 05:06:07.000</span></code></pre>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/get-set/" name=3D"/get-set/"></=
a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/g=
et-set/">=E5=8F=96=E5=80=BC/=E8=B5=8B=E5=80=BC</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/intro/" name=3D"/get-se=
t/intro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Moment.js uses overloaded getters and setters. You may be familiar=
 with this pattern from its use in jQuery.</p>
<p>Calling these methods without parameters acts as a getter, and calling t=
hem with a parameter acts as a setter.</p>
<p>These map to the corresponding function on the native <code>Date</code> =
object.</p>
<pre><code class=3D"language-javascript">moment().seconds(<span class=3D"nu=
mber">30</span>) =3D=3D=3D <span class=3D"keyword">new</span> Date().setSec=
onds(<span class=3D"number">30</span>);
moment().seconds()   =3D=3D=3D <span class=3D"keyword">new</span> Date().ge=
tSeconds();</code></pre>
<p>If you are in <a href=3D"http://momentjs.cn/docs/#/manipulating/utc/">UT=
C mode</a>, they will map to the UTC equivalent.</p>
<pre><code class=3D"language-javascript">moment.utc().seconds(<span class=
=3D"number">30</span>) =3D=3D=3D <span class=3D"keyword">new</span> Date().=
setUTCSeconds(<span class=3D"number">30</span>);
moment.utc().seconds()   =3D=3D=3D <span class=3D"keyword">new</span> Date(=
).getUTCSeconds();</code></pre>
<p>For convenience, both singular and plural method names exist as of versi=
on <code>2.0.0</code>.</p>
<p><strong>Note</strong>: All of these methods mutate the original moment w=
hen used as setters.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/millisecond/" name=3D"/=
get-set/millisecond/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/millisecond/">=E6=AF=AB=
=E7=A7=92</a>
						=09
								<span>1.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/01-millisecond.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().millisecond(Number);
moment().millisecond(); <span class=3D"comment">// Number</span>
moment().milliseconds(Number);
moment().milliseconds(); <span class=3D"comment">// Number</span></code></p=
re>

							</div>
					=09
						<p>Gets or sets the milliseconds.</p>
<p>Accepts numbers from 0 to 999. If the range is exceeded, it will bubble =
up to the seconds.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/second/" name=3D"/get-s=
et/second/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/second/">=E7=A7=92</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/02-second.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().second(Number);
moment().second(); <span class=3D"comment">// Number</span>
moment().seconds(Number);
moment().seconds(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the seconds.</p>
<p>Accepts numbers from 0 to 59. If the range is exceeded, it will bubble u=
p to the minutes.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/minute/" name=3D"/get-s=
et/minute/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/minute/">=E5=88=86=E9=
=92=9F</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/03-minute.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().minute(Number);
moment().minute(); <span class=3D"comment">// Number</span>
moment().minutes(Number);
moment().minutes(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the minutes.</p>
<p>Accepts numbers from 0 to 59. If the range is exceeded, it will bubble u=
p to the hours.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/hour/" name=3D"/get-set=
/hour/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/hour/">=E5=B0=8F=E6=97=
=B6</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/04-hour.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().hour(Number);
moment().hour(); <span class=3D"comment">// Number</span>
moment().hours(Number);
moment().hours(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the hour.</p>
<p>Accepts numbers from 0 to 23. If the range is exceeded, it will bubble u=
p to the day.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/date/" name=3D"/get-set=
/date/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/date/">=E6=97=A5=E6=9C=
=9F</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/05-date.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().date(Number);
moment().date(); <span class=3D"comment">// Number</span>
moment().dates(Number);
moment().dates(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the day of the month.</p>
<p>Accepts numbers from 1 to 31. If the range is exceeded, it will bubble u=
p to the months.</p>
<p><strong>Note:</strong> <code>Moment#date</code> is for the date of the m=
onth, and <code>Moment#day</code> is for the day of the week.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/day/" name=3D"/get-set/=
day/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/day/">=E6=98=9F=E6=9C=
=9F</a>
						=09
								<span>1.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/06-day.md" target=3D"_blank">=E7=
=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().day(Number|String);
moment().day(); <span class=3D"comment">// Number</span>
moment().days(Number|String);
moment().days(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the day of the week.</p>
<p>This method can be used to set the day of the week, with Sunday as 0 and=
 Saturday as 6.</p>
<p>If the range is exceeded, it will bubble up to other weeks.</p>
<pre><code class=3D"language-javascript">moment().day(-<span class=3D"numbe=
r">7</span>); <span class=3D"comment">// last Sunday (0 - 7)</span>
moment().day(<span class=3D"number">7</span>); <span class=3D"comment">// n=
ext Sunday (0 + 7)</span>
moment().day(<span class=3D"number">10</span>); <span class=3D"comment">// =
next Wednesday (3 + 7)</span>
moment().day(<span class=3D"number">24</span>); <span class=3D"comment">// =
3 Wednesdays from now (3 + 7 + 7 + 7)</span></code></pre>
<p><strong>Note:</strong> <code>Moment#date</code> is for the date of the m=
onth, and <code>Moment#day</code> is for the day of the week.</p>
<p>As of <strong>2.1.0</strong>, a day name is also supported. This is pars=
ed in the moment's current locale.</p>
<pre><code class=3D"language-javascript">moment().day(<span class=3D"string=
">"Sunday"</span>);
moment().day(<span class=3D"string">"Monday"</span>);</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/weekday/" name=3D"/get-=
set/weekday/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/weekday/">=E6=98=9F=E6=
=9C=9F (=E5=8C=BA=E5=9F=9F=E6=A0=87=E5=87=86)</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/07-weekday.md" target=3D"_blank"=
>=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().weekday(Number);
moment().weekday(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the day of the week according to the locale.</p>
<p>If the locale assigns Monday as the first day of the week, <code>moment(=
).weekday(0)</code> will be Monday.
If Sunday is the first day of the week, <code>moment().weekday(0)</code> wi=
ll be Sunday.</p>
<p>As with <code>moment#day</code>, if the range is exceeded, it will bubbl=
e up to other weeks.</p>
<pre><code class=3D"language-javascript"><span class=3D"comment">// when Mo=
nday is the first day of the week</span>
moment().weekday(-<span class=3D"number">7</span>); <span class=3D"comment"=
>// last Monday</span>
moment().weekday(<span class=3D"number">7</span>); <span class=3D"comment">=
// next Monday</span>
<span class=3D"comment">// when Sunday is the first day of the week</span>
moment().weekday(-<span class=3D"number">7</span>); <span class=3D"comment"=
>// last Sunday</span>
moment().weekday(<span class=3D"number">7</span>); <span class=3D"comment">=
// next Sunday</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/iso-weekday/" name=3D"/=
get-set/iso-weekday/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/iso-weekday/">=E6=98=9F=
=E6=9C=9F (ISO)</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/08-iso-weekday.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isoWeekday(Number);
moment().isoWeekday(); <span class=3D"comment">// Number</span></code></pre=
>

							</div>
					=09
						<p>Gets or sets the <a href=3D"http://en.wikipedia.org/wiki/ISO_week_=
date">ISO day of the week</a> with <code>1</code> being Monday and <code>7<=
/code> being Sunday.</p>
<pre><code class=3D"language-javascript">moment().isoWeekday(<span class=3D=
"number">1</span>); <span class=3D"comment">// Monday</span>
moment().isoWeekday(<span class=3D"number">7</span>); <span class=3D"commen=
t">// Sunday</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/day-of-year/" name=3D"/=
get-set/day-of-year/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/day-of-year/">=E5=A4=A9=
</a>
						=09
								<span>2.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/09-day-of-year.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().dayOfYear(Number);
moment().dayOfYear(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the day of the year.</p>
<p>Accepts numbers from 1 to 366. If the range is exceeded, it will bubble =
up to the years.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/week/" name=3D"/get-set=
/week/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/week/">=E5=91=A8</a>
						=09
								<span>2.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/10-week.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().week(Number);
moment().week(); <span class=3D"comment">// Number</span>
moment().weeks(Number);
moment().weeks(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the week of the year.</p>
<p>Because different locales define week of year numbering differently, Mom=
ent.js added <code>moment#week</code> to get/set the localized week of the =
year.</p>
<p>The week of the year varies depending on which day is the first day of t=
he week (Sunday, Monday, etc), and which week is the first week of the year=
.</p>
<p>For example, in the United States, Sunday is the first day of the week. =
The week with January 1st in it is the first week of the year.</p>
<p>In France, Monday is the first day of the week, and the week with Januar=
y 4th is the first week of the year.</p>
<p>The output of <code>moment#week</code> will depend on the <a href=3D"htt=
p://momentjs.cn/docs/#/i18n">locale</a> for that moment.</p>
<p>When setting the week of the year, the day of the week is retained.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/iso-week/" name=3D"/get=
-set/iso-week/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/iso-week/">=E5=91=A8 (I=
SO)</a>
						=09
								<span>2.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/11-iso-week.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isoWeek(Number);
moment().isoWeek(); <span class=3D"comment">// Number</span>
moment().isoWeeks(Number);
moment().isoWeeks(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the <a href=3D"http://en.wikipedia.org/wiki/ISO_week_=
date">ISO week of the year</a>.</p>
<p>When setting the week of the year, the day of the week is retained.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/month/" name=3D"/get-se=
t/month/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/month/">=E6=9C=88</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/12-month.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().month(Number|String);
moment().month(); <span class=3D"comment">// Number</span>
moment().months(Number|String);
moment().months(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the month.</p>
<p>Accepts numbers from 0 to 11. If the range is exceeded, it will bubble u=
p to the year.</p>
<p><strong>Note</strong>: Months are zero indexed, so January is month 0.</=
p>
<p>As of <strong>2.1.0</strong>, a month name is also supported. This is pa=
rsed in the moment's current locale.</p>
<pre><code class=3D"language-javascript">moment().month(<span class=3D"stri=
ng">"January"</span>);
moment().month(<span class=3D"string">"Feb"</span>);</code></pre>
<p>Before version <strong>2.1.0</strong>, if a moment changed months and th=
e new month did not have enough days to keep the current day of month, it w=
ould overflow to the next month.</p>
<p>As of version <strong>2.1.0</strong>, this was changed to be clamped to =
the end of the target month.</p>
<pre><code class=3D"language-javascript"><span class=3D"comment">// before =
2.1.0</span>
moment([<span class=3D"number">2012</span>, <span class=3D"number">0</span>=
, <span class=3D"number">31</span>]).month(<span class=3D"number">1</span>)=
.format(<span class=3D"string">"YYYY-MM-DD"</span>); <span class=3D"comment=
">// 2012-03-02</span>
<span class=3D"comment">// after 2.1.0</span>
moment([<span class=3D"number">2012</span>, <span class=3D"number">0</span>=
, <span class=3D"number">31</span>]).month(<span class=3D"number">1</span>)=
.format(<span class=3D"string">"YYYY-MM-DD"</span>); <span class=3D"comment=
">// 2012-02-29</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/quarter/" name=3D"/get-=
set/quarter/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/quarter/">=E5=AD=A3=E5=
=BA=A6</a>
						=09
								<span>2.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/13-quarter.md" target=3D"_blank"=
>=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().quarter(); <span class=3D=
"comment">// Number</span>
moment().quarter(Number);</code></pre>

							</div>
					=09
						<p>Gets the quarter (1 to 4).</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
3-01-01T00:00:00.000'</span>).quarter() <span class=3D"comment">// 1</span>
moment(<span class=3D"string">'2013-04-01T00:00:00.000'</span>).subtract(<s=
pan class=3D"number">1</span>, <span class=3D"string">'ms'</span>).quarter(=
) <span class=3D"comment">// 1</span>
moment(<span class=3D"string">'2013-04-01T00:00:00.000'</span>).quarter() <=
span class=3D"comment">// 2</span>
moment(<span class=3D"string">'2013-07-01T00:00:00.000'</span>).subtract(<s=
pan class=3D"number">1</span>, <span class=3D"string">'ms'</span>).quarter(=
) <span class=3D"comment">// 2</span>
moment(<span class=3D"string">'2013-07-01T00:00:00.000'</span>).quarter() <=
span class=3D"comment">// 3</span>
moment(<span class=3D"string">'2013-10-01T00:00:00.000'</span>).subtract(<s=
pan class=3D"number">1</span>, <span class=3D"string">'ms'</span>).quarter(=
) <span class=3D"comment">// 3</span>
moment(<span class=3D"string">'2013-10-01T00:00:00.000'</span>).quarter() <=
span class=3D"comment">// 4</span>
moment(<span class=3D"string">'2014-01-01T00:00:00.000'</span>).subtract(<s=
pan class=3D"number">1</span>, <span class=3D"string">'ms'</span>).quarter(=
) <span class=3D"comment">// 4</span></code></pre>
<p>Sets the quarter (1 to 4).</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
3-01-01T00:00:00.000'</span>).quarter(<span class=3D"number">2</span>) <spa=
n class=3D"comment">// '2013-04-01T00:00:00.000'</span>
moment(<span class=3D"string">'2013-02-05T05:06:07.000'</span>).quarter(<sp=
an class=3D"number">2</span>).format() <span class=3D"comment">// '2013-05-=
05T05:06:07-07:00'</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/year/" name=3D"/get-set=
/year/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/year/">=E5=B9=B4</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/14-year.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().year(Number);
moment().year(); <span class=3D"comment">// Number</span>
moment().years(Number);
moment().years(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the year.</p>
<p>Accepts numbers from -270,000 to 270,000.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/week-year/" name=3D"/ge=
t-set/week-year/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/week-year/">=E5=91=A8 (=
=E5=8C=BA=E5=9F=9F=E6=A0=87=E5=87=86)</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/15-week-year.md" target=3D"_blan=
k">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().weekYear(Number);
moment().weekYear(); <span class=3D"comment">// Number</span></code></pre>

							</div>
					=09
						<p>Gets or sets the week-year according to the locale.</p>
<p>Because the first day of the first week does not always fall on the firs=
t day of the year, sometimes the week-year will differ from the month year.=
</p>
<p>For example, in the US, the week that contains Jan 1 is always the first=
 week. In the US, weeks also start on Sunday. If Jan 1 was a Monday, Dec 31=
 would belong to the same week as Jan 1, and thus the same week-year as Jan=
 1. Dec 30 would have a different week-year than Dec 31.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/iso-week-year/" name=3D=
"/get-set/iso-week-year/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/iso-week-year/">=E5=91=
=A8 (ISO)</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/16-iso-week-year.md" target=3D"_=
blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isoWeekYear(Number);
moment().isoWeekYear(); <span class=3D"comment">// Number</span></code></pr=
e>

							</div>
					=09
						<p>Gets or sets the <a href=3D"http://en.wikipedia.org/wiki/ISO_week_=
date">ISO week-year</a>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/weeks-in-year/" name=3D=
"/get-set/weeks-in-year/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/weeks-in-year/">=E5=91=
=A8=E6=95=B0</a>
						=09
								<span>2.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/17-weeks-in-year.md" target=3D"_=
blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().weeksInYear();</code></pr=
e>

							</div>
					=09
						<p>Gets the number of weeks according to locale in the current moment=
's year.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/iso-weeks-in-year/" nam=
e=3D"/get-set/iso-weeks-in-year/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/iso-weeks-in-year/">=E5=
=91=A8=E6=95=B0 (ISO)</a>
						=09
								<span>2.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/18-iso-weeks-in-year.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isoWeeksInYear();</code><=
/pre>

							</div>
					=09
						<p>Gets the number of weeks in the current moment's year, according t=
o <a href=3D"http://en.wikipedia.org/wiki/ISO_week_date">ISO weeks</a>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/get/" name=3D"/get-set/=
get/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/get/">=E5=8F=96=E5=80=
=BC</a>
						=09
								<span>2.2.1+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/19-get.md" target=3D"_blank">=E7=
=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().get(<span class=3D"string=
">'year'</span>);
moment().get(<span class=3D"string">'month'</span>);  <span class=3D"commen=
t">// 0 to 11</span>
moment().get(<span class=3D"string">'date'</span>);
moment().get(<span class=3D"string">'hour'</span>);
moment().get(<span class=3D"string">'minute'</span>);
moment().get(<span class=3D"string">'second'</span>);
moment().get(<span class=3D"string">'millisecond'</span>);</code></pre>

							</div>
					=09
						<p>String getter. In general</p>
<pre><code class=3D"language-javascript">moment().get(unit) =3D=3D=3D momen=
t()[unit]()</code></pre>
<p>Units are case insensitive, and support plural and short forms: year (ye=
ars,
y), month (months, M), date (dates, D), hour (hours, h), minute (minutes, m=
),
second (seconds, s), millisecond (milliseconds, ms).</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/set/" name=3D"/get-set/=
set/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/set/">=E8=B5=8B=E5=80=
=BC</a>
						=09
								<span>2.2.1+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/20-set.md" target=3D"_blank">=E7=
=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().set(String, Int);
moment().set(Object(String, Int));</code></pre>

							</div>
					=09
						<p>Generic setter, accepting unit as first argument, and value as sec=
ond:</p>
<pre><code class=3D"language-javascript">moment().set(<span class=3D"string=
">'year'</span>, <span class=3D"number">2013</span>);
moment().set(<span class=3D"string">'month'</span>, <span class=3D"number">=
3</span>);  <span class=3D"comment">// April</span>
moment().set(<span class=3D"string">'date'</span>, <span class=3D"number">1=
</span>);
moment().set(<span class=3D"string">'hour'</span>, <span class=3D"number">1=
3</span>);
moment().set(<span class=3D"string">'minute'</span>, <span class=3D"number"=
>20</span>);
moment().set(<span class=3D"string">'second'</span>, <span class=3D"number"=
>30</span>);
moment().set(<span class=3D"string">'millisecond'</span>, <span class=3D"nu=
mber">123</span>);

moment().set({<span class=3D"string">'year'</span>: <span class=3D"number">=
2013</span>, <span class=3D"string">'month'</span>: <span class=3D"number">=
3</span>});</code></pre>
<p>Units are case insensitive, and support plural and short forms: year (ye=
ars,
y), month (months, M), date (dates, D), hour (hours, h), minute (minutes, m=
),
second (seconds, s), millisecond (milliseconds, ms).</p>
<p>Object parsing was added in <strong>2.9.0</strong></p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/max/" name=3D"/get-set/=
max/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/max/">=E6=9C=80=E5=A4=
=A7=E5=80=BC</a>
						=09
								<span>2.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/21-max.md" target=3D"_blank">=E7=
=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.max(Moment[,Moment...]);</c=
ode></pre>

							</div>
					=09
						<p>Returns the maximum (most distant future) of the given moment inst=
ances.</p>
<p>For example:</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment().subtract(<span class=3D"number">1</span>, <span class=3D"st=
ring">'day'</span>);
<span class=3D"keyword">var</span> b =3D moment().add(<span class=3D"number=
">1</span>, <span class=3D"string">'day'</span>);
moment.max(a, b);  <span class=3D"comment">// b</span></code></pre>
<p>With no arguments the function returns a moment instance with the curren=
t time.</p>
<p>From version <code>2.10.5</code>, if an invalid moment is one of the arg=
uments, the result
is an invalid moment.</p>
<pre><code class=3D"language-javascript">moment.max(moment(), moment.invali=
d()).isValid() =3D=3D=3D <span class=3D"literal">false</span>
moment.max(moment.invalid(), moment()).isValid() =3D=3D=3D <span class=3D"l=
iteral">false</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/get-set/min/" name=3D"/get-set/=
min/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/get-set/min/">=E6=9C=80=E5=B0=
=8F=E5=80=BC</a>
						=09
								<span>2.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/02-get-set/22-min.md" target=3D"_blank">=E7=
=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.min(Moment[,Moment...]);</c=
ode></pre>

							</div>
					=09
						<p>Returns the minimum (most distant past) of the given moment instan=
ces.</p>
<p>For example:</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment().subtract(<span class=3D"number">1</span>, <span class=3D"st=
ring">'day'</span>);
<span class=3D"keyword">var</span> b =3D moment().add(<span class=3D"number=
">1</span>, <span class=3D"string">'day'</span>);
moment.min(a, b);  <span class=3D"comment">// a</span></code></pre>
<p>With no arguments the function returns a moment instance with the curren=
t time.</p>
<p>From version <code>2.10.5</code>, if an invalid moment is one of the arg=
uments, the result
is an invalid moment.</p>
<pre><code class=3D"language-javascript">moment.min(moment(), moment.invali=
d()).isValid() =3D=3D=3D <span class=3D"literal">false</span>
moment.min(moment.invalid(), moment()).isValid() =3D=3D=3D <span class=3D"l=
iteral">false</span></code></pre>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/manipulating/" name=3D"/manipul=
ating/"></a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/m=
anipulating/">=E6=93=8D=E4=BD=9C</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/intro/" name=3D"/m=
anipulating/intro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Once you have a <code>Moment</code>, you may want to manipulate it=
 in some way. There are a number of methods to help with this.</p>
<p>Moment.js uses the <a href=3D"http://en.wikipedia.org/wiki/Fluent_interf=
ace">fluent interface pattern</a>, also known as <a href=3D"http://en.wikip=
edia.org/wiki/Method_chaining">method chaining</a>. This allows you to do c=
razy things like the following.</p>
<pre><code class=3D"language-javascript">moment().add(<span class=3D"number=
">7</span>, <span class=3D"string">'days'</span>).subtract(<span class=3D"n=
umber">1</span>, <span class=3D"string">'months'</span>).year(<span class=
=3D"number">2009</span>).hours(<span class=3D"number">0</span>).minutes(<sp=
an class=3D"number">0</span>).seconds(<span class=3D"number">0</span>);</co=
de></pre>
<p><strong>Note:</strong> It should be noted that moments are mutable. Call=
ing any of the manipulation methods will change the original moment.</p>
<p>If you want to create a copy and manipulate it, you should use <code>mom=
ent#clone</code> before manipulating the moment. <a href=3D"http://momentjs=
.cn/docs/#/parsing/moment-clone/">More info on cloning.</a></p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/add/" name=3D"/man=
ipulating/add/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/add/">=E5=8A=A0=E6=
=B3=95</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/01-add.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().add(Number, String);
moment().add(Duration);
moment().add(Object);</code></pre>

							</div>
					=09
						<p>Mutates the original moment by adding time.</p>
<p>This is a pretty robust function for adding time to an existing moment. =
To add time, pass the key of what time you want to add, and the amount you =
want to add.</p>
<pre><code class=3D"language-javascript">moment().add(<span class=3D"number=
">7</span>, <span class=3D"string">'days'</span>);</code></pre>
<p>There are some shorthand keys as well if you're into that whole brevity =
thing.</p>
<pre><code class=3D"language-javascript">moment().add(<span class=3D"number=
">7</span>, <span class=3D"string">'d'</span>);</code></pre>
<table class=3D"table table-striped table-bordered">
  <tbody>
    <tr>
      <th>Key</th>
      <th>Shorthand</th>
    </tr>
    <tr>
      <td>years</td>
      <td>y</td>
    </tr>
    <tr>
      <td>quarters</td>
      <td>Q</td>
    </tr>
    <tr>
      <td>months</td>
      <td>M</td>
    </tr>
    <tr>
      <td>weeks</td>
      <td>w</td>
    </tr>
    <tr>
      <td>days</td>
      <td>d</td>
    </tr>
    <tr>
      <td>hours</td>
      <td>h</td>
    </tr>
    <tr>
      <td>minutes</td>
      <td>m</td>
    </tr>
    <tr>
      <td>seconds</td>
      <td>s</td>
    </tr>
    <tr>
      <td>milliseconds</td>
      <td>ms</td>
    </tr>
  </tbody>
</table>

<p>If you want to add multiple different keys at the same time, you can pas=
s them in as an object literal.</p>
<pre><code class=3D"language-javascript">moment().add(<span class=3D"number=
">7</span>, <span class=3D"string">'days'</span>).add(<span class=3D"number=
">1</span>, <span class=3D"string">'months'</span>); <span class=3D"comment=
">// with chaining</span>
moment().add({days:<span class=3D"number">7</span>,months:<span class=3D"nu=
mber">1</span>}); <span class=3D"comment">// with object literal</span></co=
de></pre>
<p>There are no upper limits for the amounts, so you can overload any of th=
e parameters.</p>
<pre><code class=3D"language-javascript">moment().add(<span class=3D"number=
">1000000</span>, <span class=3D"string">'milliseconds'</span>); <span clas=
s=3D"comment">// a million milliseconds</span>
moment().add(<span class=3D"number">360</span>, <span class=3D"string">'day=
s'</span>); <span class=3D"comment">// 360 days</span></code></pre>
<h4 id=3D"special-considerations-for-months-and-years">Special consideratio=
ns for months and years</h4>
<p>If the day of the month on the original date is greater than the number =
of days in the final month,
the day of the month will change to the last day in the final month.</p>
<pre><code class=3D"language-javascript">moment([<span class=3D"number">201=
0</span>, <span class=3D"number">0</span>, <span class=3D"number">31</span>=
]);                  <span class=3D"comment">// January 31</span>
moment([<span class=3D"number">2010</span>, <span class=3D"number">0</span>=
, <span class=3D"number">31</span>]).add(<span class=3D"number">1</span>, <=
span class=3D"string">'months'</span>); <span class=3D"comment">// February=
 28</span></code></pre>
<p>There are also special considerations to keep in mind when adding time t=
hat crosses over daylight saving time.
If you are adding years, months, weeks, or days, the original hour will alw=
ays match the added hour.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 m =3D moment(<span class=3D"keyword">new</span> Date(<span class=3D"number=
">2011</span>, <span class=3D"number">2</span>, <span class=3D"number">12</=
span>, <span class=3D"number">5</span>, <span class=3D"number">0</span>, <s=
pan class=3D"number">0</span>)); <span class=3D"comment">// the day before =
DST in the US</span>
m.hours(); <span class=3D"comment">// 5</span>
m.add(<span class=3D"number">1</span>, <span class=3D"string">'days'</span>=
).hours(); <span class=3D"comment">// 5</span></code></pre>
<p>If you are adding hours, minutes, seconds, or milliseconds, the assumpti=
on is that you want precision to the hour, and will result in a different h=
our.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 m =3D moment(<span class=3D"keyword">new</span> Date(<span class=3D"number=
">2011</span>, <span class=3D"number">2</span>, <span class=3D"number">12</=
span>, <span class=3D"number">5</span>, <span class=3D"number">0</span>, <s=
pan class=3D"number">0</span>)); <span class=3D"comment">// the day before =
DST in the US</span>
m.hours(); <span class=3D"comment">// 5</span>
m.add(<span class=3D"number">24</span>, <span class=3D"string">'hours'</spa=
n>).hours(); <span class=3D"comment">// 6</span></code></pre>
<p>Alternatively, you can use <a href=3D"http://momentjs.cn/docs/#/duration=
s/">durations</a> to add to moments.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 duration =3D moment.duration({<span class=3D"string">'days'</span> : <span=
 class=3D"number">1</span>});
moment([<span class=3D"number">2012</span>, <span class=3D"number">0</span>=
, <span class=3D"number">31</span>]).add(duration); <span class=3D"comment"=
>// February 1</span></code></pre>
<p>Before version <code>2.8.0</code>, the <code>moment#add(String, Number)<=
/code> syntax was also supported. It has been deprecated in favor of <code>=
moment#add(Number, String)</code>.</p>
<pre><code class=3D"language-javascript">moment().add(<span class=3D"string=
">'seconds'</span>, <span class=3D"number">1</span>); <span class=3D"commen=
t">// Deprecated in 2.8.0</span>
moment().add(<span class=3D"number">1</span>, <span class=3D"string">'secon=
ds'</span>);</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/subtract/" name=3D=
"/manipulating/subtract/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/subtract/">=E5=87=
=8F=E6=B3=95</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/02-subtract.md" target=3D"_=
blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().subtract(Number, String);
moment().subtract(Duration);
moment().subtract(Object);</code></pre>

							</div>
					=09
						<p>Mutates the original moment by subtracting time.</p>
<p>This is exactly the same as <code>moment#add</code>, only instead of add=
ing time, it subtracts time.</p>
<pre><code class=3D"language-javascript">moment().subtract(<span class=3D"n=
umber">7</span>, <span class=3D"string">'days'</span>);</code></pre>
<p>Before version <code>2.8.0</code>, the <code>moment#subtract(String, Num=
ber)</code> syntax was also supported. It has been deprecated in favor of <=
code>moment#subtract(Number, String)</code>.</p>
<pre><code class=3D"language-javascript">moment().subtract(<span class=3D"s=
tring">'seconds'</span>, <span class=3D"number">1</span>); <span class=3D"c=
omment">// Deprecated in 2.8.0</span>
moment().subtract(<span class=3D"number">1</span>, <span class=3D"string">'=
seconds'</span>);</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/start-of/" name=3D=
"/manipulating/start-of/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/start-of/">=E5=BC=
=80=E5=A7=8B=E6=97=B6=E9=97=B4</a>
						=09
								<span>1.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/03-start-of.md" target=3D"_=
blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().startOf(String);</code></=
pre>

							</div>
					=09
						<p>Mutates the original moment by setting it to the start of a unit o=
f time.</p>
<pre><code class=3D"language-javascript">moment().startOf(<span class=3D"st=
ring">'year'</span>);    <span class=3D"comment">// set to January 1st, 12:=
00 am this year</span>
moment().startOf(<span class=3D"string">'month'</span>);   <span class=3D"c=
omment">// set to the first of this month, 12:00 am</span>
moment().startOf(<span class=3D"string">'quarter'</span>);  <span class=3D"=
comment">// set to the beginning of the current quarter, 1st day of months,=
 12:00 am</span>
moment().startOf(<span class=3D"string">'week'</span>);    <span class=3D"c=
omment">// set to the first day of this week, 12:00 am</span>
moment().startOf(<span class=3D"string">'isoWeek'</span>); <span class=3D"c=
omment">// set to the first day of this week according to ISO 8601, 12:00 a=
m</span>
moment().startOf(<span class=3D"string">'day'</span>);     <span class=3D"c=
omment">// set to 12:00 am today</span>
moment().startOf(<span class=3D"string">'hour'</span>);    <span class=3D"c=
omment">// set to now, but with 0 mins, 0 secs, and 0 ms</span>
moment().startOf(<span class=3D"string">'minute'</span>);  <span class=3D"c=
omment">// set to now, but with 0 seconds and 0 milliseconds</span>
moment().startOf(<span class=3D"string">'second'</span>);  <span class=3D"c=
omment">// same as moment().milliseconds(0);</span></code></pre>
<p>These shortcuts are essentially the same as the following.</p>
<pre><code class=3D"language-javascript">moment().startOf(<span class=3D"st=
ring">'year'</span>);
moment().month(<span class=3D"number">0</span>).date(<span class=3D"number"=
>1</span>).hours(<span class=3D"number">0</span>).minutes(<span class=3D"nu=
mber">0</span>).seconds(<span class=3D"number">0</span>).milliseconds(<span=
 class=3D"number">0</span>);</code></pre>
<pre><code class=3D"language-javascript">moment().startOf(<span class=3D"st=
ring">'hour'</span>);
moment().minutes(<span class=3D"number">0</span>).seconds(<span class=3D"nu=
mber">0</span>).milliseconds(<span class=3D"number">0</span>)</code></pre>
<p>As of version <strong>2.0.0</strong>, <code>moment#startOf('day')</code>=
 replaced <code>moment#sod</code>.</p>
<p><strong>Note:</strong> <code>moment#startOf('week')</code> was added in =
version <strong>2.0.0</strong>.</p>
<p>As of version <strong>2.1.0</strong>, <code>moment#startOf('week')</code=
> uses the locale aware week start day.</p>
<p><strong>Note:</strong> <code>moment#startOf('isoWeek')</code> was added =
in version <strong>2.2.0</strong>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/end-of/" name=3D"/=
manipulating/end-of/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/end-of/">=E7=BB=93=
=E6=9D=9F=E6=97=B6=E9=97=B4</a>
						=09
								<span>1.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/04-end-of.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().endOf(String);</code></pr=
e>

							</div>
					=09
						<p>Mutates the original moment by setting it to the end of a unit of =
time.</p>
<p>This is the same as <code>moment#startOf</code>, only instead of setting=
 to the start of a unit of time, it sets to the end of a unit of time.</p>
<pre><code class=3D"language-javascript">moment().endOf(<span class=3D"stri=
ng">"year"</span>); <span class=3D"comment">// set the moment to 12-31 11:5=
9:59.999 pm this year</span></code></pre>
<p>As of version <strong>2.0.0</strong>, <code>moment#endOf('day')</code> r=
eplaced <code>moment#eod</code>.</p>
<p><strong>Note:</strong> <code>moment#endOf('week')</code> was added in ve=
rsion <strong>2.0.0</strong>.</p>
<p>As of version <strong>2.1.0</strong>, <code>moment#endOf('week')</code> =
uses the locale aware week start day.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/max/" name=3D"/man=
ipulating/max/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/max/">=E6=9C=80=E5=
=A4=A7=E5=80=BC</a>
						=09
								<span>From 2.1.0, Deprecated 2.7.0</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/05-max.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().max(Moment|String|Number|=
Date|Array);</code></pre>

							</div>
					=09
						<p><strong>NOTE</strong>: This function has been <strong>deprecated</=
strong> in <strong>2.7.0</strong>. Consider <a href=3D"http://momentjs.cn/d=
ocs/#/get-set/min/"><code>moment.min</code></a> instead.</p>
<hr>
<p>Limits the moment to a maximum of another moment value. So <code>a.max(b=
)</code> is the same as <code>a =3D moment.min(a, b)</code> (note that <cod=
e>max</code> is converted to <code>min</code>).</p>
<p>Sometimes, server clocks are not quite in sync with client clocks. This =
ends up displaying humanized strings such as "in a few seconds" rather than=
 "a few seconds ago". You can prevent that with <code>moment#max()</code>:<=
/p>
<p>This is the counterpart for <code>moment#min</code>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 momentFromServer =3D moment(input);
<span class=3D"keyword">var</span> clampedMoment =3D momentFromServer.max()=
;</code></pre>
<p>You can pass anything to <code>moment#max</code> that you would pass to =
<code>moment()</code>.</p>
<pre><code class=3D"language-javascript">moment().max(moment().add(<span cl=
ass=3D"number">1</span>, <span class=3D"string">'d'</span>));
moment().max(<span class=3D"string">"2013-04-20T20:00:00+0800"</span>);
moment().max(<span class=3D"string">"Jan 1 2001"</span>, <span class=3D"str=
ing">"MMM D YYYY"</span>);
moment().max(<span class=3D"keyword">new</span> Date(<span class=3D"number"=
>2012</span>, <span class=3D"number">1</span>, <span class=3D"number">8</sp=
an>));</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/min/" name=3D"/man=
ipulating/min/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/min/">=E6=9C=80=E5=
=B0=8F=E5=80=BC</a>
						=09
								<span>From 2.1.0, Deprecated 2.7.0</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/06-min.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().min(Moment|String|Number|=
Date|Array);</code></pre>

							</div>
					=09
						<p><strong>NOTE</strong>: This function has been <strong>deprecated</=
strong> in <strong>2.7.0</strong>. Consider <a href=3D"http://momentjs.cn/d=
ocs/#/get-set/max/"><code>moment.max</code></a> instead.</p>
<hr>
<p>Limits the moment to a minimum of another moment value. So <code>a.min(b=
)</code> is the same as <code>a =3D moment.max(a, b)</code> (note that <cod=
e>min</code> is converted to <code>max</code>).</p>
<p>This is the counterpart for <code>moment#max</code>.</p>
<pre><code class=3D"language-javascript">moment().min(<span class=3D"string=
">"2013-04-20T20:00:00+0800"</span>);</code></pre>
<p>This can be used in conjunction with <code>moment#max</code> to clamp a =
moment to a range.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 start  =3D moment().startOf(<span class=3D"string">'week'</span>);
<span class=3D"keyword">var</span> end    =3D moment().endOf(<span class=3D=
"string">'week'</span>);
<span class=3D"keyword">var</span> actual =3D moment().min(start).max(end);=
</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/local/" name=3D"/m=
anipulating/local/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/local/">=E6=9C=AC=
=E5=9C=B0=E5=8C=96</a>
						=09
								<span>1.5.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/07-local.md" target=3D"_bla=
nk">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().local();</code></pre>

							</div>
					=09
						<p>Sets a flag on the original moment to internally use <code>Date#ge=
t*</code> and <code>Date#set*</code> instead of <code>Date#getUTC*</code> a=
nd <code>Date#setUTC*</code>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment.utc([<span class=3D"number">2011</span>, <span class=3D"numbe=
r">0</span>, <span class=3D"number">1</span>, <span class=3D"number">8</spa=
n>]);
a.hours(); <span class=3D"comment">// 8 UTC</span>
a.local();
a.hours(); <span class=3D"comment">// 0 PST</span></code></pre>
<p>See <a href=3D"http://momentjs.cn/docs/#/parsing/utc/">moment.utc()</a> =
for more information on UTC mode.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/utc/" name=3D"/man=
ipulating/utc/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/utc/">UTC</a>
						=09
								<span>1.5.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/08-utc.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().utc();</code></pre>

							</div>
					=09
						<p>Sets a flag on the original moment to internally use <code>Date#ge=
tUTC*</code> and <code>Date#setUTC*</code> instead of <code>Date#get*</code=
> and <code>Date#set*</code>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2011</span>, <span class=3D"number">0=
</span>, <span class=3D"number">1</span>, <span class=3D"number">8</span>])=
;
a.hours(); <span class=3D"comment">// 8 PST</span>
a.utc();
a.hours(); <span class=3D"comment">// 16 UTC</span></code></pre>
<p>See <a href=3D"http://momentjs.cn/docs/#/parsing/utc/">moment.utc()</a> =
for more information on UTC mode.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/utc-offset/" name=
=3D"/manipulating/utc-offset/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/utc-offset/">UTC =
=E5=81=8F=E7=A7=BB=E9=87=8F</a>
						=09
								<span>2.9.0++</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/09-utc-offset.md" target=3D=
"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().utcOffset();
moment().utcOffset(Number|String);</code></pre>

							</div>
					=09
						<p>Get the utc offset in minutes.</p>
<p><strong>NOTE</strong>: Unlike <a href=3D"http://momentjs.cn/docs/#/manip=
ulating/timezone-offset/"><code>moment.fn.zone</code></a> this
function returns the real offset from UTC, not the reverse offset (as retur=
ned
by <code>Date.prototype.getTimezoneOffset</code>).</p>
<p>Getting the utcOffset of the current object:</p>
<pre><code class=3D"language-javascript">moment().utcOffset(); <span class=
=3D"comment">// (-240, -120, -60, 0, 60, 120, 240, etc.)</span></code></pre=
>
<p>Setting the utc offset by supplying minutes. Note that once you set an o=
ffset,
it's fixed and won't change on its own (i.e there are no DST rules). If you=
 want
an actual timezone -- time in a particular location, like
<code>America/Los_Angeles</code>, consider <a href=3D"http://momentjs.cn/ti=
mezone/">moment-timezone</a>.</p>
<pre><code class=3D"language-javascript">moment().utcOffset(<span class=3D"=
number">120</span>);</code></pre>
<p>If the input is less than <code>16</code> and greater than <code>-16</co=
de>, it will interpret your input as hours instead.</p>
<pre><code class=3D"language-javascript"><span class=3D"comment">// these a=
re equivalent</span>
moment().utcOffset(<span class=3D"number">8</span>);  <span class=3D"commen=
t">// set hours offset</span>
moment().utcOffset(<span class=3D"number">480</span>);  <span class=3D"comm=
ent">// set minutes offset (8 * 60)</span></code></pre>
<p>It is also possible to set the utc offset from a string.</p>
<pre><code class=3D"language-javascript"><span class=3D"comment">// these a=
re equivalent</span>
moment().utcOffset(<span class=3D"string">"+08:00"</span>);
moment().utcOffset(<span class=3D"number">8</span>);
moment().utcOffset(<span class=3D"number">480</span>);</code></pre>
<p><code>moment#utcOffset</code> will search the string for the first match=
 of <code>+00:00 +0000
-00:00 -0000</code>, so you can even pass an ISO8601 formatted string and t=
he moment
will be changed to that utc offset.</p>
<p>Note that the string is required to start with the <code>+</code> or <co=
de>-</code> character.  Passing a string that
does not start with <code>+</code> or <code>-</code> will be interpreted as=
 if it were <code>"+00:00"</code>.</p>
<pre><code class=3D"language-javascript">moment().utcOffset(<span class=3D"=
string">"2013-03-07T07:00:00+08:00"</span>);</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/manipulating/timezone-offset/" =
name=3D"/manipulating/timezone-offset/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/manipulating/timezone-offset/">=
=E6=97=B6=E5=8C=BA=E5=81=8F=E7=A7=BB=E9=87=8F</a>
						=09
								<span>From 1.2.0, deprecated 2.9.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/03-manipulating/10-timezone-offset.md" targ=
et=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().zone();
moment().zone(Number|String);</code></pre>

							</div>
					=09
						<p><strong>NOTE</strong>: This function has been <strong>deprecated</=
strong> in <strong>2.9.0</strong>. Consider <a href=3D"http://momentjs.cn/d=
ocs/#/manipulating/utc-offset/"><code>moment.fn.utcOffset</code></a> instea=
d.</p>
<p>Get the timezone offset in minutes.</p>
<pre><code class=3D"language-javascript">moment().zone(); <span class=3D"co=
mment">// (60, 120, 240, etc.)</span></code></pre>
<p>As of version <strong>2.1.0</strong>, it is possible to set the offset b=
y passing in the number of minutes offset from GMT.</p>
<pre><code class=3D"language-javascript">moment().zone(<span class=3D"numbe=
r">120</span>);</code></pre>
<p>If the input is less than <code>16</code> and greater than <code>-16</co=
de>, it will interpret your input as hours instead.</p>
<pre><code class=3D"language-javascript"><span class=3D"comment">// these a=
re equivalent</span>
moment().zone(<span class=3D"number">480</span>);
moment().zone(<span class=3D"number">8</span>);</code></pre>
<p>It is also possible to set the zone from a string.</p>
<pre><code class=3D"language-javascript">moment().zone(<span class=3D"strin=
g">"-08:00"</span>);</code></pre>
<p><code>moment#zone</code> will search the string for the first match of <=
code>+00:00 +0000 -00:00 -0000</code>, so you can even pass an ISO8601 form=
atted string and the moment will be changed to that zone.</p>
<pre><code class=3D"language-javascript">moment().zone(<span class=3D"strin=
g">"2013-03-07T07:00:00-08:00"</span>);</code></pre>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/displaying/" name=3D"/displayin=
g/"></a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/d=
isplaying/">=E6=98=BE=E7=A4=BA</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/intro/" name=3D"/dis=
playing/intro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Once parsing and manipulation are done, you need some way to displ=
ay the moment.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/format/" name=3D"/di=
splaying/format/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/format/">=E6=A0=BC=
=E5=BC=8F=E5=8C=96</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/01-format.md" target=3D"_blan=
k">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().format();
moment().format(String);</code></pre>

							</div>
					=09
						<p>This is the most robust display option. It takes a string of token=
s and replaces them with their corresponding values.</p>
<pre><code class=3D"language-javascript">moment().format();                =
                <span class=3D"comment">// "2014-09-08T08:02:17-05:00" (ISO=
 8601)</span>
moment().format(<span class=3D"string">"dddd, MMMM Do YYYY, h:mm:ss a"</spa=
n>); <span class=3D"comment">// "Sunday, February 14th 2010, 3:25:50 pm"</s=
pan>
moment().format(<span class=3D"string">"ddd, hA"</span>);                  =
     <span class=3D"comment">// "Sun, 3PM"</span>
moment(<span class=3D"string">'gibberish'</span>).format(<span class=3D"str=
ing">'YYYY MM DD'</span>);         <span class=3D"comment">// "Invalid date=
"</span></code></pre>
<table class=3D"table table-striped table-bordered">
  <tbody>
    <tr>
      <th></th>
      <th>Token</th>
      <th>Output</th>
    </tr>
    <tr>
      <td><b>Month</b></td>
      <td>M</td>
      <td>1 2 ... 11 12</td>
    </tr>
    <tr>
      <td></td>
      <td>Mo</td>
      <td>1st 2nd ... 11th 12th</td>
    </tr>
    <tr>
      <td></td>
      <td>MM</td>
      <td>01 02 ... 11 12</td>
    </tr>
    <tr>
      <td></td>
      <td>MMM</td>
      <td>Jan Feb ... Nov Dec</td>
    </tr>
    <tr>
      <td></td>
      <td>MMMM</td>
      <td>January February ... November December</td>
    </tr>
    <tr>
      <td><b>Quarter</b></td>
      <td>Q</td>
      <td>1 2 3 4</td>
    </tr>
    <tr>
      <td><b>Day of Month</b></td>
      <td>D</td>
      <td>1 2 ... 30 31</td>
    </tr>
    <tr>
      <td></td>
      <td>Do</td>
      <td>1st 2nd ... 30th 31st</td>
    </tr>
    <tr>
      <td></td>
      <td>DD</td>
      <td>01 02 ... 30 31</td>
    </tr>
    <tr>
      <td><b>Day of Year</b></td>
      <td>DDD</td>
      <td>1 2 ... 364 365</td>
    </tr>
    <tr>
      <td></td>
      <td>DDDo</td>
      <td>1st 2nd ... 364th 365th</td>
    </tr>
    <tr>
      <td></td>
      <td>DDDD</td>
      <td>001 002 ... 364 365</td>
    </tr>
    <tr>
      <td><b>Day of Week</b></td>
      <td>d</td>
      <td>0 1 ... 5 6</td>
    </tr>
    <tr>
      <td></td>
      <td>do</td>
      <td>0th 1st ... 5th 6th</td>
    </tr>
    <tr>
      <td></td>
      <td>dd</td>
      <td>Su Mo ... Fr Sa</td>
    </tr>
    <tr>
      <td></td>
      <td>ddd</td>
      <td>Sun Mon ... Fri Sat</td>
    </tr>
    <tr>
      <td></td>
      <td>dddd</td>
      <td>Sunday Monday ... Friday Saturday</td>
    </tr>
    <tr>
      <td><b>Day of Week (Locale)</b></td>
      <td>e</td>
      <td>0 1 ... 5 6</td>
    </tr>
    <tr>
      <td><b>Day of Week (ISO)</b></td>
      <td>E</td>
      <td>1 2 ... 6 7</td>
    </tr>
    <tr>
      <td><b>Week of Year</b></td>
      <td>w</td>
      <td>1 2 ... 52 53</td>
    </tr>
    <tr>
      <td></td>
      <td>wo</td>
      <td>1st 2nd ... 52nd 53rd</td>
    </tr>
    <tr>
      <td></td>
      <td>ww</td>
      <td>01 02 ... 52 53</td>
    </tr>
    <tr>
      <td><b>Week of Year (ISO)</b></td>
      <td>W</td>
      <td>1 2 ... 52 53</td>
    </tr>
    <tr>
      <td></td>
      <td>Wo</td>
      <td>1st 2nd ... 52nd 53rd</td>
    </tr>
    <tr>
      <td></td>
      <td>WW</td>
      <td>01 02 ... 52 53</td>
    </tr>
    <tr>
      <td><b>Year</b></td>
      <td>YY</td>
      <td>70 71 ... 29 30</td>
    </tr>
    <tr>
      <td></td>
      <td>YYYY</td>
      <td>1970 1971 ... 2029 2030</td>
    </tr>
    <tr>
      <td><b>Week Year</b></td>
      <td>gg</td>
      <td>70 71 ... 29 30</td>
    </tr>
    <tr>
      <td></td>
      <td>gggg</td>
      <td>1970 1971 ... 2029 2030</td>
    </tr>
    <tr>
      <td><b>Week Year (ISO)</b></td>
      <td>GG</td>
      <td>70 71 ... 29 30</td>
    </tr>
    <tr>
      <td></td>
      <td>GGGG</td>
      <td>1970 1971 ... 2029 2030</td>
    </tr>
    <tr>
      <td><b>AM/PM</b></td>
      <td>A</td>
      <td>AM PM</td>
    </tr>
    <tr>
      <td></td>
      <td>a</td>
      <td>am pm</td>
    </tr>
    <tr>
      <td><b>Hour</b></td>
      <td>H</td>
      <td>0 1 ... 22 23</td>
    </tr>
    <tr>
      <td></td>
      <td>HH</td>
      <td>00 01 ... 22 23</td>
    </tr>
    <tr>
      <td></td>
      <td>h</td>
      <td>1 2 ... 11 12</td>
    </tr>
    <tr>
      <td></td>
      <td>hh</td>
      <td>01 02 ... 11 12</td>
    </tr>
    <tr>
      <td><b>Minute</b></td>
      <td>m</td>
      <td>0 1 ... 58 59</td>
    </tr>
    <tr>
      <td></td>
      <td>mm</td>
      <td>00 01 ... 58 59</td>
    </tr>
    <tr>
      <td><b>Second</b></td>
      <td>s</td>
      <td>0 1 ... 58 59</td>
    </tr>
    <tr>
      <td></td>
      <td>ss</td>
      <td>00 01 ... 58 59</td>
    </tr>
    <tr>
      <td><b>Fractional Second</b></td>
      <td>S</td>
      <td>0 1 ... 8 9</td>
    </tr>
    <tr>
      <td></td>
      <td>SS</td>
      <td>00 01 ... 98 99</td>
    </tr>
    <tr>
      <td></td>
      <td>SSS</td>
      <td>000 001 ... 998 999</td>
    </tr>
    <tr>
      <td></td>
      <td>SSSS ... SSSSSSSSS</td>
      <td>000[0..] 001[0..] ... 998[0..] 999[0..]</td>
    </tr>
    <tr>
      <td><b>Timezone</b></td>
      <td>z or zz</td>
      <td>
        EST CST ... MST PST
        <br>
        <b>Note:</b> as of <b>1.6.0</b>, the z/zz format tokens have been d=
eprecated. <a href=3D"https://github.com/moment/moment/issues/162">Read mor=
e about it here.</a>
      </td>
    </tr>
    <tr>
      <td></td>
      <td>Z</td>
      <td>-07:00 -06:00 ... +06:00 +07:00</td>
    </tr>
    <tr>
      <td></td>
      <td>ZZ</td>
      <td>
        -0700 -0600 ... +0600 +0700
      </td>
    </tr>
    <tr>
      <td><b>Unix Timestamp</b></td>
      <td>X</td>
      <td>1360013296</td>
    </tr>
    <tr>
      <td><b>Unix Millisecond Timestamp</b></td>
      <td>x</td>
      <td>1360013296123</td>
    </tr>
  </tbody>
</table>

<p><code>Z ZZ</code> were added in <strong>1.2.0</strong>.</p>
<p><code>S SS SSS</code> were added in <strong>1.6.0</strong>.</p>
<p><code>X</code> was added in <strong>2.0.0</strong>.</p>
<p><code>e E gg gggg GG GGGG</code> were added in <strong>2.1.0</strong>.</=
p>
<p><code>x</code> was added in <strong>2.8.4</strong>.</p>
<p><code>SSSS</code> to <code>SSSSSSSSS</code> were added in <strong>2.10.5=
</strong>. They display 3 significant
digits and the rest is filled with zeros.</p>
<h4 id=3D"localized-formats">Localized formats</h4>
<p>Because preferred formatting differs based on locale, there are a few to=
kens that can be used to format a moment based on its locale.</p>
<p>There are upper and lower case variations on the same formats. The lower=
case version is intended to be the shortened version of its uppercase count=
erpart.</p>
<table class=3D"table table-striped table-bordered">
  <tbody>
    <tr>
      <td><b>Time</b></td>
      <td>LT</td>
      <td>8:30 PM</td>
    </tr>
    <tr>
      <td><b>Time with seconds</b></td>
      <td>LTS</td>
      <td>8:30:25 PM</td>
    </tr>
    <tr>
      <td><b>Month numeral, day of month, year</b></td>
      <td>L</td>
      <td>09/04/1986</td>
    </tr>
    <tr>
      <td></td>
      <td>l</td>
      <td>9/4/1986</td>
    </tr>
    <tr>
      <td><b>Month name, day of month, year</b></td>
      <td>LL</td>
      <td>September 4 1986</td>
    </tr>
    <tr>
      <td></td>
      <td>ll</td>
      <td>Sep 4 1986</td>
    </tr>
    <tr>
      <td><b>Month name, day of month, year, time</b></td>
      <td>LLL</td>
      <td>September 4 1986 8:30 PM</td>
    </tr>
    <tr>
      <td></td>
      <td>lll</td>
      <td>Sep 4 1986 8:30 PM</td>
    </tr>
    <tr>
      <td><b>Month name, day of month, day of week, year, time</b></td>
      <td>LLLL</td>
      <td>Thursday, September 4 1986 8:30 PM</td>
    </tr>
    <tr>
      <td></td>
      <td>llll</td>
      <td>Thu, Sep 4 1986 8:30 PM</td>
    </tr>
  </tbody>
</table>

<p><code>L LL LLL LLLL LT</code> are available in version <strong>1.3.0</st=
rong>. <code>l ll lll llll</code> are available in <strong>2.0.0</strong>.
<code>LTS</code> was added in <strong>2.8.4</strong>.</p>
<h4 id=3D"escaping-characters">Escaping characters</h4>
<p>To escape characters in format strings, you can wrap the characters in s=
quare brackets.</p>
<pre><code class=3D"language-javascript">moment().format(<span class=3D"str=
ing">'[today] dddd'</span>); <span class=3D"comment">// 'today Sunday'</spa=
n></code></pre>
<h4 id=3D"similarities-and-differences-with-ldml">Similarities and differen=
ces with LDML</h4>
<p><strong>Note:</strong> While these date formats are very similar to LDML=
 date formats, there are a few minor differences regarding day of month, da=
y of year, and day of week.</p>
<p>For a breakdown of a few different date formatting tokens across differe=
nt locales, see <a href=3D"https://docs.google.com/spreadsheet/ccc?key=3D0A=
tgZluze7WMJdDBOLUZfSFIzenIwOHNjaWZoeGFqbWc&amp;hl=3Den_US#gid=3D0">this cha=
rt of date formatting tokens.</a></p>
<h4 id=3D"formatting-speed">Formatting speed</h4>
<p>To compare Moment.js formatting speed against other libraries, check out=
 <a href=3D"http://jsperf.com/date-formatting/8">this comparison against ot=
her libraries</a>.</p>
<h4 id=3D"other-tokens">Other tokens</h4>
<p>If you are more comfortable working with strftime instead of LDML-like p=
arsing tokens, you can use Ben Oakes' plugin. <a href=3D"https://github.com=
/benjaminoakes/moment-strftime">benjaminoakes/moment-strftime</a>.</p>
<h4 id=3D"default-format">Default format</h4>
<p>As of version <strong>1.5.0</strong>, calling <code>moment#format</code>=
 without a format will default to <code>moment.defaultFormat</code>. Out of=
 the box, <code>moment.defaultFormat</code> is the ISO8601 format <code>YYY=
Y-MM-DDTHH:mm:ssZ</code>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/fromnow/" name=3D"/d=
isplaying/fromnow/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/fromnow/">=E6=97=B6=
=E5=B7=AE (=E4=B9=8B=E5=89=8D=EF=BC=8C=E7=8E=B0=E5=9C=A8=E4=B8=BA=E5=9F=BA=
=E5=87=86)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/02-fromnow.md" target=3D"_bla=
nk">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().fromNow();
moment().fromNow(Boolean);</code></pre>

							</div>
					=09
						<p>A common way of displaying time is handled by <code>moment#fromNow=
</code>. This is sometimes called timeago or relative time.</p>
<pre><code class=3D"language-javascript">moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">29</span>=
]).fromNow(); <span class=3D"comment">// 4 years ago</span></code></pre>
<p>If you pass <code>true</code>, you can get the value without the suffix.=
</p>
<pre><code class=3D"language-javascript">moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">29</span>=
]).fromNow();     <span class=3D"comment">// 4 years ago</span>
moment([<span class=3D"number">2007</span>, <span class=3D"number">0</span>=
, <span class=3D"number">29</span>]).fromNow(<span class=3D"literal">true</=
span>); <span class=3D"comment">// 4 years</span></code></pre>
<p>The base strings are <a href=3D"http://momentjs.cn/docs/#/customization/=
relative-time/">customized by the current locale</a>.</p>
<p>The breakdown of which string is displayed for each length of time is ou=
tlined in the table below.</p>
<table class=3D"table table-striped table-bordered">
  <thead>
    <tr>
      <th>Range</th>
      <th>Key</th>
      <th>Sample Output</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0 to 45 seconds</td>
      <td>s</td>
      <td>a few seconds ago</td>
    </tr>
    <tr>
      <td>45 to 90 seconds</td>
      <td>m</td>
      <td>a minute ago</td>
    </tr>
    <tr>
      <td>90 seconds to 45 minutes</td>
      <td>mm</td>
      <td>2 minutes ago ... 45 minutes ago</td>
    </tr>
    <tr>
      <td>45 to 90 minutes</td>
      <td>h</td>
      <td>an hour ago</td>
    </tr>
    <tr>
      <td>90 minutes to 22 hours </td>
      <td>hh</td>
      <td>2 hours ago ... 22 hours ago</td>
    </tr>
    <tr>
      <td>22 to 36 hours</td>
      <td>d</td>
      <td>a day ago</td>
    </tr>
    <tr>
      <td>36 hours to 25 days</td>
      <td>dd</td>
      <td>2 days ago ... 25 days ago</td>
    </tr>
    <tr>
      <td>25 to 45 days</td>
      <td>M</td>
      <td>a month ago</td>
    </tr>
    <tr>
      <td>45 to 345 days</td>
      <td>MM</td>
      <td>2 months ago ... 11 months ago</td>
    </tr>
    <tr>
      <td>345 to 545 days (1.5 years)</td>
      <td>y</td>
      <td>a year ago</td>
    </tr>
    <tr>
      <td>546 days+</td>
      <td>yy</td>
      <td>2 years ago ... 20 years ago</td>
    </tr>
  </tbody>
</table>

<p>From version <strong>2.10.3</strong>, if the target moment object is inv=
alid the result is
the localized Invalid date string.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/from/" name=3D"/disp=
laying/from/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/from/">=E6=97=B6=E5=
=B7=AE (=E4=B9=8B=E5=89=8D)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/03-from.md" target=3D"_blank"=
>=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().from(Moment|String|Number=
|Date|Array);
moment().from(Moment|String|Number|Date|Array, Boolean);</code></pre>

							</div>
					=09
						<p>You may want to display a moment in relation to a time other than =
now. In that case, you can use <code>moment#from</code>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2007</span>, <span class=3D"number">0=
</span>, <span class=3D"number">28</span>]);
<span class=3D"keyword">var</span> b =3D moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">29</span>=
]);
a.from(b) <span class=3D"comment">// "a day ago"</span></code></pre>
<p>The first parameter is anything you can pass to <code>moment()</code> or=
 an actual <code>Moment</code>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2007</span>, <span class=3D"number">0=
</span>, <span class=3D"number">28</span>]);
<span class=3D"keyword">var</span> b =3D moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">29</span>=
]);
a.from(b);                     <span class=3D"comment">// "a day ago"</span=
>
a.from([<span class=3D"number">2007</span>, <span class=3D"number">0</span>=
, <span class=3D"number">29</span>]);         <span class=3D"comment">// "a=
 day ago"</span>
a.from(<span class=3D"keyword">new</span> Date(<span class=3D"number">2007<=
/span>, <span class=3D"number">0</span>, <span class=3D"number">29</span>))=
; <span class=3D"comment">// "a day ago"</span>
a.from(<span class=3D"string">"2007-01-29"</span>);          <span class=3D=
"comment">// "a day ago"</span></code></pre>
<p>Like <code>moment#fromNow</code>, passing <code>true</code> as the secon=
d parameter returns value without the suffix. This is useful wherever you n=
eed to have a human readable length of time.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 start =3D moment([<span class=3D"number">2007</span>, <span class=3D"numbe=
r">0</span>, <span class=3D"number">5</span>]);
<span class=3D"keyword">var</span> end   =3D moment([<span class=3D"number"=
>2007</span>, <span class=3D"number">0</span>, <span class=3D"number">10</s=
pan>]);
end.from(start);       <span class=3D"comment">// "in 5 days"</span>
end.from(start, <span class=3D"literal">true</span>); <span class=3D"commen=
t">// "5 days"</span></code></pre>
<p>From version <strong>2.10.3</strong>, if any of the endpoints are invali=
d the result is the
localized Invalid date string.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/tonow/" name=3D"/dis=
playing/tonow/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/tonow/">=E6=97=B6=E5=
=B7=AE (=E4=B9=8B=E5=90=8E=EF=BC=8C=E7=8E=B0=E5=9C=A8=E4=B8=BA=E5=9F=BA=E5=
=87=86)</a>
						=09
								<span>2.10.3+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/04-tonow.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().toNow();
moment().toNow(Boolean);</code></pre>

							</div>
					=09
						<p>A common way of displaying time is handled by <code>moment#toNow</=
code>. This is sometimes called timeago or relative time.</p>
<p>This is similar to <a href=3D"http://momentjs.cn/docs/#/displaying/fromn=
ow/"><code>moment.fromNow</code></a>, but gives
the opposite interval: <code>a.fromNow() =3D - a.toNow()</code>.</p>
<p>This is similar to <a href=3D"http://momentjs.cn/docs/#/displaying/to/">=
<code>moment.to</code></a>, but is special-cased
for the current time. Use <code>moment.to</code>, if you want to control th=
e two end
points of the interval.</p>
<pre><code class=3D"language-javascript">moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">29</span>=
]).toNow(); <span class=3D"comment">// in 4 years</span></code></pre>
<p>If you pass <code>true</code>, you can get the value without the prefix.=
</p>
<pre><code class=3D"language-javascript">moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">29</span>=
]).toNow();     <span class=3D"comment">// in 4 years</span>
moment([<span class=3D"number">2007</span>, <span class=3D"number">0</span>=
, <span class=3D"number">29</span>]).toNow(<span class=3D"literal">true</sp=
an>); <span class=3D"comment">// 4 years</span></code></pre>
<p>The base strings are <a href=3D"http://momentjs.cn/docs/#/customization/=
relative-time/">customized by the current locale</a>.</p>
<p>The breakdown of which string is displayed for each length of time is ou=
tlined in the table below.</p>
<table class=3D"table table-striped table-bordered">
  <thead>
    <tr>
      <th>Range</th>
      <th>Key</th>
      <th>Sample Output</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0 to 45 seconds</td>
      <td>s</td>
      <td>in seconds</td>
    </tr>
    <tr>
      <td>45 to 90 seconds</td>
      <td>m</td>
      <td>in a minute</td>
    </tr>
    <tr>
      <td>90 seconds to 45 minutes</td>
      <td>mm</td>
      <td>in 2 minutes ... in 45 minutes</td>
    </tr>
    <tr>
      <td>45 to 90 minutes</td>
      <td>h</td>
      <td>in an hour</td>
    </tr>
    <tr>
      <td>90 minutes to 22 hours </td>
      <td>hh</td>
      <td>in 2 hours ... in 22 hours</td>
    </tr>
    <tr>
      <td>22 to 36 hours</td>
      <td>d</td>
      <td>in a day</td>
    </tr>
    <tr>
      <td>36 hours to 25 days</td>
      <td>dd</td>
      <td>in 2 days ... in 25 days</td>
    </tr>
    <tr>
      <td>25 to 45 days</td>
      <td>M</td>
      <td>in a month</td>
    </tr>
    <tr>
      <td>45 to 345 days</td>
      <td>MM</td>
      <td>in 2 months ... in 11 months</td>
    </tr>
    <tr>
      <td>345 to 547 days (1.5 years)</td>
      <td>y</td>
      <td>in a year</td>
    </tr>
    <tr>
      <td>548 days+</td>
      <td>yy</td>
      <td>in 2 years ... in 20 years</td>
    </tr>
  </tbody>
</table>

<p>From version <strong>2.10.3</strong>, if the target moment object is inv=
alid the result is
the localized Invalid date string.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/to/" name=3D"/displa=
ying/to/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/to/">=E6=97=B6=E5=B7=
=AE (=E4=B9=8B=E5=90=8E)</a>
						=09
								<span>2.10.3+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/05-to.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().to(Moment|String|Number|D=
ate|Array);
moment().to(Moment|String|Number|Date|Array, Boolean);</code></pre>

							</div>
					=09
						<p>You may want to display a moment in relation to a time other than =
now. In that case, you can use <code>moment#to</code>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2007</span>, <span class=3D"number">0=
</span>, <span class=3D"number">28</span>]);
<span class=3D"keyword">var</span> b =3D moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">29</span>=
]);
a.to(b) <span class=3D"comment">// "in a day"</span></code></pre>
<p>The first parameter is anything you can pass to <code>moment()</code> or=
 an actual <code>Moment</code>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2007</span>, <span class=3D"number">0=
</span>, <span class=3D"number">28</span>]);
<span class=3D"keyword">var</span> b =3D moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">29</span>=
]);
a.to(b);                     <span class=3D"comment">// "in a day"</span>
a.to([<span class=3D"number">2007</span>, <span class=3D"number">0</span>, =
<span class=3D"number">29</span>]);         <span class=3D"comment">// "in =
a day"</span>
a.to(<span class=3D"keyword">new</span> Date(<span class=3D"number">2007</s=
pan>, <span class=3D"number">0</span>, <span class=3D"number">29</span>)); =
<span class=3D"comment">// "in a day"</span>
a.to(<span class=3D"string">"2007-01-29"</span>);          <span class=3D"c=
omment">// "in a day"</span></code></pre>
<p>Like <code>moment#toNow</code>, passing <code>true</code> as the second =
parameter returns value without the suffix. This is useful wherever you nee=
d to have a human readable length of time.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 start =3D moment([<span class=3D"number">2007</span>, <span class=3D"numbe=
r">0</span>, <span class=3D"number">5</span>]);
<span class=3D"keyword">var</span> end   =3D moment([<span class=3D"number"=
>2007</span>, <span class=3D"number">0</span>, <span class=3D"number">10</s=
pan>]);
end.to(start);       <span class=3D"comment">// "5 days ago"</span>
end.to(start, <span class=3D"literal">true</span>); <span class=3D"comment"=
>// "5 days"</span></code></pre>
<p>From version <strong>2.10.3</strong>, if any of the endpoints are invali=
d the result is the
localized Invalid date string.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/calendar-time/" name=
=3D"/displaying/calendar-time/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/calendar-time/">=E6=
=97=A5=E5=8E=86=E6=97=B6=E9=97=B4</a>
						=09
								<span>1.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/06-calendar-time.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().calendar();
moment().calendar(referenceTime);
moment().calendar(referenceTime, formats);  <span class=3D"comment">// from=
 2.10.5</span></code></pre>

							</div>
					=09
						<p>Calendar time displays time relative to a given <code>referenceTim=
e</code> (defaults to now), but does so slightly differently than <code>mom=
ent#fromNow</code>.</p>
<p><code>moment#calendar</code> will format a date with different strings d=
epending on how close to <code>referenceTime</code>'s date (today by defaul=
t) the date is.</p>
<table class=3D"table table-striped table-bordered">
  <tbody><tr>
    <td>Last week</td>
    <td>Last Monday at 2:30 AM</td>
  </tr>
  <tr>
    <td>The day before</td>
    <td>Yesterday at 2:30 AM</td>
  </tr>
  <tr>
    <td>The same day</td>
    <td>Today at 2:30 AM</td>
  </tr>
  <tr>
    <td>The next day</td>
    <td>Tomorrow at 2:30 AM</td>
  </tr>
  <tr>
    <td>The next week</td>
    <td>Sunday at 2:30 AM</td>
  </tr>
  <tr>
    <td>Everything else</td>
    <td>7/10/2011</td>
  </tr>
</tbody></table>

<p>These strings are localized, and <a href=3D"http://momentjs.cn/docs/#/cu=
stomization/calendar/">can be customized</a>.</p>
<p>From <strong>2.10.5</strong> moment supports specifying calendar output =
formats per
invocation:</p>
<pre><code class=3D"language-javascript">moment().calendar(<span class=3D"l=
iteral">null</span>, {
    sameDay: <span class=3D"string">'[Today]'</span>,
    nextDay: <span class=3D"string">'[Tomorrow]'</span>,
    nextWeek: <span class=3D"string">'dddd'</span>,
    lastDay: <span class=3D"string">'[Yesterday]'</span>,
    lastWeek: <span class=3D"string">'[Last] dddd'</span>,
    sameElse: <span class=3D"string">'DD/MM/YYYY'</span>
});</code></pre>
<p><code>sameElse</code> is used as the format when the moment is more than=
 a week away from the <code>referenceTime</code></p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/difference/" name=3D=
"/displaying/difference/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/difference/">=E6=97=
=B6=E5=B7=AE (=E6=AF=AB=E7=A7=92)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/07-difference.md" target=3D"_=
blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().diff(Moment|String|Number=
|Date|Array);
moment().diff(Moment|String|Number|Date|Array, String);
moment().diff(Moment|String|Number|Date|Array, String, Boolean);</code></pr=
e>

							</div>
					=09
						<p>To get the difference in milliseconds, use <code>moment#diff</code=
> like you would use <code>moment#from</code>.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2007</span>, <span class=3D"number">0=
</span>, <span class=3D"number">29</span>]);
<span class=3D"keyword">var</span> b =3D moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">28</span>=
]);
a.diff(b) <span class=3D"comment">// 86400000</span></code></pre>
<p>To get the difference in another unit of measurement, pass that measurem=
ent as the second argument.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2007</span>, <span class=3D"number">0=
</span>, <span class=3D"number">29</span>]);
<span class=3D"keyword">var</span> b =3D moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>, <span class=3D"number">28</span>=
]);
a.diff(b, <span class=3D"string">'days'</span>) <span class=3D"comment">// =
1</span></code></pre>
<p>The supported measurements are years, months, weeks, days, hours, minute=
s, and seconds. For ease of development, the singular forms are supported a=
s of <strong>2.0.0</strong>. Units of measurement other than milliseconds a=
re available in version <strong>1.1.1</strong>.</p>
<p>By default, <code>moment#diff</code> will return number rounded down. If=
 you want the floating point number, pass <code>true</code> as the third ar=
gument. Before <strong>2.0.0</strong>, <code>moment#diff</code> returned ro=
unded number, not a rounded <em>down</em> number.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment([<span class=3D"number">2008</span>, <span class=3D"number">6=
</span>]);
<span class=3D"keyword">var</span> b =3D moment([<span class=3D"number">200=
7</span>, <span class=3D"number">0</span>]);
a.diff(b, <span class=3D"string">'years'</span>);       <span class=3D"comm=
ent">// 1</span>
a.diff(b, <span class=3D"string">'years'</span>, <span class=3D"literal">tr=
ue</span>); <span class=3D"comment">// 1.5</span></code></pre>
<p>If the moment is earlier than the moment you are passing to <code>moment=
.fn.diff</code>, the return value will be negative.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment();
<span class=3D"keyword">var</span> b =3D moment().add(<span class=3D"number=
">1</span>, <span class=3D"string">'seconds'</span>);
a.diff(b) <span class=3D"comment">// -1000</span>
b.diff(a) <span class=3D"comment">// 1000</span></code></pre>
<p>A easy way to think of this is by replacing <code>.diff(</code> with a m=
inus operator.</p>
<pre><code class=3D"language-javascript">          <span class=3D"comment">=
// a &lt; b</span>
a.diff(b) <span class=3D"comment">// a - b &lt; 0</span>
b.diff(a) <span class=3D"comment">// b - a &gt; 0</span></code></pre>
<h4 id=3D"month-and-year-diffs">Month and year diffs</h4>
<p><code>moment#diff</code> has some special handling for month and year di=
ffs. It is optimized to ensure that two months with the same date are alway=
s a whole number apart.</p>
<p>So Jan 15 to Feb 15 should be exactly 1 month.</p>
<p>Feb 28 to Mar 28 should be exactly 1 month.</p>
<p>Feb 28 2011 to Feb 28 2012 should be exactly 1 year.</p>
<p><a href=3D"https://github.com/moment/moment/pull/571">See more discussio=
n on the month and year diffs here</a></p>
<p>This change to month and year diffs was made in <strong>2.0.0</strong>.
As of version <strong>2.9.0</strong> diff also support quarter unit.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/unix-offset/" name=
=3D"/displaying/unix-offset/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/unix-offset/">Unix =
=E5=81=8F=E7=A7=BB=E9=87=8F (=E6=AF=AB=E7=A7=92)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/08-unix-offset.md" target=3D"=
_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().valueOf();
+moment();</code></pre>

							</div>
					=09
						<p><code>moment#valueOf</code> simply outputs the number of milliseco=
nds since the Unix Epoch, just like <code>Date#valueOf</code>.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"number">1318=
874398806</span>).valueOf(); <span class=3D"comment">// 1318874398806</span=
>
+moment(<span class=3D"number">1318874398806</span>); <span class=3D"commen=
t">// 1318874398806</span></code></pre>
<p>To get a Unix timestamp (the number of seconds since the epoch) from a <=
code>Moment</code>, use <code>moment#unix</code>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/unix-timestamp/" nam=
e=3D"/displaying/unix-timestamp/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/unix-timestamp/">Uni=
x =E6=97=B6=E9=97=B4=E6=88=B3 (=E7=A7=92)</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/09-unix-timestamp.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().unix();</code></pre>

							</div>
					=09
						<p><code>moment#unix</code> outputs a Unix timestamp (the number of s=
econds since the Unix Epoch).</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"number">1318=
874398806</span>).unix(); <span class=3D"comment">// 1318874398</span></cod=
e></pre>
<p>This value is floored to the nearest second, and does not include a mill=
iseconds component.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/days-in-month/" name=
=3D"/displaying/days-in-month/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/days-in-month/">=E5=
=A4=A9=E6=95=B0 (=E6=9C=88)</a>
						=09
								<span>1.5.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/10-days-in-month.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().daysInMonth();</code></pr=
e>

							</div>
					=09
						<p>Get the number of days in the current month.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"201=
2-02"</span>, <span class=3D"string">"YYYY-MM"</span>).daysInMonth() <span =
class=3D"comment">// 29</span>
moment(<span class=3D"string">"2012-01"</span>, <span class=3D"string">"YYY=
Y-MM"</span>).daysInMonth() <span class=3D"comment">// 31</span></code></pr=
e>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/as-javascript-date/"=
 name=3D"/displaying/as-javascript-date/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/as-javascript-date/"=
>Date =E5=AF=B9=E8=B1=A1</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/11-as-javascript-date.md" tar=
get=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().toDate();</code></pre>

							</div>
					=09
						<p>To get the native Date object that Moment.js wraps, use <code>mome=
nt#toDate</code>.</p>
<p>This will return the <code>Date</code> that the moment uses, so any chan=
ges to that <code>Date</code> will cause the moment to change. If you want =
a <code>Date</code> that is a copy, use <code>moment#clone</code> before yo=
u use <code>moment#toDate</code>.</p>
<p><code>moment#native</code> has been replaced by <code>moment#toDate</cod=
e> and has been deprecated as of <strong>1.6.0</strong>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/as-array/" name=3D"/=
displaying/as-array/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/as-array/">=E6=95=B0=
=E7=BB=84</a>
						=09
								<span>1.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/12-as-array.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().toArray();</code></pre>

							</div>
					=09
						<p>This returns an array that mirrors the parameters from <code>new D=
ate()</code>.</p>
<pre><code class=3D"language-javascript">moment().toArray(); <span class=3D=
"comment">// [2013, 1, 4, 14, 40, 16, 154];</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/as-json/" name=3D"/d=
isplaying/as-json/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/as-json/">JSON</a>
						=09
								<span>2.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/13-as-json.md" target=3D"_bla=
nk">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().toJSON();</code></pre>

							</div>
					=09
						<p>When serializing an object to JSON, if there is a <code>Moment</co=
de> object, it will be represented as an ISO8601 string, adjusted to UTC.</=
p>
<pre><code class=3D"language-javascript">JSON.stringify({
    postDate : moment()
}); <span class=3D"comment">// '{"postDate":"2013-02-04T22:44:30.652Z"}'</s=
pan></code></pre>
<p>If instead you would like an ISO8601 string that reflects the moment's <=
code>utcOffset()</code>, then you can modify the <code>toJSON</code> functi=
on like this:</p>
<pre><code class=3D"language-javascript">moment.fn.toJSON =3D <span class=
=3D"function"><span class=3D"keyword">function</span><span class=3D"params"=
>()</span> {</span> <span class=3D"keyword">return</span> <span class=3D"ke=
yword">this</span>.format(); }</code></pre>
<p>This changes the behavior as follows:</p>
<pre><code class=3D"language-javascript">JSON.stringify({
    postDate : moment()
}); <span class=3D"comment">// '{"postDate":"2013-02-04T14:44:30-08:00"}'</=
span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/as-iso-string/" name=
=3D"/displaying/as-iso-string/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/as-iso-string/">ISO =
8601 =E5=AD=97=E7=AC=A6=E4=B8=B2</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/14-as-iso-string.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().toISOString();</code></pr=
e>

							</div>
					=09
						<p>Formats a string to the ISO8601 standard.</p>
<pre><code class=3D"language-javascript">moment().toISOString() <span class=
=3D"comment">// 2013-02-04T22:44:30.652Z</span></code></pre>
<p>From version <strong>2.8.4</strong> the native <code>Date.prototype.toIS=
OString</code> is used if
available, for performance reasons.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/displaying/as-object/" name=3D"=
/displaying/as-object/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/displaying/as-object/">=E5=AF=
=B9=E8=B1=A1</a>
						=09
								<span>2.10.5+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/04-displaying/15-as-object.md" target=3D"_b=
lank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().toObject();</code></pre>

							</div>
					=09
						<p>This returns an object containing year, month, day-of-month, hour,=
 minute,
seconds, milliseconds.</p>
<pre><code class=3D"language-javascript">moment().toObject()  <span class=
=3D"comment">// {</span>
                     <span class=3D"comment">//     years: 2015</span>
                     <span class=3D"comment">//     months: 6</span>
                     <span class=3D"comment">//     date: 26,</span>
                     <span class=3D"comment">//     hours: 1,</span>
                     <span class=3D"comment">//     minutes: 53,</span>
                     <span class=3D"comment">//     seconds: 14,</span>
                     <span class=3D"comment">//     milliseconds: 600</span=
>
                     <span class=3D"comment">// }</span></code></pre>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/query/" name=3D"/query/"></a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/q=
uery/">=E6=9F=A5=E8=AF=A2</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/intro/" name=3D"/query/in=
tro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
					=09
					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/is-before/" name=3D"/quer=
y/is-before/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/query/is-before/">=E6=98=AF=E5=
=90=A6=E4=B9=8B=E5=89=8D</a>
						=09
								<span>2.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/05-query/01-is-before.md" target=3D"_blank"=
>=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isBefore(Moment|String|Nu=
mber|Date|Array);
moment().isBefore(Moment|String|Number|Date|Array, String);</code></pre>

							</div>
					=09
						<p>Check if a moment is before another moment.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
0-10-20'</span>).isBefore(<span class=3D"string">'2010-10-21'</span>); <spa=
n class=3D"comment">// true</span></code></pre>
<p>If you want to limit the granularity to a unit other than milliseconds, =
pass the units as the second parameter.</p>
<p>As the second parameter determines the precision, and not just a single =
value to check, using day will check for year, month and day.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
0-10-20'</span>).isBefore(<span class=3D"string">'2010-12-31'</span>, <span=
 class=3D"string">'year'</span>); <span class=3D"comment">// false</span>
moment(<span class=3D"string">'2010-10-20'</span>).isBefore(<span class=3D"=
string">'2011-01-01'</span>, <span class=3D"string">'year'</span>); <span c=
lass=3D"comment">// true</span></code></pre>
<p>Like <code>moment#isAfter</code> and <code>moment#isSame</code>, any of =
the units of time that are supported for <code>moment#startOf</code> are su=
pported for <code>moment#isBefore</code>.</p>
<pre><code>year month week day hour minute second</code></pre>
<p>If nothing is passed to <code>moment#isBefore</code>, it will default to=
 the current time.</p>
<p><em>NOTE</em>: <code>moment().isBefore()</code> has undefined behavior a=
nd should not be used! If
the code runs fast the initial created moment would be the same as the one
created in isBefore to perform the check, so the result would be <code>fals=
e</code>. But
if the code runs slower it's possible that the moment created in isBefore i=
s
measurably after the one created in <code>moment()</code>, so the call woul=
d return
<code>true</code>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/is-same/" name=3D"/query/=
is-same/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/query/is-same/">=E6=98=AF=E5=90=
=A6=E7=9B=B8=E5=90=8C</a>
						=09
								<span>2.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/05-query/02-is-same.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isSame(Moment|String|Numb=
er|Date|Array);
moment().isSame(Moment|String|Number|Date|Array, String);</code></pre>

							</div>
					=09
						<p>Check if a moment is the same as another moment.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
0-10-20'</span>).isSame(<span class=3D"string">'2010-10-20'</span>); <span =
class=3D"comment">// true</span></code></pre>
<p>If you want to limit the granularity to a unit other than milliseconds, =
pass it as the second parameter.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
0-10-20'</span>).isSame(<span class=3D"string">'2009-12-31'</span>, <span c=
lass=3D"string">'year'</span>);  <span class=3D"comment">// false</span>
moment(<span class=3D"string">'2010-10-20'</span>).isSame(<span class=3D"st=
ring">'2010-01-01'</span>, <span class=3D"string">'year'</span>);  <span cl=
ass=3D"comment">// true</span>
moment(<span class=3D"string">'2010-10-20'</span>).isSame(<span class=3D"st=
ring">'2010-12-31'</span>, <span class=3D"string">'year'</span>);  <span cl=
ass=3D"comment">// true</span>
moment(<span class=3D"string">'2010-10-20'</span>).isSame(<span class=3D"st=
ring">'2011-01-01'</span>, <span class=3D"string">'year'</span>);  <span cl=
ass=3D"comment">// false</span></code></pre>
<p>When including a second parameter, it will match all units equal or larg=
er. Passing in <code>month</code> will check <code>month</code> and <code>y=
ear</code>. Passing in <code>day</code> will check <code>day</code>, <code>=
month</code>, and <code>year</code>.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
0-01-01'</span>).isSame(<span class=3D"string">'2011-01-01'</span>, <span c=
lass=3D"string">'month'</span>); <span class=3D"comment">// false, differen=
t year</span>
moment(<span class=3D"string">'2010-01-01'</span>).isSame(<span class=3D"st=
ring">'2010-02-01'</span>, <span class=3D"string">'day'</span>);   <span cl=
ass=3D"comment">// false, different month</span></code></pre>
<p>Like <code>moment#isAfter</code> and <code>moment#isBefore</code>, any o=
f the units of time that are supported for <code>moment#startOf</code> are =
supported for <code>moment#isSame</code>.</p>
<pre><code>year month week day hour minute second</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/is-after/" name=3D"/query=
/is-after/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/query/is-after/">=E6=98=AF=E5=
=90=A6=E4=B9=8B=E5=90=8E</a>
						=09
								<span>2.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/05-query/03-is-after.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isAfter(Moment|String|Num=
ber|Date|Array);
moment().isAfter(Moment|String|Number|Date|Array, String);</code></pre>

							</div>
					=09
						<p>Check if a moment is after another moment.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
0-10-20'</span>).isAfter(<span class=3D"string">'2010-10-19'</span>); <span=
 class=3D"comment">// true</span></code></pre>
<p>If you want to limit the granularity to a unit other than milliseconds, =
pass the units as the second parameter.</p>
<p>As the second parameter determines the precision, and not just a single =
value to check, using day will check for year, month and day.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
0-10-20'</span>).isAfter(<span class=3D"string">'2010-01-01'</span>, <span =
class=3D"string">'year'</span>); <span class=3D"comment">// false</span>
moment(<span class=3D"string">'2010-10-20'</span>).isAfter(<span class=3D"s=
tring">'2009-12-31'</span>, <span class=3D"string">'year'</span>); <span cl=
ass=3D"comment">// true</span></code></pre>
<p>Like <code>moment#isSame</code> and <code>moment#isBefore</code>, any of=
 the units of time that are supported for <code>moment#startOf</code> are s=
upported for <code>moment#isAfter</code>.</p>
<pre><code>year month week day hour minute second</code></pre>
<p>If nothing is passed to <code>moment#isAfter</code>, it will default to =
the current time.</p>
<pre><code class=3D"language-javascript">moment().isAfter(); <span class=3D=
"comment">// false</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/is-between/" name=3D"/que=
ry/is-between/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/query/is-between/">=E6=98=AF=E5=
=90=A6=E4=B9=8B=E9=97=B4</a>
						=09
								<span>2.9.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/05-query/04-is-between.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isBetween(moment-like, mo=
ment-like);
moment().isBetween(moment-like, moment-like, String);
<span class=3D"comment">// where moment-like is Moment|String|Number|Date|A=
rray</span></code></pre>

							</div>
					=09
						<p>Check if a moment is between two other moments, optionally looking=
 at unit
scale (minutes, hours, days, etc).  The match is exclusive.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
0-10-20'</span>).isBetween(<span class=3D"string">'2010-10-19'</span>, <spa=
n class=3D"string">'2010-10-25'</span>); <span class=3D"comment">// true</s=
pan></code></pre>
<p>If you want to limit the granularity to a unit other than milliseconds, =
pass the units as the second parameter.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
0-10-20'</span>).isBetween(<span class=3D"string">'2010-01-01'</span>, <spa=
n class=3D"string">'2012-01-01'</span>, <span class=3D"string">'year'</span=
>); <span class=3D"comment">// false</span>
moment(<span class=3D"string">'2010-10-20'</span>).isBetween(<span class=3D=
"string">'2009-12-31'</span>, <span class=3D"string">'2012-01-01'</span>, <=
span class=3D"string">'year'</span>); <span class=3D"comment">// true</span=
></code></pre>
<p>Like <code>moment#isSame</code>, <code>moment#isBefore</code>, <code>mom=
ent#isAfter</code> any of the units of
time that are supported for <code>moment#startOf</code> are supported for
<code>moment#isBetween</code>. Year, month, week, day, hour, minute, and se=
cond.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/is-leap-year/" name=3D"/q=
uery/is-leap-year/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/query/is-leap-year/">=E6=98=AF=
=E5=90=A6=E9=97=B0=E5=B9=B4</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/05-query/05-is-leap-year.md" target=3D"_bla=
nk">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isLeapYear();</code></pre=
>

							</div>
					=09
						<p><code>moment#isLeapYear</code> returns <code>true</code> if that y=
ear is a leap year, and <code>false</code> if it is not.</p>
<pre><code class=3D"language-javascript">moment([<span class=3D"number">200=
0</span>]).isLeapYear() <span class=3D"comment">// true</span>
moment([<span class=3D"number">2001</span>]).isLeapYear() <span class=3D"co=
mment">// false</span>
moment([<span class=3D"number">2100</span>]).isLeapYear() <span class=3D"co=
mment">// false</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/is-daylight-saving-time/"=
 name=3D"/query/is-daylight-saving-time/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/query/is-daylight-saving-time/"=
>=E6=98=AF=E5=90=A6=E5=A4=8F=E4=BB=A4=E6=97=B6</a>
						=09
								<span>1.2.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/05-query/06-is-daylight-saving-time.md" tar=
get=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment().isDST();</code></pre>

							</div>
					=09
						<p><code>moment#isDST</code> checks if the current moment is in dayli=
ght saving time.</p>
<pre><code class=3D"language-javascript">moment([<span class=3D"number">201=
1</span>, <span class=3D"number">2</span>, <span class=3D"number">12</span>=
]).isDST(); <span class=3D"comment">// false, March 12 2011 is not DST</spa=
n>
moment([<span class=3D"number">2011</span>, <span class=3D"number">2</span>=
, <span class=3D"number">14</span>]).isDST(); <span class=3D"comment">// tr=
ue, March 14 2011 is DST</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/is-dst-shifted/" name=3D"=
/query/is-dst-shifted/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/query/is-dst-shifted/">=E6=98=
=AF=E5=90=A6=E8=A2=AB=E5=A4=8F=E4=BB=A4=E6=97=B6=E8=BD=AC=E6=8D=A2</a>
						=09
								<span>2.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/05-query/07-is-dst-shifted.md" target=3D"_b=
lank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment(<span class=3D"string">'201=
3-03-10 2:30'</span>, <span class=3D"string">'YYYY-MM-DD HH:mm'</span>).isD=
STShifted()</code></pre>

							</div>
					=09
						<p>Another important piece of validation is to know if the date has b=
een moved by a DST. For example, in most of the United States:</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">'201=
3-03-10 2:30'</span>, <span class=3D"string">'YYYY-MM-DD HH:mm'</span>).for=
mat(); <span class=3D"comment">//=3D&gt; '2013-03-10T01:30:00-05:00'</span>=
</code></pre>
<p>This is because daylight saving time shifts the time from 2:00 to 3:00, =
so 2:30 isn't a real time. The resulting time is browser-dependent, either =
adjusting the time forward or backwards. Use <code>moment#isDSTShifted</cod=
e> to test for this condition.</p>
<p><strong>Note:</strong> before 2.3.0, Moment objects in this condition al=
ways returned <code>false</code> for <code>moment#isValid</code>; they now =
return <code>true</code>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/is-a-moment/" name=3D"/qu=
ery/is-a-moment/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/query/is-a-moment/">=E6=98=AF=
=E5=90=A6 Moment =E5=AF=B9=E8=B1=A1</a>
						=09
								<span>1.5.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/05-query/08-is-a-moment.md" target=3D"_blan=
k">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.isMoment(obj);</code></pre>

							</div>
					=09
						<p>To check if a variable is a moment object, use <code>moment.isMome=
nt()</code>.</p>
<pre><code class=3D"language-javascript">moment.isMoment() <span class=3D"c=
omment">// false</span>
moment.isMoment(<span class=3D"keyword">new</span> Date()) <span class=3D"c=
omment">// false</span>
moment.isMoment(moment()) <span class=3D"comment">// true</span></code></pr=
e>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/query/is-a-date/" name=3D"/quer=
y/is-a-date/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/query/is-a-date/">=E6=98=AF=E5=
=90=A6 Date =E5=AF=B9=E8=B1=A1</a>
						=09
								<span>2.9.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/05-query/09-is-a-date.md" target=3D"_blank"=
>=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.isDate(obj);</code></pre>

							</div>
					=09
						<p>To check if a variable is a native js Date object, use <code>momen=
t.isDate()</code>.</p>
<pre><code class=3D"language-javascript">moment.isDate(); <span class=3D"co=
mment">// false</span>
moment.isDate(<span class=3D"keyword">new</span> Date()); <span class=3D"co=
mment">// true</span>
moment.isDate(moment()); <span class=3D"comment">// false</span></code></pr=
e>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/i18n/" name=3D"/i18n/"></a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/i=
18n/">=E5=9B=BD=E9=99=85=E5=8C=96</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/i18n/intro/" name=3D"/i18n/intr=
o/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Moment.js has robust support for internationalization.</p>
<p>You can load multiple locales and easily switch between them.</p>
<p>In addition to assigning a global locale, you can assign a locale to a s=
pecific
moment.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/i18n/changing-locale/" name=3D"=
/i18n/changing-locale/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/i18n/changing-locale/">=E8=AE=
=BE=E7=BD=AE=E8=AF=AD=E8=A8=80 (=E5=85=A8=E5=B1=80)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/06-i18n/01-changing-locale.md" target=3D"_b=
lank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(String);
moment.locale(String[]);
moment.locale(String, Object);

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(String);
moment.lang(String[]);
moment.lang(String, Object);</code></pre>

							</div>
					=09
						<p>By default, Moment.js comes with English locale strings. If you ne=
ed other locales, you can load them into Moment.js for later use.</p>
<p>To load a locale, pass the key and the string values to <code>moment.loc=
ale</code>.</p>
<p>More details on each of the parts of the locale bundle can be found in t=
he <a href=3D"http://momentjs.cn/docs/#/customization/">customization</a> s=
ection.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'fr'</span>, {
    months : <span class=3D"string">"janvier_f=C3=A9vrier_mars_avril_mai_ju=
in_juillet_ao=C3=BBt_septembre_octobre_novembre_d=C3=A9cembre"</span>.split=
(<span class=3D"string">"_"</span>),
    monthsShort : <span class=3D"string">"janv._f=C3=A9vr._mars_avr._mai_ju=
in_juil._ao=C3=BBt_sept._oct._nov._d=C3=A9c."</span>.split(<span class=3D"s=
tring">"_"</span>),
    weekdays : <span class=3D"string">"dimanche_lundi_mardi_mercredi_jeudi_=
vendredi_samedi"</span>.split(<span class=3D"string">"_"</span>),
    weekdaysShort : <span class=3D"string">"dim._lun._mar._mer._jeu._ven._s=
am."</span>.split(<span class=3D"string">"_"</span>),
    weekdaysMin : <span class=3D"string">"Di_Lu_Ma_Me_Je_Ve_Sa"</span>.spli=
t(<span class=3D"string">"_"</span>),
    longDateFormat : {
        LT : <span class=3D"string">"HH:mm"</span>,
        LTS : <span class=3D"string">"HH:mm:ss"</span>,
        L : <span class=3D"string">"DD/MM/YYYY"</span>,
        LL : <span class=3D"string">"D MMMM YYYY"</span>,
        LLL : <span class=3D"string">"D MMMM YYYY LT"</span>,
        LLLL : <span class=3D"string">"dddd D MMMM YYYY LT"</span>
    },
    calendar : {
        sameDay: <span class=3D"string">"[Aujourd'hui =C3=A0] LT"</span>,
        nextDay: <span class=3D"string">'[Demain =C3=A0] LT'</span>,
        nextWeek: <span class=3D"string">'dddd [=C3=A0] LT'</span>,
        lastDay: <span class=3D"string">'[Hier =C3=A0] LT'</span>,
        lastWeek: <span class=3D"string">'dddd [dernier =C3=A0] LT'</span>,
        sameElse: <span class=3D"string">'L'</span>
    },
    relativeTime : {
        future : <span class=3D"string">"dans %s"</span>,
        past : <span class=3D"string">"il y a %s"</span>,
        s : <span class=3D"string">"quelques secondes"</span>,
        m : <span class=3D"string">"une minute"</span>,
        mm : <span class=3D"string">"%d minutes"</span>,
        h : <span class=3D"string">"une heure"</span>,
        hh : <span class=3D"string">"%d heures"</span>,
        d : <span class=3D"string">"un jour"</span>,
        dd : <span class=3D"string">"%d jours"</span>,
        M : <span class=3D"string">"un mois"</span>,
        MM : <span class=3D"string">"%d mois"</span>,
        y : <span class=3D"string">"une ann=C3=A9e"</span>,
        yy : <span class=3D"string">"%d ann=C3=A9es"</span>
    },
    ordinalParse : <span class=3D"regexp">/\d{1,2}(er|=C3=A8me)/</span>,
    ordinal : <span class=3D"function"><span class=3D"keyword">function</sp=
an> <span class=3D"params">(number)</span> {</span>
        <span class=3D"keyword">return</span> number + (number =3D=3D=3D <s=
pan class=3D"number">1</span> ? <span class=3D"string">'er'</span> : <span =
class=3D"string">'=C3=A8me'</span>);
    },
    meridiemParse: <span class=3D"regexp">/PD|MD/</span>,
    isPM: <span class=3D"function"><span class=3D"keyword">function</span> =
<span class=3D"params">(input)</span> {</span>
        <span class=3D"keyword">return</span> input.charAt(<span class=3D"n=
umber">0</span>) =3D=3D=3D <span class=3D"string">'M'</span>;
    },
    <span class=3D"comment">// in case the meridiem units are not separated=
 around 12, then implement</span>
    <span class=3D"comment">// this function (look at locale/id.js for an e=
xample)</span>
    <span class=3D"comment">// meridiemHour : function (hour, meridiem) {</=
span>
    <span class=3D"comment">//     return /* 0-23 hour, given meridiem toke=
n and hour 1-12 */</span>
    <span class=3D"comment">// },</span>
    meridiem : <span class=3D"function"><span class=3D"keyword">function</s=
pan> <span class=3D"params">(hours, minutes, isLower)</span> {</span>
        <span class=3D"keyword">return</span> hours &lt; <span class=3D"num=
ber">12</span> ? <span class=3D"string">'PD'</span> : <span class=3D"string=
">'MD'</span>;
    },
    week : {
        dow : <span class=3D"number">1</span>, <span class=3D"comment">// M=
onday is the first day of the week.</span>
        doy : <span class=3D"number">4</span>  <span class=3D"comment">// T=
he week that contains Jan 4th is the first week of the year.</span>
    }
});</code></pre>
<p>Once you load a locale, it becomes the active locale. To change active l=
ocales, simply call <code>moment.locale</code> with the key of a loaded loc=
ale.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'fr'</span>);
moment(<span class=3D"number">1316116057189</span>).fromNow() <span class=
=3D"comment">// il y a une heure</span>
moment.locale(<span class=3D"string">'en'</span>);
moment(<span class=3D"number">1316116057189</span>).fromNow() <span class=
=3D"comment">// an hour ago</span></code></pre>
<p>As of <strong>2.8.0</strong>, changing the global locale doesn't affect =
existing instances.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'fr'</span>);
<span class=3D"keyword">var</span> m =3D moment(<span class=3D"number">1316=
116057189</span>);
m.fromNow(); <span class=3D"comment">// il y a une heure</span>

moment.locale(<span class=3D"string">'en'</span>);
m.fromNow(); <span class=3D"comment">// il y a une heure</span>
moment(<span class=3D"number">1316116057189</span>).fromNow(); <span class=
=3D"comment">// an hour ago</span></code></pre>
<p><code>moment.locale</code> returns the locale used. This is useful becau=
se Moment won't change locales if it doesn't know the one you specify.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'fr'</span>); <span class=3D"comment">// 'fr'</span>
moment.locale(<span class=3D"string">'tq'</span>); <span class=3D"comment">=
// 'fr'</span></code></pre>
<p>You may also specify a list of locales, and Moment will use the first on=
e it has localizations for.</p>
<pre><code class=3D"language-javascript">moment.locale([<span class=3D"stri=
ng">'tq'</span>, <span class=3D"string">'fr'</span>]); <span class=3D"comme=
nt">// 'fr'</span></code></pre>
<p>Moment will also try locale specifier substrings from most-specific to l=
east-specific until it finds a locale it knows. This is useful when supplyi=
ng Moment with a locale string pulled from the user's environment, such as =
<code>window.navigator.language</code>.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en-NZ'</span>); <span class=3D"comment">// 'en'</span></code></pre>
<p>Finally, Moment will search intelligently through an array of locales an=
d their substrings.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en-NZ'</span>, <span class=3D"string">'en-AU'</span>); <span class=3D"c=
omment">// 'en-au', not 'en'</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/i18n/instance-locale/" name=3D"=
/i18n/instance-locale/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/i18n/instance-locale/">=E8=AE=
=BE=E7=BD=AE=E8=AF=AD=E8=A8=80 (=E5=B1=80=E9=83=A8)</a>
						=09
								<span>1.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/06-i18n/02-instance-locale.md" target=3D"_b=
lank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From ve=
rsion 2.8.1 onward</span>
moment().locale(String);

<span class=3D"comment">// Deprecated version 2.8.1</span>
moment().lang(String);</code></pre>

							</div>
					=09
						<p>A global locale configuration can be problematic when passing arou=
nd moments that may need to be formatted into different locale.</p>
<p>In <strong>1.7.0</strong> we added instance specific locale configuratio=
ns.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>); <span class=3D"comment">// default the locale to English</=
span>
<span class=3D"keyword">var</span> localLocale =3D moment();

localLocale.locale(<span class=3D"string">'fr'</span>); <span class=3D"comm=
ent">// set this instance to use French</span>
localLocale.format(<span class=3D"string">'LLLL'</span>); <span class=3D"co=
mment">// dimanche 15 juillet 2012 11:01</span>
moment().format(<span class=3D"string">'LLLL'</span>); <span class=3D"comme=
nt">// Sunday, July 15 2012 11:01 AM</span>

moment.locale(<span class=3D"string">'es'</span>); <span class=3D"comment">=
// change the global locale to Spanish</span>
localLocale.format(<span class=3D"string">'LLLL'</span>); <span class=3D"co=
mment">// dimanche 15 juillet 2012 11:01</span>
moment().format(<span class=3D"string">'LLLL'</span>); <span class=3D"comme=
nt">// Domingo 15 Julio 2012 11:01</span>

localLocale.locale(<span class=3D"literal">false</span>); <span class=3D"co=
mment">// reset the instance locale</span>
localLocale.format(<span class=3D"string">'LLLL'</span>); <span class=3D"co=
mment">// Domingo 15 Julio 2012 11:01</span>
moment().format(<span class=3D"string">'LLLL'</span>); <span class=3D"comme=
nt">// Domingo 15 Julio 2012 11:01</span></code></pre>
<p>If you call <code>moment#locale</code> with no parameters, you get back =
the locale configuration that would be used for that moment.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 fr =3D moment().locale(<span class=3D"string">'fr'</span>);
fr.localeData().months(moment([<span class=3D"number">2012</span>, <span cl=
ass=3D"number">0</span>])) <span class=3D"comment">// "janvier"</span>
fr.locale(<span class=3D"string">'en'</span>);
fr.localeData().months(moment([<span class=3D"number">2012</span>, <span cl=
ass=3D"number">0</span>])) <span class=3D"comment">// "January"</span></cod=
e></pre>
<p>If you need to access the locale data for a moment, this is the preferre=
d way to do so.</p>
<p>As of <strong>2.3.0</strong>, you can also specify an array of locale id=
entifiers. It works the same was it does in the <a href=3D"http://momentjs.=
cn/docs/#/i18n/changing-locale/">global locale configuration</a>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/i18n/loading-into-nodejs/" name=
=3D"/i18n/loading-into-nodejs/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/i18n/loading-into-nodejs/">=E5=
=8A=A0=E8=BD=BD=E8=AF=AD=E8=A8=80 (NodeJS)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/06-i18n/03-loading-into-nodejs.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.locale(String);</code></pre=
>

							</div>
					=09
						<p>Loading locales in NodeJS is super easy. If there is a locale file=
 in <code>moment-root/locale/</code> named after that key, the first call t=
o <code>moment.locale</code> will load it.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 moment =3D require(<span class=3D"string">'moment'</span>);
moment.locale(<span class=3D"string">'fr'</span>);
moment(<span class=3D"number">1316116057189</span>).fromNow(); <span class=
=3D"comment">// il y a une heure</span></code></pre>
<p>If you want your locale supported, create a pull request to the <code>de=
velop</code> branch with the <a href=3D"http://momentjs.cn/docs/#/i18n/addi=
ng-locale/">required locale and unit test files</a>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/i18n/loading-into-browser/" nam=
e=3D"/i18n/loading-into-browser/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/i18n/loading-into-browser/">=E5=
=8A=A0=E8=BD=BD=E8=AF=AD=E8=A8=80 (=E6=B5=8F=E8=A7=88=E5=99=A8)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/06-i18n/04-loading-into-browser.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(String, Object);

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(String, Object);</code></pre>

							</div>
					=09
						<p>Loading locales in the browser just requires you to include the lo=
cale files.</p>
<pre><code class=3D"language-html">&lt;script src=3D"moment.js"&gt;&lt;/scr=
ipt&gt;
&lt;script src=3D"locale/fr.js"&gt;&lt;/script&gt;
&lt;script src=3D"locale/pt.js"&gt;&lt;/script&gt;
&lt;script&gt;
  moment.locale('fr');  // Set the default/global locale
  // ...
&lt;/script&gt;</code></pre>
<p>There are minified versions of all locales together:</p>
<pre><code class=3D"language-html">&lt;script src=3D"moment.js"&gt;&lt;/scr=
ipt&gt;
&lt;script src=3D"min/locales.js"&gt;&lt;/script&gt;</code></pre>
<p>To minimize http requests, use our Grunt task to compile <a href=3D"http=
s://github.com/moment/moment/">Moment</a> with a custom list of locales:</p=
>
<pre><code class=3D"language-bash">grunt transpile:fr,it</code></pre>
<pre><code class=3D"language-html">&lt;script src=3D"min/moment-with-locale=
s.custom.js"&gt;&lt;/script&gt;</code></pre>
<p><strong>Note:</strong> Locale files are defined in <a href=3D"https://gi=
thub.com/umdjs/umd">UMD</a> style, so they should work seamlessly in all en=
vironments.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/i18n/adding-locale/" name=3D"/i=
18n/adding-locale/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/i18n/adding-locale/">=E6=96=B0=
=E5=A2=9E=E8=AF=AD=E8=A8=80</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/06-i18n/05-adding-locale.md" target=3D"_bla=
nk">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>To add your locale to Moment.js, submit a pull request with both a=
 locale file and a test file. You can find examples in <code>moment/locale/=
fr.js</code> and <code>moment/test/locale/fr.js</code>.</p>
<p>To run the tests in Node.js, do <code>npm install</code>, then <code>gru=
nt</code>.</p>
<p>If all the tests pass, submit a pull request, and thank you for contribu=
ting!</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/i18n/getting-locale/" name=3D"/=
i18n/getting-locale/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/i18n/getting-locale/">=E8=8E=B7=
=E5=8F=96=E5=BD=93=E5=89=8D=E8=AF=AD=E8=A8=80</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/06-i18n/06-getting-locale.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From ve=
rsion 2.8.1 onward</span>
moment.locale();

<span class=3D"comment">// Deprecated in version 2.8.1</span>
moment.lang();</code></pre>

							</div>
					=09
						<p>If you are changing locales frequently, you may want to know what =
locale is currently being used. This is as simple as calling <code>moment.l=
ocale</code> without any parameters.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>); <span class=3D"comment">// set to english</span>
moment.locale(); <span class=3D"comment">// returns 'en'</span>
moment.locale(<span class=3D"string">'fr'</span>); <span class=3D"comment">=
// set to french</span>
moment.locale(); <span class=3D"comment">// returns 'fr'</span></code></pre=
>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/i18n/listing-months-weekdays/" =
name=3D"/i18n/listing-months-weekdays/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/i18n/listing-months-weekdays/">=
=E5=88=97=E5=87=BA=E6=9C=88=E4=BB=BD=E5=92=8C=E6=98=9F=E6=9C=9F</a>
						=09
								<span>2.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/06-i18n/07-listing-months-weekdays.md" targ=
et=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.months()
moment.monthsShort()
moment.weekdays()
moment.weekdaysShort()
moment.weekdaysMin()</code></pre>

							</div>
					=09
						<p>It is sometimes useful to get the list of months or weekdays in a =
locale, for example when populating a dropdown menu.</p>
<pre><code class=3D"language-javascript">moment.months();</code></pre>
<p>Returns the list of months in the current locale.</p>
<pre><code class=3D"language-javascript">[ <span class=3D"string">'January'=
</span>,
  <span class=3D"string">'February'</span>,
  <span class=3D"string">'March'</span>,
  <span class=3D"string">'April'</span>,
  <span class=3D"string">'May'</span>,
  <span class=3D"string">'June'</span>,
  <span class=3D"string">'July'</span>,
  <span class=3D"string">'August'</span>,
  <span class=3D"string">'September'</span>,
  <span class=3D"string">'October'</span>,
  <span class=3D"string">'November'</span>,
  <span class=3D"string">'December'</span> ]</code></pre>
<p>Similarly, <code>moment.monthsShort</code> returns abbreviated month nam=
es, and <code>moment.weekdays</code>, <code>moment.weekdaysShort</code>, <c=
ode>moment.weekdaysMin</code> return lists of weekdays.</p>
<p>You can pass an integer into each of those functions to get a specific m=
onth or weekday.</p>
<pre><code class=3D"language-javascript">moment.weekdays(<span class=3D"num=
ber">3</span>); <span class=3D"comment">// 'Wednesday'</span></code></pre>
<p><strong>Note:</strong> Currently, weekdays always have Sunday as index 0=
, regardless of the local first day of the week.</p>
<p>Some locales make special considerations into account when formatting mo=
nth names. For example, Dutch formats month abbreviations without a trailin=
g period, but only if it's formatting the month between dashes. The <code>m=
onths</code> method supports passing a format in so that the months will be=
 listed in the proper context.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'nl'</span>);
moment.monthsShort(); <span class=3D"comment">// ['jan.', 'feb.', 'mrt.', .=
..]</span>
moment.monthsShort(<span class=3D"string">'-MMM-'</span>); <span class=3D"c=
omment">// [ 'jan', 'feb', 'mrt', ...]</span></code></pre>
<p>And finally, you can combine both the format option and the integer opti=
on.</p>
<pre><code class=3D"language-javascript">moment.monthsShort(<span class=3D"=
string">'-MMM-'</span>, <span class=3D"number">3</span>); <span class=3D"co=
mment">// 'apr'</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/i18n/locale-data/" name=3D"/i18=
n/locale-data/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/i18n/locale-data/">=E8=8E=B7=E5=
=8F=96=E8=AF=AD=E8=A8=80=E6=95=B0=E6=8D=AE</a>
						=09
								<span>2.8.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/06-i18n/08-locale-data.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">localeData =3D moment.localeData()
localeData.months()
localeData.monthsShort()
localeData.monthsParse()
localeData.weekdays()
localeData.weekdaysShort()
localeData.weekdaysMin()
localeData.weekdaysParse()
localeData.longDateFormat()
localeData.isPM()
localeData.meridiem()
localeData.calendar()
localeData.relativeTime()
localeData.pastFuture()
localeData.ordinal()
localeData.preparse()
localeData.postformat()
localeData.weeks()
localeData.invalidDate()
localeData.firstDayOfWeek()
localeData.firstDayOfYear()</code></pre>

							</div>
					=09
						<p>You can access the properties of the currently loaded locale throu=
gh the
<code>moment.localeData(key)</code> function. It returns the current locale=
 or a locale
with the given key:</p>
<pre><code class=3D"language-javascript"><span class=3D"comment">// get cur=
rent locale</span>
<span class=3D"keyword">var</span> currentLocaleData =3D moment.localeData(=
);
<span class=3D"keyword">var</span> frLocaleData =3D moment.localeData(<span=
 class=3D"string">'fr'</span>);</code></pre>
<p>The returned object has the following methods:</p>
<pre><code class=3D"language-javascript">localeData.months(aMoment);  <span=
 class=3D"comment">// full month name of aMoment</span>
localeData.monthsShort(aMoment);  <span class=3D"comment">// short month na=
me of aMoment</span>
localeData.monthsParse(longOrShortMonthString);  <span class=3D"comment">//=
 returns month id (0 to 11) of input</span>
localeData.weekdays(aMoment);  <span class=3D"comment">// full weekday name=
 of aMoment</span>
localeData.weekdaysShort(aMoment);  <span class=3D"comment">// short weekda=
y name of aMoment</span>
localeData.weekdaysMin(aMoment);  <span class=3D"comment">// min weekday na=
me of aMoment</span>
localeData.weekdaysParse(minShortOrLongWeekdayString);  <span class=3D"comm=
ent">// returns weekday id (0 to 6) of input</span>
localeData.longDateFormat(dateFormat);  <span class=3D"comment">// returns =
the full format of abbreviated date-time formats LT, L, LL and so on</span>
localeData.isPM(amPmString);  <span class=3D"comment">// returns true iff a=
mPmString represents PM</span>
localeData.meridiem(hours, minutes, isLower);  <span class=3D"comment">// r=
eturns am/pm string for particular time-of-day in upper/lower case</span>
localeData.calendar(key, aMoment);  <span class=3D"comment">// returns a fo=
rmat that would be used for calendar representation. Key is one of 'sameDay=
', 'nextDay', 'lastDay', 'nextWeek', 'prevWeek', 'sameElse'</span>
localeData.relativeTime(number, withoutSuffix, key, isFuture);  <span class=
=3D"comment">// returns relative time string, key is on of 's', 'm', 'mm', =
'h', 'hh', 'd', 'dd', 'M', 'MM', 'y', 'yy'. Single letter when number is 1.=
</span>
localeData.pastFuture(diff, relTime);  <span class=3D"comment">// convert r=
elTime string to past or future string depending on diff</span>
localeData.ordinal(number);  <span class=3D"comment">// convert number to o=
rdinal string 1 -&gt; 1st</span>
localeData.preparse(str);  <span class=3D"comment">// called before parsing=
 on every input string</span>
localeData.postformat(str);  <span class=3D"comment">// called after format=
ting on every string</span>
localeData.week(aMoment);  <span class=3D"comment">// returns week-of-year =
of aMoment</span>
localeData.invalidDate();  <span class=3D"comment">// returns a translation=
 of 'Invalid date'</span>
localeData.firstDayOfWeek();  <span class=3D"comment">// 0-6 (Sunday to Sat=
urday)</span>
localeData.firstDayOfYear();  <span class=3D"comment">// 0-15 this and the =
first day of week are used</span>
                              <span class=3D"comment">// to determine which=
 is the first week of the</span>
                              <span class=3D"comment">// year. dow =3D=3D 1=
 and doy =3D=3D 4 means week starts</span>
                              <span class=3D"comment">// Monday and first w=
eek that has Thursday is the</span>
                              <span class=3D"comment">// first week of the =
year (but doy is NOT simply</span>
                              <span class=3D"comment">// Thursday).</span><=
/code></pre>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/customization/" name=3D"/custom=
ization/"></a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/c=
ustomization/">=E8=87=AA=E5=AE=9A=E4=B9=89</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/intro/" name=3D"/=
customization/intro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Moment.js is very easy to customize. In general, you should create=
 a locale setting with your customizations.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en-my-settings'</span>, {
    <span class=3D"comment">// customizations.</span>
});</code></pre>
<p>However, you can also overwrite an existing locale that has been loaded =
as well.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    <span class=3D"comment">// customizations</span>
});</code></pre>
<p>Any settings that are not defined are inherited from the default english=
 settings.</p>
<p>You can remove a previously defined locale by passing <code>null</code> =
as the second argument.
The deleted locale will no longer be available for use.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'fr'</span>); <span class=3D"comment">// 'fr'</span>
moment.locale(<span class=3D"string">'en'</span>); <span class=3D"comment">=
// 'en'</span>
moment.locale(<span class=3D"string">'fr'</span>, <span class=3D"literal">n=
ull</span>);
moment.locale(<span class=3D"string">'fr'</span>); <span class=3D"comment">=
// 'en'</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/month-names/" nam=
e=3D"/customization/month-names/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/month-names/">=E6=
=9C=88=E4=BB=BD=E5=90=8D</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/01-month-names.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    months : String[]
});
moment.locale(<span class=3D"string">'en'</span>, {
    months : Function
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    months : String[]
});
moment.lang(<span class=3D"string">'en'</span>, {
    months : Function
});</code></pre>

							</div>
					=09
						<p><code>Locale#months</code> should be an array of the month names.<=
/p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    months : [
        <span class=3D"string">"January"</span>, <span class=3D"string">"Fe=
bruary"</span>, <span class=3D"string">"March"</span>, <span class=3D"strin=
g">"April"</span>, <span class=3D"string">"May"</span>, <span class=3D"stri=
ng">"June"</span>, <span class=3D"string">"July"</span>,
        <span class=3D"string">"August"</span>, <span class=3D"string">"Sep=
tember"</span>, <span class=3D"string">"October"</span>, <span class=3D"str=
ing">"November"</span>, <span class=3D"string">"December"</span>
    ]
});</code></pre>
<p>If you need more processing to calculate the name of the month, (for exa=
mple, if there is different grammar for different formats), <code>Locale#mo=
nths</code> can be a function with the following signature. It should alway=
s return a month name.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    months : <span class=3D"function"><span class=3D"keyword">function</spa=
n> <span class=3D"params">(momentToFormat, format)</span> {</span>
        <span class=3D"comment">// momentToFormat is the moment currently b=
eing formatted</span>
        <span class=3D"comment">// format is the formatting string</span>
        <span class=3D"keyword">if</span> (<span class=3D"regexp">/^MMMM/</=
span>.test(format)) { <span class=3D"comment">// if the format starts with =
'MMMM'</span>
            <span class=3D"keyword">return</span> nominative[momentToFormat=
.month()];
        } <span class=3D"keyword">else</span> {
            <span class=3D"keyword">return</span> subjective[momentToFormat=
.month()];
        }
    }
});</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/month-abbreviatio=
ns/" name=3D"/customization/month-abbreviations/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/month-abbreviatio=
ns/">=E6=9C=88=E4=BB=BD=E5=90=8D (=E7=BC=A9=E5=86=99)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/02-month-abbreviations.md"=
 target=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    monthsShort : String[]
});
moment.locale(<span class=3D"string">'en'</span>, {
    monthsShort : Function
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    monthsShort : String[]
});
moment.lang(<span class=3D"string">'en'</span>, {
    monthsShort : Function
});</code></pre>

							</div>
					=09
						<p><code>Locale#monthsShort</code> should be an array of the month ab=
breviations.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    monthsShort : [
        <span class=3D"string">"Jan"</span>, <span class=3D"string">"Feb"</=
span>, <span class=3D"string">"Mar"</span>, <span class=3D"string">"Apr"</s=
pan>, <span class=3D"string">"May"</span>, <span class=3D"string">"Jun"</sp=
an>,
        <span class=3D"string">"Jul"</span>, <span class=3D"string">"Aug"</=
span>, <span class=3D"string">"Sep"</span>, <span class=3D"string">"Oct"</s=
pan>, <span class=3D"string">"Nov"</span>, <span class=3D"string">"Dec"</sp=
an>
    ]
});</code></pre>
<p>Like <code>Locale#months</code>, <code>Locale#monthsShort</code> can be =
a callback function as well.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    monthsShort : <span class=3D"function"><span class=3D"keyword">function=
</span> <span class=3D"params">(momentToFormat, format)</span> {</span>
        <span class=3D"keyword">if</span> (<span class=3D"regexp">/^MMMM/</=
span>.test(format)) {
            <span class=3D"keyword">return</span> nominative[momentToFormat=
.month()];
        } <span class=3D"keyword">else</span> {
            <span class=3D"keyword">return</span> subjective[momentToFormat=
.month()];
        }
    }
});</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/weekday-names/" n=
ame=3D"/customization/weekday-names/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/weekday-names/">=
=E6=98=9F=E6=9C=9F=E5=90=8D</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/03-weekday-names.md" targe=
t=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From ve=
rsion 2.8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    weekdays : String[]
});
moment.locale(<span class=3D"string">'en'</span>, {
    weekdays : Function
});

<span class=3D"comment">// Deprecated version 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    weekdays : String[]
});
moment.lang(<span class=3D"string">'en'</span>, {
    weekdays : Function
});</code></pre>

							</div>
					=09
						<p><code>Locale#weekdays</code> should be an array of the weekdays na=
mes.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    weekdays : [
        <span class=3D"string">"Sunday"</span>, <span class=3D"string">"Mon=
day"</span>, <span class=3D"string">"Tuesday"</span>, <span class=3D"string=
">"Wednesday"</span>, <span class=3D"string">"Thursday"</span>, <span class=
=3D"string">"Friday"</span>, <span class=3D"string">"Saturday"</span>
    ]
});</code></pre>
<p><code>Locale#weekdays</code> can be a callback function as well.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    weekdays : <span class=3D"function"><span class=3D"keyword">function</s=
pan> <span class=3D"params">(momentToFormat, format)</span> {</span>
        <span class=3D"keyword">return</span> weekdays[momentToFormat.day()=
];
    }
});</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/weekday-abbreviat=
ions/" name=3D"/customization/weekday-abbreviations/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/weekday-abbreviat=
ions/">=E6=98=9F=E6=9C=9F=E5=90=8D (=E7=BC=A9=E5=86=99)</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/04-weekday-abbreviations.m=
d" target=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    weekdaysShort : String[]
});
moment.locale(<span class=3D"string">'en'</span>, {
    weekdaysShort : Function
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    weekdaysShort : String[]
});
moment.lang(<span class=3D"string">'en'</span>, {
    weekdaysShort : Function
});</code></pre>

							</div>
					=09
						<p><code>Locale#weekdaysShort</code> should be an array of the weekda=
ys abbreviations.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    weekdaysShort : [<span class=3D"string">"Sun"</span>, <span class=3D"st=
ring">"Mon"</span>, <span class=3D"string">"Tue"</span>, <span class=3D"str=
ing">"Wed"</span>, <span class=3D"string">"Thu"</span>, <span class=3D"stri=
ng">"Fri"</span>, <span class=3D"string">"Sat"</span>]
});</code></pre>
<p><code>Locale#weekdaysShort</code> can be a callback function as well.</p=
>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    weekdaysShort : <span class=3D"function"><span class=3D"keyword">functi=
on</span> <span class=3D"params">(momentToFormat, format)</span> {</span>
        <span class=3D"keyword">return</span> weekdaysShort[momentToFormat.=
day()];
    }
});</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/weekday-min/" nam=
e=3D"/customization/weekday-min/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/weekday-min/">=E6=
=98=9F=E6=9C=9F=E5=90=8D (=E6=9E=81=E7=AE=80=E7=BC=A9=E5=86=99)</a>
						=09
								<span>1.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/05-weekday-min.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    weekdaysMin : String[]
});
moment.locale(<span class=3D"string">'en'</span>, {
    weekdaysMin : Function
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    weekdaysMin : String[]
});
moment.lang(<span class=3D"string">'en'</span>, {
    weekdaysMin : Function
});</code></pre>

							</div>
					=09
						<p><code>Locale#weekdaysMin</code> should be an array of two letter w=
eekday abbreviations. The purpose of these is for things like calendar pick=
ers, thus they should be as small as possible.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    weekdaysMin : [<span class=3D"string">"Su"</span>, <span class=3D"strin=
g">"Mo"</span>, <span class=3D"string">"Tu"</span>, <span class=3D"string">=
"We"</span>, <span class=3D"string">"Th"</span>, <span class=3D"string">"Fr=
"</span>, <span class=3D"string">"Sa"</span>]
});</code></pre>
<p><code>Locale#weekdaysMin</code> can be a callback function as well.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    weekdaysMin : <span class=3D"function"><span class=3D"keyword">function=
</span> <span class=3D"params">(momentToFormat, format)</span> {</span>
        <span class=3D"keyword">return</span> weekdaysMin[momentToFormat.da=
y()];
    }
});</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/long-date-formats=
/" name=3D"/customization/long-date-formats/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/long-date-formats=
/">=E9=95=BF=E6=97=A5=E6=9C=9F=E6=A0=BC=E5=BC=8F</a>
						=09
								<span>1.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/06-long-date-formats.md" t=
arget=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    longDateFormat : Object
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    longDateFormat : Object
});</code></pre>

							</div>
					=09
						<p><code>Locale#longDateFormat</code> should be an object containing =
a key/value pair for each long date format <code>L LL LLL LLLL LT LTS</code=
>. <code>LT</code> should be the time format, and is also used for <code>mo=
ment#calendar</code>.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    longDateFormat : {
        LT: <span class=3D"string">"h:mm A"</span>,
        LTS: <span class=3D"string">"h:mm:ss A"</span>,
        L: <span class=3D"string">"MM/DD/YYYY"</span>,
        l: <span class=3D"string">"M/D/YYYY"</span>,
        LL: <span class=3D"string">"MMMM Do YYYY"</span>,
        ll: <span class=3D"string">"MMM D YYYY"</span>,
        LLL: <span class=3D"string">"MMMM Do YYYY LT"</span>,
        lll: <span class=3D"string">"MMM D YYYY LT"</span>,
        LLLL: <span class=3D"string">"dddd, MMMM Do YYYY LT"</span>,
        llll: <span class=3D"string">"ddd, MMM D YYYY LT"</span>
    }
});</code></pre>
<p>You can eliminate the lowercase <code>l</code> tokens and they will be c=
reated automatically by replacing long tokens with the short token variants=
.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    longDateFormat : {
        LT: <span class=3D"string">"h:mm A"</span>,
        LTS: <span class=3D"string">"h:mm:ss A"</span>,
        L: <span class=3D"string">"MM/DD/YYYY"</span>,
        LL: <span class=3D"string">"MMMM Do YYYY"</span>,
        LLL: <span class=3D"string">"MMMM Do YYYY LT"</span>,
        LLLL: <span class=3D"string">"dddd, MMMM Do YYYY LT"</span>
    }
});</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/relative-time/" n=
ame=3D"/customization/relative-time/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/relative-time/">=
=E7=9B=B8=E5=AF=B9=E6=97=B6=E9=97=B4</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/07-relative-time.md" targe=
t=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    relativeTime : Object
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    relativeTime : Object
});</code></pre>

							</div>
					=09
						<p><code>Locale#relativeTime</code> should be an object of the replac=
ement strings for <code>moment#from</code>.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    relativeTime : {
        future: <span class=3D"string">"in %s"</span>,
        past:   <span class=3D"string">"%s ago"</span>,
        s:  <span class=3D"string">"seconds"</span>,
        m:  <span class=3D"string">"a minute"</span>,
        mm: <span class=3D"string">"%d minutes"</span>,
        h:  <span class=3D"string">"an hour"</span>,
        hh: <span class=3D"string">"%d hours"</span>,
        d:  <span class=3D"string">"a day"</span>,
        dd: <span class=3D"string">"%d days"</span>,
        M:  <span class=3D"string">"a month"</span>,
        MM: <span class=3D"string">"%d months"</span>,
        y:  <span class=3D"string">"a year"</span>,
        yy: <span class=3D"string">"%d years"</span>
    }
});</code></pre>
<p><code>Locale#relativeTime.future</code> refers to the prefix/suffix for =
future dates, and <code>Locale#relativeTime.past</code> refers to the prefi=
x/suffix for past dates. For all others, a single character refers to the s=
ingular, and a double character refers to the plural.</p>
<p>If a locale requires additional processing for a token, it can set the t=
oken as a function with the following signature.
The function should return a string.</p>
<pre><code class=3D"language-javascript"><span class=3D"function"><span cla=
ss=3D"keyword">function</span> <span class=3D"params">(number, withoutSuffi=
x, key, isFuture)</span> {</span>
    <span class=3D"keyword">return</span> string;
}</code></pre>
<p>The <code>key</code> argument refers to the replacement key in the <code=
>Locale#relativeTime</code> object. (eg. <code>s m mm h</code>, etc.)</p>
<p>The <code>number</code> argument refers to the number of units for that =
key. For <code>m</code>, the number is the number of minutes, etc.</p>
<p>The <code>withoutSuffix</code> argument will be true if the token will b=
e displayed without a suffix, and false if it will be displayed with a suff=
ix. (The reason for the inverted logic is because the default behavior is t=
o display with the suffix.)</p>
<p>The <code>isFuture</code> argument will be true if it is going to use th=
e future suffix/prefix and false if it is going to use the past prefix/suff=
ix. The <code>isFuture</code> argument was added in version <strong>1.6.0</=
strong>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/am-pm/" name=3D"/=
customization/am-pm/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/am-pm/">=E4=B8=8A=
=E5=8D=88/=E4=B8=8B=E5=8D=88</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/08-am-pm.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    meridiem : Function
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    meridiem : Function
});</code></pre>

							</div>
					=09
						<p>If your locale uses 'am/pm', <code>Locale#meridiem</code> can be o=
mitted, as those values are the defaults.</p>
<p>If your locale needs any different computation for am/pm, <code>Locale#m=
eridiem</code> should be a callback function that returns the correct strin=
g based on hour, minute, and upper/lowercase.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'zh-cn'</span>, {
    meridiem : <span class=3D"function"><span class=3D"keyword">function</s=
pan> <span class=3D"params">(hour, minute, isLowercase)</span> {</span>
        <span class=3D"keyword">if</span> (hour &lt; <span class=3D"number"=
>9</span>) {
            <span class=3D"keyword">return</span> <span class=3D"string">"=
=E6=97=A9=E4=B8=8A"</span>;
        } <span class=3D"keyword">else</span> <span class=3D"keyword">if</s=
pan> (hour &lt; <span class=3D"number">11</span> &amp;&amp; minute &lt; <sp=
an class=3D"number">30</span>) {
            <span class=3D"keyword">return</span> <span class=3D"string">"=
=E4=B8=8A=E5=8D=88"</span>;
        } <span class=3D"keyword">else</span> <span class=3D"keyword">if</s=
pan> (hour &lt; <span class=3D"number">13</span> &amp;&amp; minute &lt; <sp=
an class=3D"number">30</span>) {
            <span class=3D"keyword">return</span> <span class=3D"string">"=
=E4=B8=AD=E5=8D=88"</span>;
        } <span class=3D"keyword">else</span> <span class=3D"keyword">if</s=
pan> (hour &lt; <span class=3D"number">18</span>) {
            <span class=3D"keyword">return</span> <span class=3D"string">"=
=E4=B8=8B=E5=8D=88"</span>;
        } <span class=3D"keyword">else</span> {
            <span class=3D"keyword">return</span> <span class=3D"string">"=
=E6=99=9A=E4=B8=8A"</span>;
        }
    }
});</code></pre>
<p>Before version <strong>1.6.0</strong>, <code>Locale#meridiem</code> was =
a map of upper and lowercase versions of am/pm.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    meridiem : {
        am : <span class=3D"string">'am'</span>,
        AM : <span class=3D"string">'AM'</span>,
        pm : <span class=3D"string">'pm'</span>,
        PM : <span class=3D"string">'PM'</span>
    }
});</code></pre>
<p>This has been deprecated. The <strong>1.6.0</strong> callback function s=
yntax is now used instead.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/am-pm-parsing/" n=
ame=3D"/customization/am-pm-parsing/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/am-pm-parsing/">=
=E4=B8=8A=E5=8D=88/=E4=B8=8B=E5=8D=88 (=E8=A7=A3=E6=9E=90)</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/09-am-pm-parsing.md" targe=
t=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    meridiemParse : RegExp
    isPM : Function
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    meridiemParse : RegExp
    isPM : Function
});</code></pre>

							</div>
					=09
						<p><code>Locale#isPM</code> should return true if the input string is=
 past 12 noon. This is used in parsing the <code>a A</code> tokens.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    isPM : <span class=3D"function"><span class=3D"keyword">function</span>=
 <span class=3D"params">(input)</span> {</span>
        <span class=3D"keyword">return</span> ((input + <span class=3D"stri=
ng">''</span>).toLowerCase()[<span class=3D"number">0</span>] =3D=3D=3D <sp=
an class=3D"string">'p'</span>);
    }
});</code></pre>
<p>To configure what strings should be parsed as input, set the <code>merid=
iemParse</code> property.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    meridiemParse : <span class=3D"regexp">/[ap]\.?m?\.?/i</span>
});</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/calendar/" name=
=3D"/customization/calendar/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/calendar/">=E6=97=
=A5=E5=8E=86</a>
						=09
								<span>1.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/10-calendar.md" target=3D"=
_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    calendar : Object
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    calendar : Object
});</code></pre>

							</div>
					=09
						<p><code>Locale#calendar</code> should have the following formatting =
strings.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    calendar : {
        lastDay : <span class=3D"string">'[Yesterday at] LT'</span>,
        sameDay : <span class=3D"string">'[Today at] LT'</span>,
        nextDay : <span class=3D"string">'[Tomorrow at] LT'</span>,
        lastWeek : <span class=3D"string">'[last] dddd [at] LT'</span>,
        nextWeek : <span class=3D"string">'dddd [at] LT'</span>,
        sameElse : <span class=3D"string">'L'</span>
    }
});</code></pre>
<p>Each of the <code>Locale#calendar</code> keys can also be a callback fun=
ction with the scope of the current moment. It should return a formatting s=
tring.</p>
<pre><code class=3D"language-javascript"><span class=3D"function"><span cla=
ss=3D"keyword">function</span> <span class=3D"params">()</span> {</span>
    <span class=3D"keyword">return</span> <span class=3D"string">'[hoy a la=
'</span> + ((<span class=3D"keyword">this</span>.hours() !=3D=3D <span clas=
s=3D"number">1</span>) ? <span class=3D"string">'s'</span> : <span class=3D=
"string">''</span>) + <span class=3D"string">'] LT'</span>;
},</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/ordinal/" name=3D=
"/customization/ordinal/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/ordinal/">=E6=AF=
=94=E8=BE=83</a>
						=09
								<span>1.0.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/11-ordinal.md" target=3D"_=
blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js"><span class=3D"comment">// From 2.=
8.1 onward</span>
moment.locale(<span class=3D"string">'en'</span>, {
    ordinal : Function
});

<span class=3D"comment">// Deprecated in 2.8.1</span>
moment.lang(<span class=3D"string">'en'</span>, {
    ordinal : Function
});</code></pre>

							</div>
					=09
						<p><code>Locale#ordinal</code> should be a function that returns the =
ordinal for a given number.</p>
<pre><code class=3D"language-javascript">moment.locale(<span class=3D"strin=
g">'en'</span>, {
    ordinal : <span class=3D"function"><span class=3D"keyword">function</sp=
an> <span class=3D"params">(number, token)</span> {</span>
        <span class=3D"keyword">var</span> b =3D number % <span class=3D"nu=
mber">10</span>;
        <span class=3D"keyword">var</span> output =3D (~~ (number % <span c=
lass=3D"number">100</span> / <span class=3D"number">10</span>) =3D=3D=3D <s=
pan class=3D"number">1</span>) ? <span class=3D"string">'th'</span> :
            (b =3D=3D=3D <span class=3D"number">1</span>) ? <span class=3D"=
string">'st'</span> :
            (b =3D=3D=3D <span class=3D"number">2</span>) ? <span class=3D"=
string">'nd'</span> :
            (b =3D=3D=3D <span class=3D"number">3</span>) ? <span class=3D"=
string">'rd'</span> : <span class=3D"string">'th'</span>;
        <span class=3D"keyword">return</span> number + output;
    }
});</code></pre>
<p>As of <strong>2.0.0</strong>, the ordinal function should return both th=
e number and the ordinal. Previously, only the ordinal was returned.</p>
<p>As of <strong>2.1.0</strong>, the token parameter was added. It is a str=
ing of the token that is being ordinalized, for example: <code>M</code> or =
<code>d</code>.</p>
<p>For more information on ordinal numbers, see <a href=3D"http://en.wikipe=
dia.org/wiki/Ordinal_number_%28linguistics%29">wikipedia</a></p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/customization/relative-time-thr=
eshold/" name=3D"/customization/relative-time-threshold/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/customization/relative-time-thr=
eshold/">=E7=9B=B8=E5=AF=B9=E6=97=B6=E9=97=B4=E4=B8=B4=E7=95=8C=E5=80=BC</a=
>
						=09
								<span>2.7.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/07-customization/12-relative-time-threshold=
.md" target=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.relativeTimeThreshold(unit)=
;  <span class=3D"comment">// getter</span>
moment.relativeTimeThreshold(unit, limit);  <span class=3D"comment">// sett=
er</span></code></pre>

							</div>
					=09
						<p><code>duration.humanize</code> has thresholds which define when a =
unit is considered a minute, an hour and so on. For example, by default mor=
e than 45 seconds is considered a minute, more than 22 hours is considered =
a day and so on. To change those cutoffs use <code>moment.relativeTimeThres=
hold(unit, limit)</code> where limit is one of <code>s</code>, <code>m</cod=
e>, <code>h</code>, <code>d</code>, <code>M</code>.</p>
<table>
  <tbody>
    <tr>
      <th>unit</th>
      <th>meaning</th>
      <th>usage</th>
    </tr>
    <tr>
      <td>s</td>
      <td>seconds</td>
      <td>least number of seconds to be considered a minute</td>
    </tr>
    <tr>
      <td>m</td>
      <td>minutes</td>
      <td>least number of minutes to be considered an hour</td>
    </tr>
    <tr>
      <td>h</td>
      <td>hours</td>
      <td>least number of hours to be considered a day</td>
    </tr>
    <tr>
      <td>d</td>
      <td>days</td>
      <td>least number of days to be considered a month</td>
    </tr>
    <tr>
      <td>M</td>
      <td>months</td>
      <td>least number of months to be considered a year</td>
    </tr>
  </tbody>
</table>

<pre><code class=3D"language-javascript">  <span class=3D"comment">// Retri=
eve existing thresholds</span>
  moment.relativeTimeThreshold(<span class=3D"string">'s'</span>);  <span c=
lass=3D"comment">// 45</span>
  moment.relativeTimeThreshold(<span class=3D"string">'m'</span>);  <span c=
lass=3D"comment">// 45</span>
  moment.relativeTimeThreshold(<span class=3D"string">'h'</span>);  <span c=
lass=3D"comment">// 22</span>
  moment.relativeTimeThreshold(<span class=3D"string">'d'</span>);  <span c=
lass=3D"comment">// 26</span>
  moment.relativeTimeThreshold(<span class=3D"string">'M'</span>);  <span c=
lass=3D"comment">// 11</span>

  <span class=3D"comment">// Set new thresholds</span>
  moment.relativeTimeThreshold(<span class=3D"string">'s'</span>, <span cla=
ss=3D"number">40</span>);
  moment.relativeTimeThreshold(<span class=3D"string">'m'</span>, <span cla=
ss=3D"number">40</span>);
  moment.relativeTimeThreshold(<span class=3D"string">'h'</span>, <span cla=
ss=3D"number">20</span>);
  moment.relativeTimeThreshold(<span class=3D"string">'d'</span>, <span cla=
ss=3D"number">25</span>);
  moment.relativeTimeThreshold(<span class=3D"string">'M'</span>, <span cla=
ss=3D"number">10</span>);</code></pre>
<p><strong>NOTE</strong>: Retrieving thresholds was added in <strong>2.8.1<=
/strong>.</p>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/durations/" name=3D"/durations/=
"></a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/d=
urations/">=E6=97=B6=E9=97=B4=E6=AE=B5</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/intro/" name=3D"/dura=
tions/intro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Moment.js also has duration objects. Where a moment is defined as =
single points in time, durations are defined as a length of time.</p>
<p>Durations do not have a defined beginning and end date. They are context=
less.</p>
<p>A duration is conceptually more similar to '2 hours' than to 'between 2 =
and 4 pm today'. As such, they are not a good solution to converting betwee=
n units that depend on context.</p>
<p>For example, a year can be defined as 366 days, 365 days, 365.25 days, 1=
2 months, or 52 weeks. Trying to convert years to days makes no sense witho=
ut context. It is much better to use <code>moment#diff</code> for calculati=
ng days or years between two moments than to use <code>Durations</code>.</p=
>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/creating/" name=3D"/d=
urations/creating/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/creating/">=E5=88=9B=
=E5=BB=BA</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/01-creating.md" target=3D"_bla=
nk">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration(Number, String);
moment.duration(Number);
moment.duration(Object);
moment.duration(String);</code></pre>

							</div>
					=09
						<p>To create a duration, call <code>moment.duration()</code> with the=
 length of time in milliseconds.</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"num=
ber">100</span>); <span class=3D"comment">// 100 milliseconds</span></code>=
</pre>
<p>If you want to create a moment with a unit of measurement other than mil=
liseconds, you can pass the unit of measurement as well.</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"num=
ber">2</span>, <span class=3D"string">'seconds'</span>);
moment.duration(<span class=3D"number">2</span>, <span class=3D"string">'mi=
nutes'</span>);
moment.duration(<span class=3D"number">2</span>, <span class=3D"string">'ho=
urs'</span>);
moment.duration(<span class=3D"number">2</span>, <span class=3D"string">'da=
ys'</span>);
moment.duration(<span class=3D"number">2</span>, <span class=3D"string">'we=
eks'</span>);
moment.duration(<span class=3D"number">2</span>, <span class=3D"string">'mo=
nths'</span>);
moment.duration(<span class=3D"number">2</span>, <span class=3D"string">'ye=
ars'</span>);</code></pre>
<p>The same shorthand for <code>moment#add</code> and <code>moment#subtract=
</code> works here as well.</p>
<table class=3D"table table-striped table-bordered">
  <tbody>
    <tr>
      <th>Key</th>
      <th>Shorthand</th>
    </tr>
    <tr>
      <td>years</td>
      <td>y</td>
    </tr>
    <tr>
      <td>months</td>
      <td>M</td>
    </tr>
    <tr>
      <td>weeks</td>
      <td>w</td>
    </tr>
    <tr>
      <td>days</td>
      <td>d</td>
    </tr>
    <tr>
      <td>hours</td>
      <td>h</td>
    </tr>
    <tr>
      <td>minutes</td>
      <td>m</td>
    </tr>
    <tr>
      <td>seconds</td>
      <td>s</td>
    </tr>
    <tr>
      <td>milliseconds</td>
      <td>ms</td>
    </tr>
  </tbody>
</table>

<p>Much like <code>moment#add</code>, you can pass an object of values if y=
ou need multiple different units of measurement.</p>
<pre><code class=3D"language-javascript">moment.duration({
    seconds: <span class=3D"number">2</span>,
    minutes: <span class=3D"number">2</span>,
    hours: <span class=3D"number">2</span>,
    days: <span class=3D"number">2</span>,
    weeks: <span class=3D"number">2</span>,
    months: <span class=3D"number">2</span>,
    years: <span class=3D"number">2</span>
});</code></pre>
<p>As of <strong>2.1.0</strong>, moment supports parsing ASP.NET style time=
 spans. The following formats are supported.</p>
<p>The format is an hour, minute, second string separated by colons like <c=
ode>23:59:59</code>. The number of days can be prefixed with a dot separato=
r like so <code>7.23:59:59</code>. Partial seconds are supported as well <c=
ode>23:59:59.999</code>.</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"str=
ing">'23:59:59'</span>);
moment.duration(<span class=3D"string">'23:59:59.999'</span>);
moment.duration(<span class=3D"string">'7.23:59:59.999'</span>);
moment.duration(<span class=3D"string">'23:59'</span>);          <span clas=
s=3D"comment">//added in 2.3.0</span></code></pre>
<p>As of <strong>2.3.0</strong>, moment also supports parsing <a href=3D"ht=
tp://en.wikipedia.org/wiki/ISO_8601#Time_intervals">ISO 8601</a> durations.=
</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"str=
ing">'P1Y2M3DT4H5M6S'</span>);
moment.duration(<span class=3D"string">'P1M'</span>);</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/humanize/" name=3D"/d=
urations/humanize/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/humanize/">=E6=8B=9F=
=E4=BA=BA=E5=8C=96</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/02-humanize.md" target=3D"_bla=
nk">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().humanize();</cod=
e></pre>

							</div>
					=09
						<p>Sometimes, you want all the goodness of <code>moment#from</code> b=
ut you don't want to have to create two moments, you just want to display a=
 length of time.</p>
<p>Enter <code>moment.duration().humanize()</code>.</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"num=
ber">1</span>, <span class=3D"string">"minutes"</span>).humanize(); <span c=
lass=3D"comment">// a minute</span>
moment.duration(<span class=3D"number">2</span>, <span class=3D"string">"mi=
nutes"</span>).humanize(); <span class=3D"comment">// 2 minutes</span>
moment.duration(<span class=3D"number">24</span>, <span class=3D"string">"h=
ours"</span>).humanize();  <span class=3D"comment">// a day</span></code></=
pre>
<p>By default, the return string is suffixless. If you want a suffix, pass =
in true as seen below.</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"num=
ber">1</span>, <span class=3D"string">"minutes"</span>).humanize(<span clas=
s=3D"literal">true</span>); <span class=3D"comment">// in a minute</span></=
code></pre>
<p>For suffixes before now, pass in a negative number.</p>
<pre><code class=3D"language-javascript">moment.duration(-<span class=3D"nu=
mber">1</span>, <span class=3D"string">"minutes"</span>).humanize(<span cla=
ss=3D"literal">true</span>); <span class=3D"comment">// a minute ago</span>=
</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/milliseconds/" name=
=3D"/durations/milliseconds/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/milliseconds/">=E6=AF=
=AB=E7=A7=92</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/03-milliseconds.md" target=3D"=
_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().milliseconds();
moment.duration().asMilliseconds();</code></pre>

							</div>
					=09
						<p>To get the number of milliseconds in a duration, use <code>moment.=
duration().milliseconds()</code>.</p>
<p>It will return a number between 0 and 999.</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"num=
ber">500</span>).milliseconds(); <span class=3D"comment">// 500</span>
moment.duration(<span class=3D"number">1500</span>).milliseconds(); <span c=
lass=3D"comment">// 500</span>
moment.duration(<span class=3D"number">15000</span>).milliseconds(); <span =
class=3D"comment">// 0</span></code></pre>
<p>If you want the length of the duration in milliseconds, use <code>moment=
.duration().asMilliseconds()</code> instead.</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"num=
ber">500</span>).asMilliseconds(); <span class=3D"comment">// 500</span>
moment.duration(<span class=3D"number">1500</span>).asMilliseconds(); <span=
 class=3D"comment">// 1500</span>
moment.duration(<span class=3D"number">15000</span>).asMilliseconds(); <spa=
n class=3D"comment">// 15000</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/seconds/" name=3D"/du=
rations/seconds/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/seconds/">=E7=A7=92</=
a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/04-seconds.md" target=3D"_blan=
k">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().seconds();
moment.duration().asSeconds();</code></pre>

							</div>
					=09
						<p>To get the number of seconds in a duration, use <code>moment.durat=
ion().seconds()</code>.</p>
<p>It will return a number between 0 and 59.</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"num=
ber">500</span>).seconds(); <span class=3D"comment">// 0</span>
moment.duration(<span class=3D"number">1500</span>).seconds(); <span class=
=3D"comment">// 1</span>
moment.duration(<span class=3D"number">15000</span>).seconds(); <span class=
=3D"comment">// 15</span></code></pre>
<p>If you want the length of the duration in seconds, use <code>moment.dura=
tion().asSeconds()</code> instead.</p>
<pre><code class=3D"language-javascript">moment.duration(<span class=3D"num=
ber">500</span>).asSeconds(); <span class=3D"comment">// 0.5</span>
moment.duration(<span class=3D"number">1500</span>).asSeconds(); <span clas=
s=3D"comment">// 1.5</span>
moment.duration(<span class=3D"number">15000</span>).asSeconds(); <span cla=
ss=3D"comment">// 15</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/minutes/" name=3D"/du=
rations/minutes/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/minutes/">=E5=88=86=
=E9=92=9F</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/05-minutes.md" target=3D"_blan=
k">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().minutes();
moment.duration().asMinutes();</code></pre>

							</div>
					=09
						<p>As with the other getters for durations, <code>moment.duration().m=
inutes()</code> gets the minutes (0 - 59).</p>
<p><code>moment.duration().asMinutes()</code> gets the length of the durati=
on in minutes.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/hours/" name=3D"/dura=
tions/hours/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/hours/">=E5=B0=8F=E6=
=97=B6</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/06-hours.md" target=3D"_blank"=
>=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().hours();
moment.duration().asHours();</code></pre>

							</div>
					=09
						<p>As with the other getters for durations, <code>moment.duration().h=
ours()</code> gets the hours (0 - 23).</p>
<p><code>moment.duration().asHours()</code> gets the length of the duration=
 in hours.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/days/" name=3D"/durat=
ions/days/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/days/">=E5=A4=A9</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/07-days.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().days();
moment.duration().asDays();</code></pre>

							</div>
					=09
						<p>As with the other getters for durations, <code>moment.duration().d=
ays()</code> gets the days (0 - 29).</p>
<p><code>moment.duration().asDays()</code> gets the length of the duration =
in days.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/months/" name=3D"/dur=
ations/months/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/months/">=E6=9C=88</a=
>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/08-months.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().months();
moment.duration().asMonths();</code></pre>

							</div>
					=09
						<p>As with the other getters for durations, <code>moment.duration().m=
onths()</code> gets the months (0 - 11).</p>
<p><code>moment.duration().asMonths()</code> gets the length of the duratio=
n in months.</p>
<p><strong>Note:</strong> The length of a duration in months is defined as =
30 days.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/years/" name=3D"/dura=
tions/years/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/years/">=E5=B9=B4</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/09-years.md" target=3D"_blank"=
>=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().years();
moment.duration().asYears();</code></pre>

							</div>
					=09
						<p>As with the other getters for durations, <code>moment.duration().y=
ears()</code> gets the years.</p>
<p><code>moment.duration().asYears()</code> gets the length of the duration=
 in years.</p>
<p><strong>Note:</strong> The length of a duration in years is defined as 3=
65 days.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/add/" name=3D"/durati=
ons/add/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/add/">=E5=8A=A0=E6=B3=
=95</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/10-add.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().add(Number, Stri=
ng);
moment.duration().add(Number);
moment.duration().add(Duration);
moment.duration().add(Object);</code></pre>

							</div>
					=09
						<p>Mutates the original duration by adding time.</p>
<p>The same keys and shorthands used to create durations can be used here a=
s the second argument.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment.duration(<span class=3D"number">1</span>, <span class=3D"stri=
ng">'d'</span>);
<span class=3D"keyword">var</span> b =3D moment.duration(<span class=3D"num=
ber">2</span>, <span class=3D"string">'d'</span>);
a.add(b).days(); <span class=3D"comment">// 3</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/subtract/" name=3D"/d=
urations/subtract/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/subtract/">=E5=87=8F=
=E6=B3=95</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/11-subtract.md" target=3D"_bla=
nk">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().subtract(Number,=
 String);
moment.duration().subtract(Number);
moment.duration().subtract(Duration);
moment.duration().subtract(Object);</code></pre>

							</div>
					=09
						<p>Mutates the original duration by subtracting time.</p>
<p>The same keys and shorthands used to create durations can be used here a=
s the second argument.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 a =3D moment.duration(<span class=3D"number">3</span>, <span class=3D"stri=
ng">'d'</span>);
<span class=3D"keyword">var</span> b =3D moment.duration(<span class=3D"num=
ber">2</span>, <span class=3D"string">'d'</span>);
a.subtract(b).days(); <span class=3D"comment">// 1</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/as/" name=3D"/duratio=
ns/as/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/as/">=E8=BD=AC=E6=8D=
=A2=E5=8D=95=E4=BD=8D</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/12-as.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().as(String);</cod=
e></pre>

							</div>
					=09
						<p>As an alternate to <code>Duration#asX</code>, you can use <code>Du=
ration#as('x')</code>. All the <a href=3D"http://momentjs.cn/docs/#/manipul=
ating/add/">shorthand keys from</a> <code>moment#add</code> apply here as w=
ell.</p>
<pre><code class=3D"language-javascript">duration.as(<span class=3D"string"=
>'hours'</span>);
duration.as(<span class=3D"string">'minutes'</span>);
duration.as(<span class=3D"string">'seconds'</span>);
duration.as(<span class=3D"string">'milliseconds'</span>);</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/get/" name=3D"/durati=
ons/get/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/get/">=E5=8F=96=E5=80=
=BC</a>
						=09
								<span>2.1.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/13-get.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().get(String);</co=
de></pre>

							</div>
					=09
						<p>As an alternate to <code>Duration#x()</code> getters, you can use =
<code>Duration#get('x')</code>. All the <a href=3D"http://momentjs.cn/docs/=
#/manipulating/add/">shorthand keys from</a> <code>moment#add</code> apply =
here as well.</p>
<pre><code class=3D"language-javascript">duration.get(<span class=3D"string=
">'hours'</span>);
duration.get(<span class=3D"string">'minutes'</span>);
duration.get(<span class=3D"string">'seconds'</span>);
duration.get(<span class=3D"string">'milliseconds'</span>);</code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/as-json/" name=3D"/du=
rations/as-json/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/as-json/">=E8=BE=93=
=E5=87=BA JSON</a>
						=09
								<span>2.9.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/14-as-json.md" target=3D"_blan=
k">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.duration().toJSON();</code>=
</pre>

							</div>
					=09
						<p>When serializing a duration object to JSON, it will be be represen=
ted as an
ISO8601 string.</p>
<pre><code class=3D"language-javascript">JSON.stringify({
    postDuration : moment.duration(<span class=3D"number">5</span>, <span c=
lass=3D"string">'m'</span>)
}); <span class=3D"comment">// '{"postDuration":"PT5M"}'</span></code></pre=
>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/durations/is-a-duration/" name=
=3D"/durations/is-a-duration/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/durations/is-a-duration/">Is a =
Duration</a>
						=09
								<span>1.6.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/08-durations/15-is-a-duration.md" target=3D=
"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.isDuration(obj);</code></pr=
e>

							</div>
					=09
						<p>To check if a variable is a moment duration object, use <code>mome=
nt.isDuration()</code>.</p>
<pre><code class=3D"language-javascript">moment.isDuration() <span class=3D=
"comment">// false</span>
moment.isDuration(<span class=3D"keyword">new</span> Date()) <span class=3D=
"comment">// false</span>
moment.isDuration(moment()) <span class=3D"comment">// false</span>
moment.isDuration(moment.duration()) <span class=3D"comment">// true</span>
moment.isDuration(moment.duration(<span class=3D"number">2</span>, <span cl=
ass=3D"string">'minutes'</span>)) <span class=3D"comment">// true</span></c=
ode></pre>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/utilities/" name=3D"/utilities/=
"></a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/u=
tilities/">=E5=B7=A5=E5=85=B7=E7=B1=BB=E5=87=BD=E6=95=B0</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/utilities/intro/" name=3D"/util=
ities/intro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Moment exposes some methods which may be useful to people extendin=
g the library or writing custom parsers.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/utilities/normalize-units/" nam=
e=3D"/utilities/normalize-units/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/utilities/normalize-units/">=E6=
=A0=87=E5=87=86=E5=8C=96=E5=8D=95=E4=BD=8D</a>
						=09
								<span>2.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/09-utilities/01-normalize-units.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.normalizeUnits(String);</co=
de></pre>

							</div>
					=09
						<p>Many of Moment's functions allow the caller to pass in aliases for=
 unit enums. For example, all of the <code>get</code>s below are equivalent=
.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 m =3D moment();
m.get(<span class=3D"string">'y'</span>);
m.get(<span class=3D"string">'year'</span>);
m.get(<span class=3D"string">'years'</span>);</code></pre>
<p>If you're extending the library, you may want access to Moment's facilit=
ies for that in order to better align your functionality with Moment's.</p>
<pre><code class=3D"language-javascript">moment.normalizeUnits(<span class=
=3D"string">'y'</span>);      <span class=3D"comment">// 'year'</span>
moment.normalizeUnits(<span class=3D"string">'Y'</span>);      <span class=
=3D"comment">// 'year'</span>
moment.normalizeUnits(<span class=3D"string">'year'</span>);   <span class=
=3D"comment">// 'year'</span>
moment.normalizeUnits(<span class=3D"string">'years'</span>);  <span class=
=3D"comment">// 'year'</span>
moment.normalizeUnits(<span class=3D"string">'YeARS'</span>);  <span class=
=3D"comment">// 'year'</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/utilities/invalid/" name=3D"/ut=
ilities/invalid/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/utilities/invalid/">=E6=97=A0=
=E6=95=88=E5=AF=B9=E8=B1=A1</a>
						=09
								<span>2.3.0+</span>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/09-utilities/02-invalid.md" target=3D"_blan=
k">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">moment.invalid(Object);</code></pr=
e>

							</div>
					=09
						<p>You can create your own invalid Moment objects, which is useful in=
 making your own parser.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 m =3D moment.invalid();
m.isValid();                      <span class=3D"comment">// false</span>
m.format();                       <span class=3D"comment">// 'Invalid date'=
</span>
m.parsingFlags().userInvalidated; <span class=3D"comment">// true</span></c=
ode></pre>
<p><code>invalid</code> also accepts an object which specifies which parsin=
g flags to set. This will <em>not</em> set the <code>userInvalidated</code>=
 parsing flag unless it's one of the properties specified.</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 m =3D moment.invalid({invalidMonth: <span class=3D"string">'Actober'</span=
>});
m.parsingFlags().invalidMonth; <span class=3D"comment">// 'Actober'</span><=
/code></pre>
<p>You need not specify parsing flags recognized by Moment; the Moment will=
 be invalid nonetheless, and the parsing flags will be returned by <code>pa=
rsingFlags()</code>.</p>

					</div>
				</article>
		=09
	=09
			<article class=3D"docs-section">
				<a class=3D"docs-section-target" id=3D"/plugins/" name=3D"/plugins/"></=
a>
				<h2 class=3D"docs-section-title"><a href=3D"http://momentjs.cn/docs/#/p=
lugins/">=E6=8F=92=E4=BB=B6</a></h2>
			</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/intro/" name=3D"/plugin=
s/intro/"></a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>Some other people have made plugins for Moment.js that may be usef=
ul to you.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/strftime/" name=3D"/plu=
gins/strftime/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/strftime/">Strftime</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/01-strftime.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">npm install moment-strftime</code>=
</pre>

							</div>
					=09
						<p>If you are more comfortable working with strftime instead of LDML-=
like parsing tokens, you can use Ben Oakes' plugin <code>moment-strftime</c=
ode>.</p>
<p>The repository is located at <a href=3D"https://github.com/benjaminoakes=
/moment-strftime">github.com/benjaminoakes/moment-strftime</a></p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/isocalendar/" name=3D"/=
plugins/isocalendar/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/isocalendar/">ISO Calen=
dar</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/02-isocalendar.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">npm install moment-isocalendar</co=
de></pre>

							</div>
					=09
						<p>If you are looking for a Python-like isocalendar method, you can u=
se Rocky Meza's plugin</p>
<p><code>moment-isocalendar</code></p>
<p>Calling the isocalendar method on a moment will return an array like the=
 following:</p>
<p><code>[year, week_of_year, day_of_week, minutes_since_midnight]</code></=
p>
<pre><code class=3D"language-javascript">moment().isocalendar(); <span clas=
s=3D"comment">// [2012, 8, 5, 870]</span></code></pre>
<p>You can also reconstruct a moment from a isocalendar array.</p>
<pre><code class=3D"language-javascript">moment.fromIsocalendar([<span clas=
s=3D"number">2011</span>, <span class=3D"number">51</span>, <span class=3D"=
number">5</span>, <span class=3D"number">870</span>]).format(<span class=3D=
"string">'LLLL'</span>);
<span class=3D"comment">// "Friday, December 23 2011 2:30 PM"</span></code>=
</pre>
<p>The repository is located at <a href=3D"https://github.com/fusionbox/mom=
ent-isocalendar">github.com/fusionbox/moment-isocalendar</a></p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/range/" name=3D"/plugin=
s/range/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/range/">Date Ranges</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/03-range.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">npm install moment-range</code></p=
re>

							</div>
					=09
						<p>If you need to work with date ranges, you can use Gianni Chiappett=
a's plugin <code>moment-range</code>.</p>
<p>Documentation can be found on the homepage <a href=3D"https://github.com=
/gf3/moment-range">github.com/gf3/moment-range</a>.</p>
<p>And it is also available for the web at the repository below.</p>
<p>The repository is located at <a href=3D"https://github.com/gf3/moment-ra=
nge">github.com/gf3/moment-range</a></p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/twix/" name=3D"/plugins=
/twix/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/twix/">Twix</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/04-twix.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">npm install twix</code></pre>

							</div>
					=09
						<p>Another range plugin is Isaac Cambron's library <code>Twix</code>.=
 It has many
range-related features and excels at formatting ranges readably. For exampl=
e,</p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 t =3D moment(<span class=3D"string">"1/25/1982 9:30 AM"</span>).twix(<span=
 class=3D"string">"1/25/1982 1:30 PM"</span>);
t.isCurrent(); <span class=3D"comment">// false</span>
t.count(<span class=3D"string">'minutes'</span>); <span class=3D"comment">/=
/ 241</span>
t.format();  <span class=3D"comment">// 'Jan 25, 1982, 9:30 AM - 1:30 PM'</=
span>
t.simpleFormat(<span class=3D"string">"h:m"</span>); <span class=3D"comment=
">// '9:30 - 1:30'</span></code></pre>
<p>Full documentation of all the options and features is <a href=3D"http://=
icambron.github.io/twix.js">here</a>.</p>
<p>It's available on npm like so:</p>
<pre><code>npm install twix</code></pre>
<p>Or just grab the JS file from <a href=3D"https://raw.github.com/icambron=
/twix.js/master/bin/twix.js">here</a>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/twitter/" name=3D"/plug=
ins/twitter/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/twitter/">Twitter</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/05-twitter.md" target=3D"_blank"=
>=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>If you're trying to format times for tweets like the way Twitter d=
oes, you can use the <a href=3D"https://github.com/hijonathan/moment.twitte=
r">moment.twitter</a> plugin by <a href=3D"https://github.com/hijonathan">@=
hijonathan</a>.</p>
<p>It's a simple way to display both short and long versions of human-reada=
ble timestamps.</p>
<pre><code class=3D"language-javascript">moment().subtract(<span class=3D"n=
umber">5</span>, <span class=3D"string">'hours'</span>).twitterLong();
<span class=3D"comment">// 5 hours</span></code></pre>
<p>Yes, it does smart pluralization.</p>
<pre><code class=3D"language-javascript">moment().subtract(<span class=3D"n=
umber">1</span>, <span class=3D"string">'hour'</span>).twitterLong();
<span class=3D"comment">// 1 hour</span></code></pre>
<p>Not short enough for you?</p>
<pre><code class=3D"language-javascript">moment().subtract(<span class=3D"n=
umber">6</span>, <span class=3D"string">'days'</span>).twitterShort();
<span class=3D"comment">// 6d</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/jalaali/" name=3D"/plug=
ins/jalaali/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/jalaali/">Jalaali Calen=
dar</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/06-jalaali.md" target=3D"_blank"=
>=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">npm install moment-jalaali</code><=
/pre>

							</div>
					=09
						<p>If you want to work with Jalaali calendar system (Jalali, Persian,=
 Khorshidi or Shamsi), you can use Behrang Noruzi Niya's plugin <code>momen=
t-jalaali</code>.</p>
<p>When installed, it will wrap <code>moment</code> and moment will be able=
 to format and parse Jalaali years and months. Here is a short example:</p>
<pre><code class=3D"language-js"><span class=3D"keyword">var</span> m =3D m=
oment(<span class=3D"string">'1360/5/26'</span>, <span class=3D"string">'jY=
YYY/jM/jD'</span>); <span class=3D"comment">// Parse a Jalaali date.</span>
m.format(<span class=3D"string">'jYYYY/jM/jD [is] YYYY/M/D'</span>); <span =
class=3D"comment">// 1360/5/26 is 1981/8/17</span></code></pre>
<p>The repository is located at <a href=3D"https://github.com/behrang/momen=
t-jalaali">github.com/behrang/moment-jalaali</a>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/msdate/" name=3D"/plugi=
ns/msdate/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/msdate/">MSDate</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/07-msdate.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>If you are using OLE Automation dates in .NET check out Markit On =
Demand's <code>moment-msdate</code>. Using this plugin allows you to format=
 OA dates into JavaScript dates and vice-versa.</p>
<p>Convert a <code>moment</code> to an OA date:</p>
<pre><code class=3D"language-javascript">moment().toOADate(); <span class=
=3D"comment">// a floating point number</span></code></pre>
<p>Or, convert an OA date to a <code>moment</code>:</p>
<pre><code class=3D"language-javascript">moment.fromOADate(<span class=3D"n=
umber">41493</span>); <span class=3D"comment">// Wed Aug 07 2013 00:00:00 G=
MT-0600 (MDT)</span></code></pre>
<p>More information and detailed docs can be found on GitHub at <a href=3D"=
http://markitondemand.github.io/moment-msdate/"></a><a href=3D"http://marki=
tondemand.github.io/moment-msdate/">http://markitondemand.github.io/moment-=
msdate/</a>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/fquarter/" name=3D"/plu=
gins/fquarter/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/fquarter/">Fiscal Quart=
ers</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/08-fquarter.md" target=3D"_blank=
">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>If you ever have need for <a href=3D"http://en.wikipedia.org/wiki/=
Fiscal_year">Fiscal</a>, Calendar or Academic quarters, you can use the <a =
href=3D"https://github.com/robgallen/moment-fquarter">moment-fquarter</a> p=
lugin by <a href=3D"https://github.com/robgallen">@robgallen</a>.</p>
<p>At its simplest, just call the fquarter method on any moment object. It =
returns a formatted string with April being the first quarter.</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"201=
3-01-01"</span>).fquarter();
<span class=3D"comment">// Q4 2012/13</span></code></pre>
<p>You can pass in any month as the starting quarter, e.g. July</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"201=
3-01-01"</span>).fquarter(<span class=3D"number">7</span>);
<span class=3D"comment">// Q3 2012/13</span></code></pre>
<p>If you want calendar quarters, start in January</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"201=
3-01-01"</span>).fquarter(<span class=3D"number">1</span>);
<span class=3D"comment">// Q1 2013</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/preciserange/" name=3D"=
/plugins/preciserange/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/preciserange/">Precise =
Range</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/09-preciserange.md" target=3D"_b=
lank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
						<p>The <a href=3D"http://codebox.org.uk/pages/moment-date-range-plugi=
n">Precise Range</a> plugin, written by <a href=3D"https://github.com/codeb=
ox">Rob Dawson</a>, can be used to display exact, human-readable representa=
tions of date/time ranges</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"201=
4-01-01 12:00:00"</span>).preciseDiff(<span class=3D"string">"2015-03-04 16=
:05:06"</span>);
 <span class=3D"comment">// 1 year 2 months 3 days 4 hours 5 minutes 6 seco=
nds</span></code></pre>
<pre><code class=3D"language-javascript">moment.preciseDiff(<span class=3D"=
string">"2014-01-01 12:00:00"</span>, <span class=3D"string">"2014-04-20 12=
:00:00"</span>);
<span class=3D"comment">// 3 months 19 days</span></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/recur/" name=3D"/plugin=
s/recur/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/recur/">Recur</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/10-recur.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">npm install moment-recur</code></p=
re>

							</div>
					=09
						<p>If you need to work with recurring dates, you can use Casey Trimm'=
s plugin <code>moment-recur</code>.</p>
<p>This plugin will allow you to create length-based intervals (days, weeks=
, etc.) and calendar-based intervals (daysOfMonth, monthsOfYear, etc.). </p=
>
<p>It provides a <code>matches</code> function to test whether a date recur=
s according to the rules set, as well as generator functions to get the nex=
t and previous dates in a series.</p>
<p>The repository, documentation, and many more examples can be found at <a=
 href=3D"https://github.com/c-trimm/moment-recur">github.com/c-trimm/moment=
-recur</a></p>
<pre><code class=3D"language-js"><span class=3D"keyword">var</span> interva=
l =3D moment( <span class=3D"string">"01/01/2014"</span> ).recur().every(<s=
pan class=3D"number">2</span>).days(); <span class=3D"comment">// Length In=
terval</span>
interval.matches( <span class=3D"string">"01/03/2014"</span> ); <span class=
=3D"comment">// true</span>
interval.next( <span class=3D"number">2</span>, <span class=3D"string">"L"<=
/span> ); <span class=3D"comment">// ["01/03/2014", "01/05/2014"]</span>
interval.forget( <span class=3D"string">"days"</span> ); <span class=3D"com=
ment">// Remove a rule</span>
interval.dayOfMonth( <span class=3D"number">10</span> ); <span class=3D"com=
ment">// Calendar Interval</span>
interval.matches( <span class=3D"string">"05/10/2014"</span> ); <span class=
=3D"comment">// true</span>
interval.previous( <span class=3D"number">2</span>, <span class=3D"string">=
"L"</span> ); <span class=3D"comment">// ["12/10/2013", "11/10/2013"]</span=
></code></pre>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/parseformat/" name=3D"/=
plugins/parseformat/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/parseformat/">Parse Dat=
e Format</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/11-parseformat.md" target=3D"_bl=
ank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">npm install moment-parseformat</co=
de></pre>

							</div>
					=09
						<p>This plugin extracts the format of a date/time string. </p>
<pre><code class=3D"language-javascript"><span class=3D"keyword">var</span>=
 format =3D moment.parseFormat(<span class=3D"string">'Thursday, February 6=
th, 2014 9:20pm'</span>);
<span class=3D"comment">// dddd, MMMM Do, YYYY h:mma</span>
moment().format(format); <span class=3D"comment">// format</span></code></p=
re>
<p>That allows to create smart date inputs that let your users set a
Date/Time and lets you extract the user's preferred format for future usage=
.
Find an example usage of it at <a href=3D"https://minutes.io/new/Meeting">m=
inutes.io</a>.</p>
<p>The Plugin has been authored by <a href=3D"https://github.com/gr2m">@gr2=
m</a>.
Links: <a href=3D"http://gr2m.github.io/moment.parseFormat/">Demo</a> |
<a href=3D"https://github.com/gr2m/moment.parseFormat">Source</a></p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/jdateformatparser/" nam=
e=3D"/plugins/jdateformatparser/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/jdateformatparser/">Jav=
a DateFormat Parser</a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/12-jdateformatparser.md" target=
=3D"_blank">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">npm install moment-jdateformatpars=
er</code></pre>

							</div>
					=09
						<p>If you want to work with the <code>java.text.DateFormat</code> you=
 can use this plugin. </p>
<p>For example,</p>
<pre><code class=3D"language-javascript">moment(<span class=3D"string">"201=
3-12-24 14:30"</span>).formatWithJDF(<span class=3D"string">"dd.MM.yyyy"</s=
pan>);  <span class=3D"comment">// returns the formatted date "24.12.2013"<=
/span>
moment().toJDFString(<span class=3D"string">"DD.MM.YYYY"</span>);  <span cl=
ass=3D"comment">// returns the Java format pattern "dd.MM.yyyy"</span></cod=
e></pre>
<p>The repository is located at <a href=3D"https://github.com/MadMG/moment-=
jdateformatparser">github.com/MadMG/moment-jdateformatparser</a></p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/hijri/" name=3D"/plugin=
s/hijri/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/hijri/">Hijri Calendar<=
/a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/13-hijri.md" target=3D"_blank">=
=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">npm install moment-hijri</code></p=
re>

							</div>
					=09
						<p>If you want to work with Hijri calendar then you can use <code>mom=
ent-hijri</code> plugin. <code>moment-hijri</code> is a moment plugin for t=
he Hijri lunar calendar based on <a href=3D"http://www.ummulqura.org.sa/">U=
mm al-Qura</a> calculations. This plugin is developed by <a href=3D"https:/=
/github.com/xsoh">Suhail Alkowaileet</a>.</p>
<p>When you install it, it will wrap <code>moment</code> and you will be ab=
le to parse Hijri dates. Here is a short example:</p>
<pre><code class=3D"language-js">m =3D moment(<span class=3D"string">'1410/=
8/28'</span>, <span class=3D"string">'iYYYY/iM/iD'</span>); <span class=3D"=
comment">// Parse a Hijri date.</span>
m.format(<span class=3D"string">'iYYYY/iM/iD [is] YYYY/M/D'</span>); <span =
class=3D"comment">// 1410/8/28 is 1990/3/25</span></code></pre>
<p>The repository is located at <a href=3D"https://github.com/xsoh/moment-h=
ijri">github.com/xsoh/moment-hijri</a>.</p>

					</div>
				</article>
		=09
				<article class=3D"docs-method">
					<a class=3D"docs-method-target" id=3D"/plugins/transform/" name=3D"/pl=
ugins/transform/"></a>
				=09
						<h3 class=3D"docs-method-title">
							<a href=3D"http://momentjs.cn/docs/#/plugins/transform/">Transform</=
a>
						=09
						</h3>
						<a class=3D"docs-method-edit" href=3D"https://github.com/moment/momen=
tjs.com/blob/master/docs/moment/10-plugins/14-transform.md" target=3D"_blan=
k">=E7=BC=96=E8=BE=91</a>
				=09
					<div class=3D"docs-method-prose">
					=09
							<div class=3D"docs-method-signature">
								<pre><code class=3D"language-js">bower install moment-transform</co=
de></pre>

							</div>
					=09
						<p><a href=3D"http://a----.github.io/moment-transform/"><code>moment-=
transform</code></a>  is a plugin that manipulated dates through patterns. =
You can use basic operations =E2=80=93set/add/substract=E2=80=93 on individ=
ual parts (hours, month, =E2=80=A6) of a Moment instance.</p>
<pre><code class=3D"language-js">moment().transform(<span class=3D"string">=
'YYYY-MM-+01 00:00:00.000'</span>); <span class=3D"comment">// Tonight at m=
idnight</span>
moment().transform(<span class=3D"string">'14:30:00.000'</span>); <span cla=
ss=3D"comment">// Today, 2:30 pm</span>
moment().transform(<span class=3D"string">'YYYY-MM--30 00:00:00.000'</span>=
); <span class=3D"comment">// 30 days ago</span></code></pre>
<p>Optional parameters lets you specify custom patterns and force strict pa=
ttern usage (non-alphabetic characters are not mandatory in passed string b=
y default).</p>
<pre><code class=3D"language-js">moment().transform(<span class=3D"string">=
'+01MMYYYY'</span>, <span class=3D"string">'DD/MM/YYYY'</span>, <span class=
=3D"literal">false</span>); <span class=3D"comment">// Tomorrow, same time<=
/span>
moment().transform(<span class=3D"string">'+01MMYYYY'</span>, <span class=
=3D"string">'DD/MM/YYYY'</span>, <span class=3D"literal">true</span>); <spa=
n class=3D"comment">// Invalid date</span></code></pre>
<p>You can see it live <a href=3D"http://a----.github.io/moment-transform/"=
>there</a>  while the repository is <a href=3D"https://github.com/A----/mom=
ent-transform">here</a>.</p>

					</div>
				</article>
		=09
	=09
	</div>
</div>


		<footer>
			<p style=3D"position: relative;"><a href=3D"http://momentjs.cn/" style=
=3D"color: inherit;">Moment.js=E4=B8=AD=E6=96=87=E7=BD=91</a>=EF=BC=8C=E6=
=9C=AC=E7=AB=99=E7=94=B1 <a href=3D"http://nodejs.cn/" style=3D"color: inhe=
rit;">Node.js=E4=B8=AD=E6=96=87=E7=BD=91</a> =E6=8F=90=E4=BE=9B=E6=8A=80=E6=
=9C=AF=E6=94=AF=E6=8C=81</p>

		</footer>

       =20
	=09
	=09
		=09
	=09

   =20
=09

</body><template shadowmode=3D"v0"><shadow></shadow><style></style></templa=
te></html>
------MultipartBoundary--BZqnSCWLxFFn7kj0jvT0v79lIWIV21a0yTWiBQTBNi----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://s.nodejs.cn/moment/static/css/style.css

@charset "utf-8";

article, aside, details, figcaption, figure, footer, header, hgroup, nav, s=
ection { display: block; }

audio, canvas, video { display: inline-block; }

audio:not([controls]) { display: none; }

[hidden] { display: none; }

html { font-size: 100%; overflow-y: scroll; text-size-adjust: 100%; }

body { margin: 0px; }

body, button, input, select, textarea { font-family: sans-serif; }

a:focus { outline: dotted thin; }

a:hover, a:active { outline: 0px; }

abbr[title] { border-bottom: 1px dotted; }

b, strong { font-weight: bold; }

blockquote { margin: 1em 40px; }

dfn { font-style: italic; }

mark { background: rgb(255, 255, 0); }

pre, code, kbd, samp { font-family: monospace, serif; font-size: 1em; }

pre { white-space: pre-wrap; overflow-wrap: break-word; }

q { quotes: none; }

q::before, q::after { content: none; }

small { font-size: 75%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

ul, ol { margin: 1em 0px; padding: 0px 0px 0px 40px; }

dd { margin: 0px 0px 0px 40px; }

nav ul, nav ol { list-style: none none; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

figure { margin: 0px; }

form { margin: 0px; }

fieldset { border: 1px solid rgb(192, 192, 192); margin: 0px 2px; padding: =
0.35em 0.625em 0.75em; }

legend { border: 0px; }

button, input, select, textarea { font-size: 100%; margin: 0px; vertical-al=
ign: baseline; }

button, input { line-height: normal; }

button, input[type=3D"button"], input[type=3D"reset"], input[type=3D"submit=
"] { cursor: pointer; -webkit-appearance: button; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"search"] { -webkit-appearance: textfield; box-sizing: content=
-box; }

input[type=3D"search"]::-webkit-search-decoration { -webkit-appearance: non=
e; }

textarea { overflow: auto; vertical-align: top; }

table { border-collapse: collapse; border-spacing: 0px; }

body { font-family: "Helvetica Neue", Arial, sans-serif; font-size: 16px; l=
ine-height: 1.6; background: rgb(255, 255, 255); }

* { box-sizing: border-box; }

a { color: rgb(51, 85, 204); }

h1, h2, h3, h4, h5, h6 { font-family: Montserrat, "Microsoft Yahei", sans-s=
erif; font-weight: 400; }

h2 { font-size: 30px; }

h3 { font-size: 24px; }

h4 { font-size: 20px; }

pre, code, kbd, samp { font-family: Consolas, monaco, monospace; }

pre { border: 1px solid rgba(34, 34, 34, 0.2); border-radius: 4px; color: r=
gb(34, 34, 34); font-size: 14px; padding: 5px 8px; margin: 0px 0px 20px; wh=
ite-space: pre; overflow-wrap: normal; overflow-x: auto; line-height: 24px;=
 background: rgba(34, 34, 34, 0.03); font-weight: 100; }

pre a { color: rgb(102, 102, 102); }

pre .title, pre .params { font-style: italic; }

pre .literal, pre .type { color: rgb(160, 177, 228); }

pre .value, pre .string { color: rgb(204, 51, 68); }

pre .number { color: rgb(75, 170, 143); }

pre .regexp { color: rgb(0, 153, 34); }

pre .comment { color: rgba(34, 34, 34, 0.5); }

code { padding: 1px 4px; background: rgba(34, 34, 34, 0.03); border-radius:=
 3px; border: 1px solid rgba(34, 34, 34, 0.1); font-size: 14px; }

pre code { padding: 0px; border: 0px; background: none; }

.centered { max-width: 940px; margin: 0px auto; }

.hero { padding: 30px 0px; border-bottom: 1px solid rgba(34, 34, 34, 0.2); =
background: url("../img/bg.png") 0px 50%; }

.is-moment .hero { background-color: rgb(97, 178, 167); box-shadow: rgb(97,=
 178, 167) 0px 10px 10px inset; }

.is-moment-timezone .hero { background-color: rgb(78, 124, 173); box-shadow=
: rgb(78, 124, 173) 0px 10px 10px inset; }

.hero-circle { width: 180px; height: 180px; margin: 0px auto; position: rel=
ative; border: 8px solid rgb(255, 255, 255); border-radius: 50%; box-shadow=
: rgba(34, 34, 34, 0.3) 0px 1px 8px, rgba(34, 34, 34, 0.3) 0px 1px 8px inse=
t; background: url("../img/bg.png") 0px 50%; }

.is-moment .hero-circle { background-color: rgb(97, 178, 167); }

.is-moment-timezone .hero-circle { background-color: rgb(78, 124, 173); }

.hero-face { width: 100%; height: 100%; }

.hero-face::after { position: absolute; top: 50%; left: 50%; width: 12px; h=
eight: 12px; margin: -6px 0px 0px -6px; background: rgb(255, 255, 255); bor=
der-radius: 6px; content: ""; display: block; }

.hero-hour { width: 0px; height: 0px; position: absolute; top: 50%; left: 5=
0%; margin: -4px 0px -4px -25%; padding: 4px 0px 4px 25%; background: rgb(2=
55, 255, 255); transform-origin: 100% 50% 0px; border-radius: 4px 0px 0px 4=
px; }

.hero-minute { width: 0px; height: 0px; position: absolute; top: 50%; left:=
 50%; margin: -40% -3px 0px; padding: 40% 3px 0px; background: rgb(255, 255=
, 255); transform-origin: 50% 100% 0px; border-radius: 3px 3px 0px 0px; }

.hero-second { width: 0px; height: 0px; position: absolute; top: 50%; left:=
 50%; margin: -40% -1px 0px 0px; padding: 40% 1px 0px; background: rgb(255,=
 255, 255); transform-origin: 50% 100% 0px; }

.hero-oneline, .hero-title { text-align: center; color: rgb(255, 255, 255);=
 text-shadow: rgba(34, 34, 34, 0.5) 1px 1px 2px; }

.hero-oneline h1, .hero-title h1 { font-size: 60px; margin: 0px; }

.hero-oneline h1 span, .hero-title h1 span { font-size: 0.5em; }

.is-moment .hero-oneline h1 span, .is-moment .hero-title h1 span { color: r=
gb(176, 217, 211); }

.is-moment-timezone .hero-oneline h1 span, .is-moment-timezone .hero-title =
h1 span { color: rgb(167, 190, 214); }

.hero-oneline h2, .hero-title h2 { font-size: 24px; margin: 0px; }

.hero-oneline { position: relative; padding: 10px 20px; text-align: left; }

.hero-oneline h1 { font-size: 32px; }

.hero-centered { max-width: 1024px; margin: 0px auto; }

.hero-world { position: absolute; top: 4px; left: 4px; right: 4px; bottom: =
4px; border-radius: 50%; background: url("../img/world.png") 25% 0px / cove=
r; animation-iteration-count: 1; animation-duration: 3s; animation-delay: 1=
s; animation-name: map; }

@-webkit-keyframes map {=20
  0% { background-position: 625% 0px; }
  100% { background-position: 25% 0px; }
}

@keyframes map {=20
  0% { background-position: 625% 0px; }
  100% { background-position: 25% 0px; }
}

footer { font-family: Montserrat, "Microsoft Yahei", sans-serif; background=
: url("../img/bg.png"); border-top: 1px solid rgba(34, 34, 34, 0.2); paddin=
g: 20px; color: rgb(255, 255, 255); font-size: 16px; }

footer p { margin: 0px auto; max-width: 1024px; padding: 0px 20px; }

.is-moment footer { background-color: rgb(97, 178, 167); }

.is-moment-timezone footer { background-color: rgb(78, 124, 173); }

.nav { height: 60px; background: rgb(34, 34, 34); padding: 0px 20px; font-f=
amily: Montserrat, "Microsoft Yahei", sans-serif; font-weight: 400; }

.nav-projects { float: left; }

.nav-project { display: block; line-height: 30px; padding: 15px 20px 15px 6=
0px; float: left; position: relative; text-decoration: none; color: rgb(255=
, 255, 255); width: 155px; font-size: 14px; text-transform: uppercase; text=
-shadow: rgba(34, 34, 34, 0.3) 0px 1px 1px; }

.nav-project svg { position: absolute; top: 10px; left: 10px; width: 40px; =
height: 40px; }

.nav-project-moment { color: rgb(97, 178, 167); }

.nav-project-moment ellipse { stroke: rgb(97, 178, 167); }

.nav-project-moment path { fill: rgba(97, 178, 167, 0.6); }

.nav-project-moment.active { background: rgb(97, 178, 167); color: rgb(255,=
 255, 255); }

.nav-project-moment.active ellipse { stroke: rgb(255, 255, 255); }

.nav-project-moment.active path { fill: rgb(176, 217, 211); }

.nav-project-moment-timezone { line-height: 15px; padding-top: 15px; paddin=
g-bottom: 15px; color: rgb(78, 124, 173); }

.nav-project-moment-timezone ellipse { stroke: rgb(78, 124, 173); }

.nav-project-moment-timezone path { fill: rgba(78, 124, 173, 0.6); }

.nav-project-moment-timezone.active { background: rgb(78, 124, 173); color:=
 rgb(255, 255, 255); }

.nav-project-moment-timezone.active ellipse { stroke: rgb(255, 255, 255); }

.nav-project-moment-timezone.active path { fill: rgb(167, 190, 214); }

.nav-pages { float: right; padding: 15px 0px; }

.nav-pages a { display: inline-block; line-height: 30px; padding: 0px 10px;=
 float: left; text-decoration: none; color: rgb(255, 255, 255); border-radi=
us: 2px; font-size: 14px; margin: 0px 2px; }

.is-moment .nav-pages a { color: rgb(97, 178, 167); }

.is-moment .nav-pages a:hover { background: rgba(97, 178, 167, 0.2); }

.is-moment .nav-pages a:active, .is-moment .nav-pages a:focus, .is-moment .=
nav-pages a.active { color: rgb(34, 34, 34); background: rgb(97, 178, 167);=
 }

.is-moment-timezone .nav-pages a { color: rgb(78, 124, 173); }

.is-moment-timezone .nav-pages a:hover { background: rgba(78, 124, 173, 0.2=
); }

.is-moment-timezone .nav-pages a:active, .is-moment-timezone .nav-pages a:f=
ocus, .is-moment-timezone .nav-pages a.active { color: rgb(34, 34, 34); bac=
kground: rgb(78, 124, 173); }

.builds { padding: 40px 20px; overflow: hidden; max-width: 800px; margin: 0=
px auto; }

.builds h3 { margin: 0px 0px 10px; text-align: center; }

.builds-download { width: 50%; float: left; padding-right: 10px; }

.builds-packages { margin-left: 50%; padding-left: 10px; }

.builds-button { font-family: Montserrat, "Microsoft Yahei", sans-serif; di=
splay: block; border: 1px solid rgba(34, 34, 34, 0.5); text-decoration: non=
e; color: rgb(34, 34, 34); text-align: center; background: url("../img/bg.p=
ng") 0px 50%; }

.builds-button .filesize { font-size: 14px; color: rgba(34, 34, 34, 0.7); }

.builds-button-source { border-radius: 4px 4px 0px 0px; text-shadow: rgba(3=
4, 34, 34, 0.5) 1px 1px 2px; padding: 10px 15px; font-size: 20px; font-weig=
ht: 700; vertical-align: baseline; line-height: 30px; color: rgb(255, 255, =
255); }

.is-moment .builds-button-source { background-color: rgb(97, 178, 167); }

.is-moment .builds-button-source:hover { background-color: rgb(113, 186, 17=
6); }

.is-moment .builds-button-source:active { background-color: rgb(91, 164, 15=
4); }

.is-moment-timezone .builds-button-source { background-color: rgb(78, 124, =
173); }

.is-moment-timezone .builds-button-source:hover { background-color: rgb(96,=
 137, 181); }

.is-moment-timezone .builds-button-source:active { background-color: rgb(74=
, 115, 159); }

.builds-button-gzipped { border-radius: 0px 0px 4px 4px; border-right-color=
: rgba(34, 34, 34, 0.3); border-bottom-color: rgba(34, 34, 34, 0.3); border=
-left-color: rgba(34, 34, 34, 0.3); padding: 5px 15px; font-size: 14px; mar=
gin-bottom: 10px; border-top: 0px; }

.is-moment .builds-button-gzipped { background: rgba(97, 178, 167, 0.2); }

.is-moment .builds-button-gzipped:hover { background: rgba(97, 178, 167, 0.=
1); }

.is-moment .builds-button-gzipped:active { background: rgba(97, 178, 167, 0=
.4); }

.is-moment-timezone .builds-button-gzipped { background: rgba(78, 124, 173,=
 0.2); }

.is-moment-timezone .builds-button-gzipped:hover { background: rgba(78, 124=
, 173, 0.1); }

.is-moment-timezone .builds-button-gzipped:active { background: rgba(78, 12=
4, 173, 0.4); }

.builds-button-gzipped .filesize::after { content: " gz"; }

.docs-nav { font-family: Montserrat, "Microsoft Yahei", sans-serif; positio=
n: fixed; top: 150px; bottom: 0px; left: 50%; margin-left: 256px; max-width=
: 256px; width: 25%; padding: 20px; overflow-y: auto; font-size: 14px; line=
-height: 18px; }

.is-moment .docs-nav .active a { border-left-color: rgba(97, 178, 167, 0.3)=
; }

.is-moment-timezone .docs-nav .active a { border-left-color: rgba(78, 124, =
173, 0.3); }

.docs-nav a { display: block; text-decoration: none; border-left: 2px solid=
 transparent; }

.is-moment .docs-nav a:hover, .is-moment .docs-nav a.active { background: r=
gba(97, 178, 167, 0.1); border-left-color: rgb(97, 178, 167); }

.is-moment-timezone .docs-nav a:hover, .is-moment-timezone .docs-nav a.acti=
ve { background: rgba(78, 124, 173, 0.1); border-left-color: rgb(78, 124, 1=
73); }

.docs-nav-item { padding: 3px 25px; }

.is-moment .docs-nav-item { color: rgb(97, 178, 167); }

.is-moment-timezone .docs-nav-item { color: rgb(78, 124, 173); }

.docs-nav-section .docs-nav-item { display: none; }

.docs-nav-section.active .docs-nav-item { display: block; }

.docs-nav-section-title { color: rgb(34, 34, 34); font-size: 18px; line-hei=
ght: 24px; padding: 5px 10px; }

.docs { margin: 0px auto; max-width: 1024px; }

.docs-content { margin-right: 25%; padding-right: 20px; padding-left: 30px;=
 color: rgb(34, 34, 34); }

.docs-method-prose p { font-size: 16px; margin: 0px 0px 10px; }

.docs-method-prose pre { padding: 5px 10px; }

.docs-method-prose table { width: 100%; margin-bottom: 20px; }

.docs-method-prose td, .docs-method-prose th { padding: 3px 10px; backgroun=
d: rgb(255, 255, 255); text-align: left; }

.docs-method-prose td { border: 1px solid rgb(222, 222, 222); }

.docs-method-prose th { border: 1px solid rgb(189, 189, 189); }

.docs-method-prose td:nth-of-type(1) { white-space: pre; text-align: right;=
 width: 0px; }

.docs-method-prose td:last-of-type { width: 100%; }

.docs-method-prose tr:nth-child(2n+1) td, .docs-method-prose tr:nth-child(2=
n+1) th { background: 0px center; }

.docs-method-prose ol { counter-reset: li -1; list-style: none; padding-lef=
t: 15px; }

.docs-method-prose ol > li::before { content: counter(li) " "; counter-incr=
ement: li 1; font-weight: bold; }

.docs-section { padding-top: 40px; }

.docs-section-title { color: rgba(34, 34, 34, 0.8); padding: 10px 20px; mar=
gin: 0px 0px 20px; font-size: 45px; line-height: 60px; border-radius: 4px; =
background: url("../img/bg.png") 0px 50%; border: 1px solid rgba(34, 34, 34=
, 0.3); }

.is-moment .docs-section-title { background-color: rgb(97, 178, 167); }

.is-moment-timezone .docs-section-title { background-color: rgb(78, 124, 17=
3); }

.docs-section-title a { color: rgb(255, 255, 255); text-decoration: none; }

.docs-method { margin: 0px 0px 60px; position: relative; }

.docs-method-title { color: rgba(34, 34, 34, 0.8); padding: 0px; margin: 0p=
x 0px 20px; font-size: 30px; line-height: 40px; }

.docs-method-title a { color: rgb(34, 34, 34); text-decoration: none; posit=
ion: relative; }

.docs-method-title a::before { position: absolute; top: 0px; right: 100%; d=
isplay: block; color: rgba(34, 34, 34, 0.1); content: "#"; padding-right: 5=
px; }

.docs-method-title a:hover { text-decoration: underline; }

.docs-method-title a:hover::before { color: rgba(34, 34, 34, 0.3); }

.docs-method-title span { color: rgba(34, 34, 34, 0.2); font-size: 0.75em; =
}

.docs-method-edit { position: absolute; top: 0px; right: -20px; line-height=
: 40px; color: rgba(34, 34, 34, 0.3); text-decoration: none; padding: 0px 2=
0px; display: block; }

.docs-method-edit:hover { color: rgb(34, 34, 34); text-decoration: underlin=
e; }

.docs-method-signature pre { background: rgba(34, 34, 34, 0.2); position: r=
elative; }

.docs-method-signature pre::after { position: absolute; top: 5px; right: 10=
px; content: "=E8=AF=AD=E6=B3=95"; color: rgba(34, 34, 34, 0.3); font-size:=
 12px; }

.is-moment .docs-method-signature pre { border-color: rgba(97, 178, 167, 0.=
7); background: rgba(97, 178, 167, 0.15); }

.is-moment-timezone .docs-method-signature pre { border-color: rgba(78, 124=
, 173, 0.7); background: rgba(78, 124, 173, 0.15); }

.tests { margin: 0px auto; padding: 40px 0px; max-width: 1024px; }

.tests-module { margin: 0px 0px 10px 25%; border: 1px solid rgba(34, 34, 34=
, 0.3); background: rgb(255, 255, 255); border-radius: 4px; position: relat=
ive; }

.tests-module-title { position: absolute; top: 0px; right: 100%; width: 50%=
; padding-right: 20px; margin: 0px; line-height: 32px; text-align: right; }

.tests-test { font-size: 14px; font-family: monospace; }

.tests-test + .tests-test { border-top: 1px solid rgba(34, 34, 34, 0.1); }

.tests-test.has-failed { border: 0px; outline: rgb(221, 51, 51) solid 1px; =
}

.tests-test-title { padding: 5px 14px; text-align: right; color: rgba(34, 3=
4, 34, 0.5); }

.tests-test-title strong { float: left; color: rgb(34, 34, 34); }

.has-failed .tests-test-title strong { color: rgb(221, 51, 51); }

.tests-asserts { display: none; }

.is-open .tests-asserts { display: block; }

.tests-assert { padding: 4px 14px 4px 29px; }

.tests-assert.has-failed { background: rgba(221, 51, 51, 0.1); border-style=
: solid; border-color: rgb(221, 51, 51); border-image: initial; border-widt=
h: 1px 0px; color: rgb(221, 51, 51); }

.tests-assert pre { margin: 10px 0px; background: rgba(255, 255, 255, 0.5);=
 border-color: rgb(221, 51, 51); }

#nodeunit-banner { font-family: Montserrat, "Microsoft Yahei", sans-serif; =
margin-top: -5px; border-radius: 4px; line-height: 30px; font-size: 24px; t=
ext-align: right; float: right; }

#nodeunit-banner.has-failed::before { position: absolute; bottom: -10px; he=
ight: 6px; background: rgb(221, 51, 51); content: ""; left: 0px; right: 0px=
; display: block; }

#nodeunit-banner.has-failed .fail-label { color: rgb(221, 51, 51); text-sha=
dow: none; }

#nodeunit-banner .test-num { font-family: monospace; }

.tests-reporting { margin-left: 25%; }

.tests-reporting .button { font-family: Montserrat, "Microsoft Yahei", sans=
-serif; display: block; border: 1px solid rgba(34, 34, 34, 0.5); text-decor=
ation: none; text-align: center; background: url("../img/bg.png") 0px 50%; =
border-radius: 4px; text-shadow: rgba(34, 34, 34, 0.5) 1px 1px 2px; padding=
: 10px 15px; font-size: 20px; line-height: 30px; color: rgb(255, 255, 255);=
 }

.is-moment .tests-reporting .button { background-color: rgb(97, 178, 167); =
}

.is-moment .tests-reporting .button:hover { background-color: rgb(113, 186,=
 176); }

.is-moment .tests-reporting .button:active { background-color: rgb(91, 164,=
 154); }

.is-moment-timezone .tests-reporting .button { background-color: rgb(78, 12=
4, 173); }

.is-moment-timezone .tests-reporting .button:hover { background-color: rgb(=
96, 137, 181); }

.is-moment-timezone .tests-reporting .button:active { background-color: rgb=
(74, 115, 159); }

.tests-reporting .success { font-family: Montserrat, "Microsoft Yahei", san=
s-serif; text-align: center; font-size: 24px; }

.page-moment-index { max-width: 800px; margin: 0px auto; padding: 0px 20px;=
 }

.page-moment-index h3 { margin: 10px 0px; text-align: center; }

.global-warning { background-color: rgb(237, 62, 62); padding: 15px; border=
-radius: 5px; margin-bottom: 30px; color: white; font-size: larger; border:=
 1px solid white; }

.locales { margin-bottom: 20px; }

.locales h2 { padding: 0px 0px 20px; margin: 0px; }

.locales .button { display: inline-block; padding: 5px 10px; margin: 4px 2p=
x; background: rgb(255, 255, 255); border-radius: 3px; border: 1px solid rg=
b(153, 153, 153); cursor: pointer; }

.locales .button:hover { box-shadow: rgba(0, 0, 0, 0.2) 1px 0px 5px; }

.locales .button.active { background: rgb(51, 51, 51); color: rgb(204, 204,=
 204); border-color: rgb(0, 0, 0); }

.map { margin: 0px auto; max-width: 1024px; padding: 40px; }

.map-wrap { background: url("../img/bg.png") rgb(78, 124, 173); padding: 1p=
x; border-radius: 3px; position: relative; }

.map-label { line-height: 60px; font-size: 24px; margin: 0px; color: rgb(78=
, 124, 173); font-family: monospace; }

.map-label span { display: block; }

.map-label .map-label-name { float: left; width: 50%; padding-right: 10px; =
text-align: right; }

.map-label .map-label-time { margin-left: 50%; padding-left: 10px; text-ali=
gn: left; }

.map-inset { padding-bottom: 50%; background: url("../img/world.png") 50% 5=
0% / cover; position: relative; border-radius: 2px; }

.map-inset span { width: 6px; height: 6px; margin: -3px 0px 0px -3px; backg=
round: rgb(255, 255, 255); position: absolute; border-radius: 3px; border: =
1px solid rgb(78, 124, 173); }

.map-inset span.active { background: rgb(78, 124, 173); }

.map-inset .map-axis-x { position: absolute; top: 0px; bottom: 0px; border-=
left: 1px solid rgba(78, 124, 173, 0.5); width: 0px; transition: left 50ms =
ease-out 0s; }

.map-inset .map-axis-y { position: absolute; left: 0px; right: 0px; border-=
top: 1px solid rgba(78, 124, 173, 0.5); height: 0px; transition: top 50ms e=
ase-out 0s; }
------MultipartBoundary--BZqnSCWLxFFn7kj0jvT0v79lIWIV21a0yTWiBQTBNi----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: http://s.nodejs.cn/moment/static/img/bg.png

iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAKQ2lDQ1BJQ0MgcHJvZmlsZQAAeNqd
U3dYk/cWPt/3ZQ9WQtjwsZdsgQAiI6wIyBBZohCSAGGEEBJAxYWIClYUFRGcSFXEgtUKSJ2I4qAo
uGdBiohai1VcOO4f3Ke1fXrv7e371/u855zn/M55zw+AERImkeaiagA5UoU8Otgfj09IxMm9gAIV
SOAEIBDmy8JnBcUAAPADeXh+dLA//AGvbwACAHDVLiQSx+H/g7pQJlcAIJEA4CIS5wsBkFIAyC5U
yBQAyBgAsFOzZAoAlAAAbHl8QiIAqg0A7PRJPgUA2KmT3BcA2KIcqQgAjQEAmShHJAJAuwBgVYFS
LALAwgCgrEAiLgTArgGAWbYyRwKAvQUAdo5YkA9AYACAmUIszAAgOAIAQx4TzQMgTAOgMNK/4Klf
cIW4SAEAwMuVzZdL0jMUuJXQGnfy8ODiIeLCbLFCYRcpEGYJ5CKcl5sjE0jnA0zODAAAGvnRwf44
P5Dn5uTh5mbnbO/0xaL+a/BvIj4h8d/+vIwCBAAQTs/v2l/l5dYDcMcBsHW/a6lbANpWAGjf+V0z
2wmgWgrQevmLeTj8QB6eoVDIPB0cCgsL7SViob0w44s+/zPhb+CLfvb8QB7+23rwAHGaQJmtwKOD
/XFhbnauUo7nywRCMW735yP+x4V//Y4p0eI0sVwsFYrxWIm4UCJNx3m5UpFEIcmV4hLpfzLxH5b9
CZN3DQCshk/ATrYHtctswH7uAQKLDljSdgBAfvMtjBoLkQAQZzQyefcAAJO/+Y9AKwEAzZek4wAA
vOgYXKiUF0zGCAAARKCBKrBBBwzBFKzADpzBHbzAFwJhBkRADCTAPBBCBuSAHAqhGJZBGVTAOtgE
tbADGqARmuEQtMExOA3n4BJcgetwFwZgGJ7CGLyGCQRByAgTYSE6iBFijtgizggXmY4EImFINJKA
pCDpiBRRIsXIcqQCqUJqkV1II/ItchQ5jVxA+pDbyCAyivyKvEcxlIGyUQPUAnVAuagfGorGoHPR
dDQPXYCWomvRGrQePYC2oqfRS+h1dAB9io5jgNExDmaM2WFcjIdFYIlYGibHFmPlWDVWjzVjHVg3
dhUbwJ5h7wgkAouAE+wIXoQQwmyCkJBHWExYQ6gl7CO0EroIVwmDhDHCJyKTqE+0JXoS+cR4Yjqx
kFhGrCbuIR4hniVeJw4TX5NIJA7JkuROCiElkDJJC0lrSNtILaRTpD7SEGmcTCbrkG3J3uQIsoCs
IJeRt5APkE+S+8nD5LcUOsWI4kwJoiRSpJQSSjVlP+UEpZ8yQpmgqlHNqZ7UCKqIOp9aSW2gdlAv
U4epEzR1miXNmxZDy6Qto9XQmmlnafdoL+l0ugndgx5Fl9CX0mvoB+nn6YP0dwwNhg2Dx0hiKBlr
GXsZpxi3GS+ZTKYF05eZyFQw1zIbmWeYD5hvVVgq9ip8FZHKEpU6lVaVfpXnqlRVc1U/1XmqC1Sr
VQ+rXlZ9pkZVs1DjqQnUFqvVqR1Vu6k2rs5Sd1KPUM9RX6O+X/2C+mMNsoaFRqCGSKNUY7fGGY0h
FsYyZfFYQtZyVgPrLGuYTWJbsvnsTHYF+xt2L3tMU0NzqmasZpFmneZxzQEOxrHg8DnZnErOIc4N
znstAy0/LbHWaq1mrX6tN9p62r7aYu1y7Rbt69rvdXCdQJ0snfU6bTr3dQm6NrpRuoW623XP6j7T
Y+t56Qn1yvUO6d3RR/Vt9KP1F+rv1u/RHzcwNAg2kBlsMThj8MyQY+hrmGm40fCE4agRy2i6kcRo
o9FJoye4Ju6HZ+M1eBc+ZqxvHGKsNN5l3Gs8YWJpMtukxKTF5L4pzZRrmma60bTTdMzMyCzcrNis
yeyOOdWca55hvtm82/yNhaVFnMVKizaLx5balnzLBZZNlvesmFY+VnlW9VbXrEnWXOss623WV2xQ
G1ebDJs6m8u2qK2brcR2m23fFOIUjynSKfVTbtox7PzsCuya7AbtOfZh9iX2bfbPHcwcEh3WO3Q7
fHJ0dcx2bHC866ThNMOpxKnD6VdnG2ehc53zNRemS5DLEpd2lxdTbaeKp26fesuV5RruutK10/Wj
m7ub3K3ZbdTdzD3Ffav7TS6bG8ldwz3vQfTw91jicczjnaebp8LzkOcvXnZeWV77vR5Ps5wmntYw
bcjbxFvgvct7YDo+PWX6zukDPsY+Ap96n4e+pr4i3z2+I37Wfpl+B/ye+zv6y/2P+L/hefIW8U4F
YAHBAeUBvYEagbMDawMfBJkEpQc1BY0FuwYvDD4VQgwJDVkfcpNvwBfyG/ljM9xnLJrRFcoInRVa
G/owzCZMHtYRjobPCN8Qfm+m+UzpzLYIiOBHbIi4H2kZmRf5fRQpKjKqLupRtFN0cXT3LNas5Fn7
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
dImEzVUFAAAAAElFTkSuQmCC

------MultipartBoundary--BZqnSCWLxFFn7kj0jvT0v79lIWIV21a0yTWiBQTBNi------
