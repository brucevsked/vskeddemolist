准备参考
https://zhuanlan.zhihu.com/p/63769951

对象类权限 (参考bytebuddy与spring切面)
能否访问用户这个对象的数据
user 权限

动作类权限(参考bytebuddy与spring切面)
能否进行 用户登录 这个动作的执行
user.login() 权限
//TODO 重载方法如何处理？
重载方法加入参数类型，参数顺序处理
user.add(String userName);
user.add(String userName,Date birthday);


对象属性类权限(参考bytebuddy与spring切面)
能否访问员工薪资这个属性
employee.salary

对象属性数据类权限
能否访问员工薪资这个属性的数据（新增数据处理与已存在数据处理，）
employee.salary=123456
新增数据
修改数据
情况1，新增与修改数据，先查询是否有权限访问属性，如果有权限访问属性则自动添加访问权限，如果没有则拒绝
情况2，新增与修改数据，不管有没有访问属性权限，统一默认拒绝，直到管理员或其他人配置上这条权限为止
情况3，设置同意规则，当新添加的数据满足此规则时，自动添加允许权限，当添加数据不满足此规则时自动拒绝

上下级权限

领导A下面有B,C,D三位员工
领导A可以看到B，C，D三位员工的数据。
员工B，C，D只能查看自己的数据。

--------------------------------------------------------------------------------

场景1：

账号
用户
凭证

顾客使用身份证（账号），证明他是张三（用户），购买车票（凭证）后可以乘坐火车。

--------------------------------------------------------------------------------

权限绑定在角色上，角色必须属于某种组织机构

组织机构有上下级之分，从0级开始
角色有等级之分，从0级开始

先有组织机构（有上下级）
后有角色（有上下级）
再有用户


某组织机构的某个角色的某个用户有操作某对象的权限
XX部门的XX经理名字是XXX有操作XXX的权限

--------------------------------------------------------------------------------
基本权限
读权限，写权限
写权限可以细分为，创建，修改，删除
这里的删除并不是真正删除，而是标记删除。
但是当客户因为用户隐私需要物理删除时，可以制定一个期限，如15天后，再进行物理删除相关用户数据。

查看
创建
修改
删除

但是当实际使用时，我们不会使用抽象的这种权限概念。而是使用具体业务概念。
如用户注册=创建用户
用户信息更新=修改用户
用户注销=物理删除用户相关数据

--------------------------------------------------------------------------------

超级管理员角色
有且只有一个，不能删除，扔有所有权限

组织->部门->职位->岗位
权限<-角色->用户